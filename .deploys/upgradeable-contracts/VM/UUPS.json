{
  "id": "-",
  "network": "VM",
  "deployments": {
    "0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B": {
      "date": "2024-08-01T07:13:57.172Z",
      "contractName": "DZapNFTStaking",
      "implementationAddress": "0xf8e81D47203A594245E36C48e151709F0C19fBe8"
    },
    "0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d": {
      "date": "2024-08-05T07:25:30.148Z",
      "contractName": "NewDZapNFTStaking",
      "implementationAddress": "0xcD6a42782d230D7c13A74ddec5dD140e55499Df9",
      "solcOutput": {
        "contracts": {
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
            "OwnableUpgradeable": {
              "abi": [
                {
                  "inputs": [],
                  "name": "InvalidInitialization",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotInitializing",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnableInvalidOwner",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "OwnableUnauthorizedAccount",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint64",
                      "name": "version",
                      "type": "uint64"
                    }
                  ],
                  "name": "Initialized",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "previousOwner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnershipTransferred",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "owner",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "renounceOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "transferOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
                "errors": {
                  "InvalidInitialization()": [
                    {
                      "details": "The contract is already initialized."
                    }
                  ],
                  "NotInitializing()": [
                    {
                      "details": "The contract is not initializing."
                    }
                  ],
                  "OwnableInvalidOwner(address)": [
                    {
                      "details": "The owner is not a valid owner account. (eg. `address(0)`)"
                    }
                  ],
                  "OwnableUnauthorizedAccount(address)": [
                    {
                      "details": "The caller account is not authorized to perform an operation."
                    }
                  ]
                },
                "events": {
                  "Initialized(uint64)": {
                    "details": "Triggered when the contract has been initialized or reinitialized."
                  }
                },
                "kind": "dev",
                "methods": {
                  "owner()": {
                    "details": "Returns the address of the current owner."
                  },
                  "renounceOwnership()": {
                    "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                  },
                  "transferOwnership(address)": {
                    "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "owner()": "8da5cb5b",
                  "renounceOwnership()": "715018a6",
                  "transferOwnership(address)": "f2fde38b"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
            "Initializable": {
              "abi": [
                {
                  "inputs": [],
                  "name": "InvalidInitialization",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotInitializing",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint64",
                      "name": "version",
                      "type": "uint64"
                    }
                  ],
                  "name": "Initialized",
                  "type": "event"
                }
              ],
              "devdoc": {
                "custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
                "details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
                "errors": {
                  "InvalidInitialization()": [
                    {
                      "details": "The contract is already initialized."
                    }
                  ],
                  "NotInitializing()": [
                    {
                      "details": "The contract is not initializing."
                    }
                  ]
                },
                "events": {
                  "Initialized(uint64)": {
                    "details": "Triggered when the contract has been initialized or reinitialized."
                  }
                },
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {}
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
            "UUPSUpgradeable": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    }
                  ],
                  "name": "AddressEmptyCode",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ],
                  "name": "ERC1967InvalidImplementation",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "ERC1967NonPayable",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "FailedInnerCall",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "InvalidInitialization",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotInitializing",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "UUPSUnauthorizedCallContext",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes32",
                      "name": "slot",
                      "type": "bytes32"
                    }
                  ],
                  "name": "UUPSUnsupportedProxiableUUID",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint64",
                      "name": "version",
                      "type": "uint64"
                    }
                  ],
                  "name": "Initialized",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ],
                  "name": "Upgraded",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "UPGRADE_INTERFACE_VERSION",
                  "outputs": [
                    {
                      "internalType": "string",
                      "name": "",
                      "type": "string"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "proxiableUUID",
                  "outputs": [
                    {
                      "internalType": "bytes32",
                      "name": "",
                      "type": "bytes32"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "newImplementation",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "upgradeToAndCall",
                  "outputs": [],
                  "stateMutability": "payable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
                "errors": {
                  "AddressEmptyCode(address)": [
                    {
                      "details": "There's no code at `target` (it is not a contract)."
                    }
                  ],
                  "ERC1967InvalidImplementation(address)": [
                    {
                      "details": "The `implementation` of the proxy is invalid."
                    }
                  ],
                  "ERC1967NonPayable()": [
                    {
                      "details": "An upgrade function sees `msg.value > 0` that may be lost."
                    }
                  ],
                  "FailedInnerCall()": [
                    {
                      "details": "A call to an address target failed. The target may have reverted."
                    }
                  ],
                  "InvalidInitialization()": [
                    {
                      "details": "The contract is already initialized."
                    }
                  ],
                  "NotInitializing()": [
                    {
                      "details": "The contract is not initializing."
                    }
                  ],
                  "UUPSUnauthorizedCallContext()": [
                    {
                      "details": "The call is from an unauthorized context."
                    }
                  ],
                  "UUPSUnsupportedProxiableUUID(bytes32)": [
                    {
                      "details": "The storage `slot` is unsupported as a UUID."
                    }
                  ]
                },
                "events": {
                  "Initialized(uint64)": {
                    "details": "Triggered when the contract has been initialized or reinitialized."
                  },
                  "Upgraded(address)": {
                    "details": "Emitted when the implementation is upgraded."
                  }
                },
                "kind": "dev",
                "methods": {
                  "proxiableUUID()": {
                    "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
                  },
                  "upgradeToAndCall(address,bytes)": {
                    "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
                    "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
                  }
                },
                "stateVariables": {
                  "UPGRADE_INTERFACE_VERSION": {
                    "details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
                  },
                  "__self": {
                    "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
                  "proxiableUUID()": "52d1902d",
                  "upgradeToAndCall(address,bytes)": "4f1ef286"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
            "ERC721HolderUpgradeable": {
              "abi": [
                {
                  "inputs": [],
                  "name": "InvalidInitialization",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotInitializing",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint64",
                      "name": "version",
                      "type": "uint64"
                    }
                  ],
                  "name": "Initialized",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "",
                      "type": "bytes"
                    }
                  ],
                  "name": "onERC721Received",
                  "outputs": [
                    {
                      "internalType": "bytes4",
                      "name": "",
                      "type": "bytes4"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
                "errors": {
                  "InvalidInitialization()": [
                    {
                      "details": "The contract is already initialized."
                    }
                  ],
                  "NotInitializing()": [
                    {
                      "details": "The contract is not initializing."
                    }
                  ]
                },
                "events": {
                  "Initialized(uint64)": {
                    "details": "Triggered when the contract has been initialized or reinitialized."
                  }
                },
                "kind": "dev",
                "methods": {
                  "onERC721Received(address,address,uint256,bytes)": {
                    "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "onERC721Received(address,address,uint256,bytes)": "150b7a02"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":\"ERC721HolderUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0x9a4de3d90a92d682de7ec325eb3d032587fbe9782a4bbbf1b1fa72a82b2c06e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341b637251d54b93d13283fbc57d16ff8727dcd0e9a0f790347bfb664a8f6817\",\"dweb:/ipfs/QmX79yunDU24WtRiD9CJYQa1b21KiJuqmLX73HNyeHE7LJ\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
            "ContextUpgradeable": {
              "abi": [
                {
                  "inputs": [],
                  "name": "InvalidInitialization",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotInitializing",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint64",
                      "name": "version",
                      "type": "uint64"
                    }
                  ],
                  "name": "Initialized",
                  "type": "event"
                }
              ],
              "devdoc": {
                "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
                "errors": {
                  "InvalidInitialization()": [
                    {
                      "details": "The contract is already initialized."
                    }
                  ],
                  "NotInitializing()": [
                    {
                      "details": "The contract is not initializing."
                    }
                  ]
                },
                "events": {
                  "Initialized(uint64)": {
                    "details": "Triggered when the contract has been initialized or reinitialized."
                  }
                },
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {}
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
            "PausableUpgradeable": {
              "abi": [
                {
                  "inputs": [],
                  "name": "EnforcedPause",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "ExpectedPause",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "InvalidInitialization",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotInitializing",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint64",
                      "name": "version",
                      "type": "uint64"
                    }
                  ],
                  "name": "Initialized",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "Paused",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "Unpaused",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "paused",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
                "errors": {
                  "EnforcedPause()": [
                    {
                      "details": "The operation failed because the contract is paused."
                    }
                  ],
                  "ExpectedPause()": [
                    {
                      "details": "The operation failed because the contract is not paused."
                    }
                  ],
                  "InvalidInitialization()": [
                    {
                      "details": "The contract is already initialized."
                    }
                  ],
                  "NotInitializing()": [
                    {
                      "details": "The contract is not initializing."
                    }
                  ]
                },
                "events": {
                  "Initialized(uint64)": {
                    "details": "Triggered when the contract has been initialized or reinitialized."
                  },
                  "Paused(address)": {
                    "details": "Emitted when the pause is triggered by `account`."
                  },
                  "Unpaused(address)": {
                    "details": "Emitted when the pause is lifted by `account`."
                  }
                },
                "kind": "dev",
                "methods": {
                  "paused()": {
                    "details": "Returns true if the contract is paused, and false otherwise."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "paused()": "5c975abb"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
            "IERC1822Proxiable": {
              "abi": [
                {
                  "inputs": [],
                  "name": "proxiableUUID",
                  "outputs": [
                    {
                      "internalType": "bytes32",
                      "name": "",
                      "type": "bytes32"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
                "kind": "dev",
                "methods": {
                  "proxiableUUID()": {
                    "details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "proxiableUUID()": "52d1902d"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
            "ERC1967Utils": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "admin",
                      "type": "address"
                    }
                  ],
                  "name": "ERC1967InvalidAdmin",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "beacon",
                      "type": "address"
                    }
                  ],
                  "name": "ERC1967InvalidBeacon",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ],
                  "name": "ERC1967InvalidImplementation",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "ERC1967NonPayable",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "previousAdmin",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "newAdmin",
                      "type": "address"
                    }
                  ],
                  "name": "AdminChanged",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "beacon",
                      "type": "address"
                    }
                  ],
                  "name": "BeaconUpgraded",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ],
                  "name": "Upgraded",
                  "type": "event"
                }
              ],
              "devdoc": {
                "details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
                "errors": {
                  "ERC1967InvalidAdmin(address)": [
                    {
                      "details": "The `admin` of the proxy is invalid."
                    }
                  ],
                  "ERC1967InvalidBeacon(address)": [
                    {
                      "details": "The `beacon` of the proxy is invalid."
                    }
                  ],
                  "ERC1967InvalidImplementation(address)": [
                    {
                      "details": "The `implementation` of the proxy is invalid."
                    }
                  ],
                  "ERC1967NonPayable()": [
                    {
                      "details": "An upgrade function sees `msg.value > 0` that may be lost."
                    }
                  ]
                },
                "events": {
                  "AdminChanged(address,address)": {
                    "details": "Emitted when the admin account has changed."
                  },
                  "BeaconUpgraded(address)": {
                    "details": "Emitted when the beacon is changed."
                  },
                  "Upgraded(address)": {
                    "details": "Emitted when the implementation is upgraded."
                  }
                },
                "kind": "dev",
                "methods": {},
                "stateVariables": {
                  "ADMIN_SLOT": {
                    "details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
                  },
                  "BEACON_SLOT": {
                    "details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
                  },
                  "IMPLEMENTATION_SLOT": {
                    "details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a007c3bdf9b4dacf3058059a41150a30f6a983b8c4bd9eb4c362d6e431826ef964736f6c63430008180033\n}\n",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a007c3bdf9b4dacf3058059a41150a30f6a983b8c4bd9eb4c362d6e431826ef964736f6c63430008180033",
                  "opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SMOD 0xC3 0xBD 0xF9 0xB4 0xDA 0xCF ADDRESS PC SDIV SWAP11 COINBASE ISZERO EXP ADDRESS 0xF6 0xA9 DUP4 0xB8 0xC4 0xBD SWAP15 0xB4 0xC3 PUSH3 0xD6E431 DUP3 PUSH15 0xF964736F6C63430008180033000000 ",
                  "sourceMap": "449:6273:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:7;;;;;;;;;;;;;;;;;"
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a007c3bdf9b4dacf3058059a41150a30f6a983b8c4bd9eb4c362d6e431826ef964736f6c63430008180033",
                  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SMOD 0xC3 0xBD 0xF9 0xB4 0xDA 0xCF ADDRESS PC SDIV SWAP11 COINBASE ISZERO EXP ADDRESS 0xF6 0xA9 DUP4 0xB8 0xC4 0xBD SWAP15 0xB4 0xC3 PUSH3 0xD6E431 DUP3 PUSH15 0xF964736F6C63430008180033000000 ",
                  "sourceMap": "449:6273:7:-:0;;;;;;;;"
                },
                "gasEstimates": {
                  "creation": {
                    "codeDepositCost": "17000",
                    "executionCost": "96",
                    "totalCost": "17096"
                  },
                  "internal": {
                    "_checkNonPayable()": "infinite",
                    "_setAdmin(address)": "infinite",
                    "_setBeacon(address)": "infinite",
                    "_setImplementation(address)": "infinite",
                    "changeAdmin(address)": "infinite",
                    "getAdmin()": "infinite",
                    "getBeacon()": "infinite",
                    "getImplementation()": "infinite",
                    "upgradeBeaconToAndCall(address,bytes memory)": "infinite",
                    "upgradeToAndCall(address,bytes memory)": "infinite"
                  }
                },
                "legacyAssembly": {
                  ".code": [
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH #[$]",
                      "source": 7,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH [$]",
                      "source": 7,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "B"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP3",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP3",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP3",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "CODECOPY",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP1",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "MLOAD",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "0"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "BYTE",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "73"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "EQ",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH [tag]",
                      "source": 7,
                      "value": "1"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "JUMPI",
                      "source": 7
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "4E487B71"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "E0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SHL",
                      "source": -1
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "0"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "MSTORE",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "0"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "4"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "MSTORE",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "24"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "0"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "REVERT",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "tag",
                      "source": 7,
                      "value": "1"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "JUMPDEST",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "ADDRESS",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "0"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "MSTORE",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 7,
                      "value": "73"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP2",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "MSTORE8",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP3",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP2",
                      "source": 7
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "RETURN",
                      "source": 7
                    }
                  ],
                  ".data": {
                    "0": {
                      ".auxdata": "a2646970667358221220a007c3bdf9b4dacf3058059a41150a30f6a983b8c4bd9eb4c362d6e431826ef964736f6c63430008180033",
                      ".code": [
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "PUSHDEPLOYADDRESS",
                          "source": 7
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "ADDRESS",
                          "source": 7
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "EQ",
                          "source": 7
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "PUSH",
                          "source": 7,
                          "value": "80"
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "PUSH",
                          "source": 7,
                          "value": "40"
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "MSTORE",
                          "source": 7
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "PUSH",
                          "source": 7,
                          "value": "0"
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "DUP1",
                          "source": 7
                        },
                        {
                          "begin": 449,
                          "end": 6722,
                          "name": "REVERT",
                          "source": 7
                        }
                      ]
                    }
                  },
                  "sourceList": [
                    "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
                    "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                    "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                    "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                    "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                    "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
                    "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
                    "@openzeppelin/contracts/utils/Address.sol",
                    "@openzeppelin/contracts/utils/StorageSlot.sol",
                    "@openzeppelin/contracts/utils/introspection/IERC165.sol",
                    "contracts/interface/IDZapNFTStaking.sol",
                    "contracts/newDZapNFTStaking.sol",
                    "#utility.yul"
                  ]
                },
                "methodIdentifiers": {}
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
            "IBeacon": {
              "abi": [
                {
                  "inputs": [],
                  "name": "implementation",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "This is the interface that {BeaconProxy} expects of its beacon.",
                "kind": "dev",
                "methods": {
                  "implementation()": {
                    "details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "implementation()": "5c60da1b"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
            "IERC20": {
              "abi": [
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "spender",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "Approval",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "Transfer",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "spender",
                      "type": "address"
                    }
                  ],
                  "name": "allowance",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "spender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "approve",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "balanceOf",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "totalSupply",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "transfer",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "transferFrom",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Interface of the ERC20 standard as defined in the EIP.",
                "events": {
                  "Approval(address,address,uint256)": {
                    "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
                  },
                  "Transfer(address,address,uint256)": {
                    "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
                  }
                },
                "kind": "dev",
                "methods": {
                  "allowance(address,address)": {
                    "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
                  },
                  "approve(address,uint256)": {
                    "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
                  },
                  "balanceOf(address)": {
                    "details": "Returns the value of tokens owned by `account`."
                  },
                  "totalSupply()": {
                    "details": "Returns the value of tokens in existence."
                  },
                  "transfer(address,uint256)": {
                    "details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
                  },
                  "transferFrom(address,address,uint256)": {
                    "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "allowance(address,address)": "dd62ed3e",
                  "approve(address,uint256)": "095ea7b3",
                  "balanceOf(address)": "70a08231",
                  "totalSupply()": "18160ddd",
                  "transfer(address,uint256)": "a9059cbb",
                  "transferFrom(address,address,uint256)": "23b872dd"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
            "IERC20Permit": {
              "abi": [
                {
                  "inputs": [],
                  "name": "DOMAIN_SEPARATOR",
                  "outputs": [
                    {
                      "internalType": "bytes32",
                      "name": "",
                      "type": "bytes32"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "name": "nonces",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "spender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ],
                  "name": "permit",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
                "kind": "dev",
                "methods": {
                  "DOMAIN_SEPARATOR()": {
                    "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                  },
                  "nonces(address)": {
                    "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
                  },
                  "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                    "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "DOMAIN_SEPARATOR()": "3644e515",
                  "nonces(address)": "7ecebe00",
                  "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
            "SafeERC20": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "spender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentAllowance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "requestedDecrease",
                      "type": "uint256"
                    }
                  ],
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    }
                  ],
                  "name": "SafeERC20FailedOperation",
                  "type": "error"
                }
              ],
              "devdoc": {
                "details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
                "errors": {
                  "SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
                    {
                      "details": "Indicates a failed `decreaseAllowance` request."
                    }
                  ],
                  "SafeERC20FailedOperation(address)": [
                    {
                      "details": "An operation with an ERC20 token failed."
                    }
                  ]
                },
                "kind": "dev",
                "methods": {},
                "title": "SafeERC20",
                "version": 1
              },
              "evm": {
                "assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033\n}\n",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033",
                  "opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC5 REVERT MUL 0xA9 0xE0 PUSH27 0xBD88CC34ABC81A51070A36E3559D296B837112BEA2DB60E5126473 PUSH16 0x6C634300081800330000000000000000 ",
                  "sourceMap": "751:5018:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:11;;;;;;;;;;;;;;;;;"
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033",
                  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC5 REVERT MUL 0xA9 0xE0 PUSH27 0xBD88CC34ABC81A51070A36E3559D296B837112BEA2DB60E5126473 PUSH16 0x6C634300081800330000000000000000 ",
                  "sourceMap": "751:5018:11:-:0;;;;;;;;"
                },
                "gasEstimates": {
                  "creation": {
                    "codeDepositCost": "17000",
                    "executionCost": "96",
                    "totalCost": "17096"
                  },
                  "internal": {
                    "_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
                    "_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
                    "forceApprove(contract IERC20,address,uint256)": "infinite",
                    "safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
                    "safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
                    "safeTransfer(contract IERC20,address,uint256)": "infinite",
                    "safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
                  }
                },
                "legacyAssembly": {
                  ".code": [
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH #[$]",
                      "source": 11,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH [$]",
                      "source": 11,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "B"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "DUP3",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "DUP3",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "DUP3",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "CODECOPY",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "DUP1",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "MLOAD",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "0"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "BYTE",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "73"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "EQ",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH [tag]",
                      "source": 11,
                      "value": "1"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "JUMPI",
                      "source": 11
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "4E487B71"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "E0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SHL",
                      "source": -1
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "0"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "MSTORE",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "0"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "4"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "MSTORE",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "24"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "0"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "REVERT",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "tag",
                      "source": 11,
                      "value": "1"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "JUMPDEST",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "ADDRESS",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "0"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "MSTORE",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "PUSH",
                      "source": 11,
                      "value": "73"
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "DUP2",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "MSTORE8",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "DUP3",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "DUP2",
                      "source": 11
                    },
                    {
                      "begin": 751,
                      "end": 5769,
                      "name": "RETURN",
                      "source": 11
                    }
                  ],
                  ".data": {
                    "0": {
                      ".auxdata": "a2646970667358221220cfc5fd02a9e07abd88cc34abc81a51070a36e3559d296b837112bea2db60e51264736f6c63430008180033",
                      ".code": [
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "PUSHDEPLOYADDRESS",
                          "source": 11
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "ADDRESS",
                          "source": 11
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "EQ",
                          "source": 11
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "PUSH",
                          "source": 11,
                          "value": "80"
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "PUSH",
                          "source": 11,
                          "value": "40"
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "MSTORE",
                          "source": 11
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "PUSH",
                          "source": 11,
                          "value": "0"
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 751,
                          "end": 5769,
                          "name": "REVERT",
                          "source": 11
                        }
                      ]
                    }
                  },
                  "sourceList": [
                    "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
                    "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                    "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                    "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                    "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                    "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
                    "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
                    "@openzeppelin/contracts/utils/Address.sol",
                    "@openzeppelin/contracts/utils/StorageSlot.sol",
                    "@openzeppelin/contracts/utils/introspection/IERC165.sol",
                    "contracts/interface/IDZapNFTStaking.sol",
                    "contracts/newDZapNFTStaking.sol",
                    "#utility.yul"
                  ]
                },
                "methodIdentifiers": {}
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
            "IERC721": {
              "abi": [
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "approved",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "Approval",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bool",
                      "name": "approved",
                      "type": "bool"
                    }
                  ],
                  "name": "ApprovalForAll",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "Transfer",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "approve",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "name": "balanceOf",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "getApproved",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    }
                  ],
                  "name": "isApprovedForAll",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "ownerOf",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "safeTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "approved",
                      "type": "bool"
                    }
                  ],
                  "name": "setApprovalForAll",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "interfaceId",
                      "type": "bytes4"
                    }
                  ],
                  "name": "supportsInterface",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "transferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Required interface of an ERC721 compliant contract.",
                "events": {
                  "Approval(address,address,uint256)": {
                    "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "ApprovalForAll(address,address,bool)": {
                    "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "Transfer(address,address,uint256)": {
                    "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
                  }
                },
                "kind": "dev",
                "methods": {
                  "approve(address,uint256)": {
                    "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
                  },
                  "balanceOf(address)": {
                    "details": "Returns the number of tokens in ``owner``'s account."
                  },
                  "getApproved(uint256)": {
                    "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
                  },
                  "isApprovedForAll(address,address)": {
                    "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
                  },
                  "ownerOf(uint256)": {
                    "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
                  },
                  "safeTransferFrom(address,address,uint256)": {
                    "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
                  },
                  "safeTransferFrom(address,address,uint256,bytes)": {
                    "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
                  },
                  "setApprovalForAll(address,bool)": {
                    "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
                  },
                  "supportsInterface(bytes4)": {
                    "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
                  },
                  "transferFrom(address,address,uint256)": {
                    "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "approve(address,uint256)": "095ea7b3",
                  "balanceOf(address)": "70a08231",
                  "getApproved(uint256)": "081812fc",
                  "isApprovedForAll(address,address)": "e985e9c5",
                  "ownerOf(uint256)": "6352211e",
                  "safeTransferFrom(address,address,uint256)": "42842e0e",
                  "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
                  "setApprovalForAll(address,bool)": "a22cb465",
                  "supportsInterface(bytes4)": "01ffc9a7",
                  "transferFrom(address,address,uint256)": "23b872dd"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
            "IERC721Receiver": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "onERC721Received",
                  "outputs": [
                    {
                      "internalType": "bytes4",
                      "name": "",
                      "type": "bytes4"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
                "kind": "dev",
                "methods": {
                  "onERC721Received(address,address,uint256,bytes)": {
                    "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
                  }
                },
                "title": "ERC721 token receiver interface",
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "onERC721Received(address,address,uint256,bytes)": "150b7a02"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/utils/Address.sol": {
            "Address": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    }
                  ],
                  "name": "AddressEmptyCode",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "AddressInsufficientBalance",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "FailedInnerCall",
                  "type": "error"
                }
              ],
              "devdoc": {
                "details": "Collection of functions related to the address type",
                "errors": {
                  "AddressEmptyCode(address)": [
                    {
                      "details": "There's no code at `target` (it is not a contract)."
                    }
                  ],
                  "AddressInsufficientBalance(address)": [
                    {
                      "details": "The ETH balance of the account is not enough to perform the operation."
                    }
                  ],
                  "FailedInnerCall()": [
                    {
                      "details": "A call to an address target failed. The target may have reverted."
                    }
                  ]
                },
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "evm": {
                "assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033\n}\n",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
                  "opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC1 DUP10 MOD PUSH12 0x19B4852AE5E149388012F4E 0xAC PUSH6 0x513D55AD4069 DUP14 PUSH0 0x22 0xC7 CALL LOG1 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
                  "sourceMap": "195:6066:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:14;;;;;;;;;;;;;;;;;"
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
                  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC1 DUP10 MOD PUSH12 0x19B4852AE5E149388012F4E 0xAC PUSH6 0x513D55AD4069 DUP14 PUSH0 0x22 0xC7 CALL LOG1 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
                  "sourceMap": "195:6066:14:-:0;;;;;;;;"
                },
                "gasEstimates": {
                  "creation": {
                    "codeDepositCost": "17000",
                    "executionCost": "96",
                    "totalCost": "17096"
                  },
                  "internal": {
                    "_revert(bytes memory)": "infinite",
                    "functionCall(address,bytes memory)": "infinite",
                    "functionCallWithValue(address,bytes memory,uint256)": "infinite",
                    "functionDelegateCall(address,bytes memory)": "infinite",
                    "functionStaticCall(address,bytes memory)": "infinite",
                    "sendValue(address payable,uint256)": "infinite",
                    "verifyCallResult(bool,bytes memory)": "infinite",
                    "verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
                  }
                },
                "legacyAssembly": {
                  ".code": [
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH #[$]",
                      "source": 14,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH [$]",
                      "source": 14,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "B"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP3",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP3",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP3",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "CODECOPY",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "BYTE",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "73"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "4E487B71"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "E0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SHL",
                      "source": -1
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "24"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "tag",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "ADDRESS",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 14,
                      "value": "73"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "MSTORE8",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP3",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "RETURN",
                      "source": 14
                    }
                  ],
                  ".data": {
                    "0": {
                      ".auxdata": "a264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
                      ".code": [
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "PUSHDEPLOYADDRESS",
                          "source": 14
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "ADDRESS",
                          "source": 14
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "EQ",
                          "source": 14
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "PUSH",
                          "source": 14,
                          "value": "80"
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 195,
                          "end": 6261,
                          "name": "REVERT",
                          "source": 14
                        }
                      ]
                    }
                  },
                  "sourceList": [
                    "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
                    "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                    "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                    "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                    "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                    "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
                    "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
                    "@openzeppelin/contracts/utils/Address.sol",
                    "@openzeppelin/contracts/utils/StorageSlot.sol",
                    "@openzeppelin/contracts/utils/introspection/IERC165.sol",
                    "contracts/interface/IDZapNFTStaking.sol",
                    "contracts/newDZapNFTStaking.sol",
                    "#utility.yul"
                  ]
                },
                "methodIdentifiers": {}
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/utils/StorageSlot.sol": {
            "StorageSlot": {
              "abi": [],
              "devdoc": {
                "details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "evm": {
                "assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033\n}\n",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033",
                  "opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x86C7570929673 0xB8 EXTCODECOPY CALLDATALOAD DUP14 SHR SWAP9 0xBC PUSH15 0xF9EF28F132A2D90935FC5F46F3821A 0x21 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
                  "sourceMap": "1245:2685:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:15;;;;;;;;;;;;;;;;;"
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033",
                  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x86C7570929673 0xB8 EXTCODECOPY CALLDATALOAD DUP14 SHR SWAP9 0xBC PUSH15 0xF9EF28F132A2D90935FC5F46F3821A 0x21 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
                  "sourceMap": "1245:2685:15:-:0;;;;;;;;"
                },
                "gasEstimates": {
                  "creation": {
                    "codeDepositCost": "17000",
                    "executionCost": "96",
                    "totalCost": "17096"
                  },
                  "internal": {
                    "getAddressSlot(bytes32)": "infinite",
                    "getBooleanSlot(bytes32)": "infinite",
                    "getBytes32Slot(bytes32)": "infinite",
                    "getBytesSlot(bytes storage pointer)": "infinite",
                    "getBytesSlot(bytes32)": "infinite",
                    "getStringSlot(bytes32)": "infinite",
                    "getStringSlot(string storage pointer)": "infinite",
                    "getUint256Slot(bytes32)": "infinite"
                  }
                },
                "legacyAssembly": {
                  ".code": [
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH #[$]",
                      "source": 15,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH [$]",
                      "source": 15,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "B"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "CODECOPY",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "BYTE",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "73"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "4E487B71"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "source": -1,
                      "value": "E0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SHL",
                      "source": -1
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "24"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "tag",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "ADDRESS",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 15,
                      "value": "73"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "MSTORE8",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "RETURN",
                      "source": 15
                    }
                  ],
                  ".data": {
                    "0": {
                      ".auxdata": "a264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033",
                      ".code": [
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "PUSHDEPLOYADDRESS",
                          "source": 15
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "ADDRESS",
                          "source": 15
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "EQ",
                          "source": 15
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "PUSH",
                          "source": 15,
                          "value": "80"
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "PUSH",
                          "source": 15,
                          "value": "40"
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "MSTORE",
                          "source": 15
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "PUSH",
                          "source": 15,
                          "value": "0"
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "DUP1",
                          "source": 15
                        },
                        {
                          "begin": 1245,
                          "end": 3930,
                          "name": "REVERT",
                          "source": 15
                        }
                      ]
                    }
                  },
                  "sourceList": [
                    "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
                    "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                    "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                    "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                    "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                    "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
                    "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
                    "@openzeppelin/contracts/utils/Address.sol",
                    "@openzeppelin/contracts/utils/StorageSlot.sol",
                    "@openzeppelin/contracts/utils/introspection/IERC165.sol",
                    "contracts/interface/IDZapNFTStaking.sol",
                    "contracts/newDZapNFTStaking.sol",
                    "#utility.yul"
                  ]
                },
                "methodIdentifiers": {}
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
            "IERC165": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "interfaceId",
                      "type": "bytes4"
                    }
                  ],
                  "name": "supportsInterface",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
                "kind": "dev",
                "methods": {
                  "supportsInterface(bytes4)": {
                    "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
                  }
                },
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "supportsInterface(bytes4)": "01ffc9a7"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "contracts/interface/IDZapNFTStaking.sol": {
            "IDZapNFTStaking": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "claimRewards",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "pause",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_rewardClaimDelay",
                      "type": "uint256"
                    }
                  ],
                  "name": "setRewardClaimDelay",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_unbondingPeriod",
                      "type": "uint256"
                    }
                  ],
                  "name": "setUnbondingPeriod",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "stake",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "unpause",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "unstake",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_rewardPerBlock",
                      "type": "uint256"
                    }
                  ],
                  "name": "updateRewardRate",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "withdraw",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                }
              ],
              "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "evm": {
                "assembly": "",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "deployedBytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "immutableReferences": {},
                  "linkReferences": {},
                  "object": "",
                  "opcodes": "",
                  "sourceMap": ""
                },
                "gasEstimates": null,
                "legacyAssembly": null,
                "methodIdentifiers": {
                  "claimRewards(uint256)": "0962ef79",
                  "pause()": "8456cb59",
                  "setRewardClaimDelay(uint256)": "197916b4",
                  "setUnbondingPeriod(uint256)": "114eaf55",
                  "stake(uint256)": "a694fc3a",
                  "unpause()": "3f4ba83a",
                  "unstake(uint256)": "2e17de78",
                  "updateRewardRate(uint256)": "9ef3a261",
                  "withdraw(uint256)": "2e1a7d4d"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardClaimDelay\",\"type\":\"uint256\"}],\"name\":\"setRewardClaimDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unbondingPeriod\",\"type\":\"uint256\"}],\"name\":\"setUnbondingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"updateRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IDZapNFTStaking.sol\":\"IDZapNFTStaking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IDZapNFTStaking.sol\":{\"keccak256\":\"0xa8d981010011ee4eab54b63c22331e8b0edd9c2513a6668f06b8f385c707c4b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1207b675658e1a30ed9437e6910db24b2bf500f5d65319cc9d59ecc8b8a1700a\",\"dweb:/ipfs/QmP8T1BGQyjqj8dHY7TNikjXRjLmEY93UzLXdEQiXcJaAp\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [],
                "types": null
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              }
            }
          },
          "contracts/newDZapNFTStaking.sol": {
            "NewDZapNFTStaking": {
              "abi": [
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    }
                  ],
                  "name": "AddressEmptyCode",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "AddressInsufficientBalance",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "AlreadyStaked",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "ClaimDelayNotPassed",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "claimRewards",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ],
                  "name": "ERC1967InvalidImplementation",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "ERC1967NonPayable",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "EnforcedPause",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "ExpectedPause",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "FailedInnerCall",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_admin",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_nft",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_rewardPerBlock",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_unbondingPeriod",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_rewardClaimDelay",
                      "type": "uint256"
                    }
                  ],
                  "name": "initialize",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "InvalidInitialization",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "InvalidRewardClaimDelay",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "InvalidRewardPerBlock",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "InvalidToken",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "InvalidUnbondingPeriod",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotInitializing",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotStaked",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "NotTokenOwner",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "",
                      "type": "bytes"
                    }
                  ],
                  "name": "onERC721Received",
                  "outputs": [
                    {
                      "internalType": "bytes4",
                      "name": "",
                      "type": "bytes4"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnableInvalidOwner",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "OwnableUnauthorizedAccount",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "pause",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    }
                  ],
                  "name": "SafeERC20FailedOperation",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_rewardClaimDelay",
                      "type": "uint256"
                    }
                  ],
                  "name": "setRewardClaimDelay",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "stake",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "StakingPaused",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "unpause",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "unstake",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "newImplementation",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "upgradeToAndCall",
                  "outputs": [],
                  "stateMutability": "payable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "UUPSUnauthorizedCallContext",
                  "type": "error"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes32",
                      "name": "slot",
                      "type": "bytes32"
                    }
                  ],
                  "name": "UUPSUnsupportedProxiableUUID",
                  "type": "error"
                },
                {
                  "inputs": [],
                  "name": "UnbondingPeriodNotPassed",
                  "type": "error"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint64",
                      "name": "version",
                      "type": "uint64"
                    }
                  ],
                  "name": "Initialized",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "previousOwner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnershipTransferred",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "Paused",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "renounceOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "user",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "name": "RewardClaimed",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "rewardPerBlock",
                      "type": "uint256"
                    }
                  ],
                  "name": "RewardRateUpdated",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_unbondingPeriod",
                      "type": "uint256"
                    }
                  ],
                  "name": "setUnbondingPeriod",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "user",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "Staked",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "transferOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "Unpaused",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "user",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "Unstaked",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_rewardPerBlock",
                      "type": "uint256"
                    }
                  ],
                  "name": "updateRewardRate",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ],
                  "name": "Upgraded",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "withdraw",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "admin",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "checkUpgradebility",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "pure",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "nft",
                  "outputs": [
                    {
                      "internalType": "contract IERC721",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "owner",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "paused",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "proxiableUUID",
                  "outputs": [
                    {
                      "internalType": "bytes32",
                      "name": "",
                      "type": "bytes32"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "rewardClaimDelay",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "name": "rewardRates",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rewardPerBlock",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "rewardToken",
                  "outputs": [
                    {
                      "internalType": "contract IERC20",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "name": "stakes",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stakedAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "unbondingAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rewardClaimedAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStaked",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "name": "tokenOwner",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "unbondingPeriod",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "UPGRADE_INTERFACE_VERSION",
                  "outputs": [
                    {
                      "internalType": "string",
                      "name": "",
                      "type": "string"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "devdoc": {
                "details": "Contract for staking NFTs and earning ERC20 rewards.",
                "errors": {
                  "AddressEmptyCode(address)": [
                    {
                      "details": "There's no code at `target` (it is not a contract)."
                    }
                  ],
                  "AddressInsufficientBalance(address)": [
                    {
                      "details": "The ETH balance of the account is not enough to perform the operation."
                    }
                  ],
                  "ERC1967InvalidImplementation(address)": [
                    {
                      "details": "The `implementation` of the proxy is invalid."
                    }
                  ],
                  "ERC1967NonPayable()": [
                    {
                      "details": "An upgrade function sees `msg.value > 0` that may be lost."
                    }
                  ],
                  "EnforcedPause()": [
                    {
                      "details": "The operation failed because the contract is paused."
                    }
                  ],
                  "ExpectedPause()": [
                    {
                      "details": "The operation failed because the contract is not paused."
                    }
                  ],
                  "FailedInnerCall()": [
                    {
                      "details": "A call to an address target failed. The target may have reverted."
                    }
                  ],
                  "InvalidInitialization()": [
                    {
                      "details": "The contract is already initialized."
                    }
                  ],
                  "NotInitializing()": [
                    {
                      "details": "The contract is not initializing."
                    }
                  ],
                  "OwnableInvalidOwner(address)": [
                    {
                      "details": "The owner is not a valid owner account. (eg. `address(0)`)"
                    }
                  ],
                  "OwnableUnauthorizedAccount(address)": [
                    {
                      "details": "The caller account is not authorized to perform an operation."
                    }
                  ],
                  "SafeERC20FailedOperation(address)": [
                    {
                      "details": "An operation with an ERC20 token failed."
                    }
                  ],
                  "UUPSUnauthorizedCallContext()": [
                    {
                      "details": "The call is from an unauthorized context."
                    }
                  ],
                  "UUPSUnsupportedProxiableUUID(bytes32)": [
                    {
                      "details": "The storage `slot` is unsupported as a UUID."
                    }
                  ]
                },
                "events": {
                  "Initialized(uint64)": {
                    "details": "Triggered when the contract has been initialized or reinitialized."
                  },
                  "Paused(address)": {
                    "details": "Emitted when the pause is triggered by `account`."
                  },
                  "Unpaused(address)": {
                    "details": "Emitted when the pause is lifted by `account`."
                  },
                  "Upgraded(address)": {
                    "details": "Emitted when the implementation is upgraded."
                  }
                },
                "kind": "dev",
                "methods": {
                  "claimRewards(uint256)": {
                    "details": "Transfers the reward tokens to the caller.",
                    "params": {
                      "tokenId": "ID of the staked NFT."
                    }
                  },
                  "initialize(address,address,address,uint256,uint256,uint256)": {
                    "details": "Initializes the contract by setting the admin, NFT contract, reward token contract, reward per block, unbonding period, and reward claim delay.",
                    "params": {
                      "_admin": "Address of the contract admin.",
                      "_nft": "Address of the NFT contract.",
                      "_rewardClaimDelay": "Number of seconds required to wait before claiming rewards.",
                      "_rewardPerBlock": "Number of reward tokens given per block.",
                      "_rewardToken": "Address of the reward token contract.",
                      "_unbondingPeriod": "Number of blocks required to wait before withdrawing an unstaked NFT."
                    }
                  },
                  "onERC721Received(address,address,uint256,bytes)": {
                    "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
                  },
                  "owner()": {
                    "details": "Returns the address of the current owner."
                  },
                  "pause()": {
                    "details": "Only callable by the contract owner."
                  },
                  "paused()": {
                    "details": "Returns true if the contract is paused, and false otherwise."
                  },
                  "proxiableUUID()": {
                    "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
                  },
                  "renounceOwnership()": {
                    "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                  },
                  "setRewardClaimDelay(uint256)": {
                    "details": "Only callable by the contract owner.",
                    "params": {
                      "_rewardClaimDelay": "New reward claim delay in seconds."
                    }
                  },
                  "setUnbondingPeriod(uint256)": {
                    "details": "Only callable by the contract owner.",
                    "params": {
                      "_unbondingPeriod": "New unbonding period in blocks."
                    }
                  },
                  "stake(uint256)": {
                    "details": "Transfers the NFT from the caller to the contract.",
                    "params": {
                      "tokenId": "ID of the NFT to be staked."
                    }
                  },
                  "transferOwnership(address)": {
                    "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                  },
                  "unpause()": {
                    "details": "Only callable by the contract owner."
                  },
                  "unstake(uint256)": {
                    "details": "Sets the unbonding period for the staked NFT.",
                    "params": {
                      "tokenId": "ID of the NFT to be unstaked."
                    }
                  },
                  "updateRewardRate(uint256)": {
                    "details": "Records the new reward rate along with the current block number.",
                    "params": {
                      "_rewardPerBlock": "New number of reward tokens per block."
                    }
                  },
                  "upgradeToAndCall(address,bytes)": {
                    "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
                    "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
                  },
                  "withdraw(uint256)": {
                    "details": "Transfers the NFT from the contract back to the caller.",
                    "params": {
                      "tokenId": "ID of the NFT to be withdrawn."
                    }
                  }
                },
                "title": "DZapNFTStaking",
                "version": 1
              },
              "evm": {
                "assembly": "    /* \"contracts/newDZapNFTStaking.sol\":862:9429  contract NewDZapNFTStaking is Initializable, UUPSUpgradeable, OwnableUpgradeable, PausableUpgradeable, ERC721HolderUpgradeable, IDZapNFTStaking {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/newDZapNFTStaking.sol\":862:9429  contract NewDZapNFTStaking is Initializable, UUPSUpgradeable, OwnableUpgradeable, PausableUpgradeable, ERC721HolderUpgradeable, IDZapNFTStaking {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/newDZapNFTStaking.sol\":862:9429  contract NewDZapNFTStaking is Initializable, UUPSUpgradeable, OwnableUpgradeable, PausableUpgradeable, ERC721HolderUpgradeable, IDZapNFTStaking {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x9ef3a261\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xf2caeb1e\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xf2caeb1e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x9ef3a261\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x728cdbca\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x728cdbca\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8dd0cdf3\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6cf6d675\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x47ccca02\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x584b62a1\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x46582583\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x0962ef79\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x114eaf55\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x197916b4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1caaa487\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":5654:6037  function claimRewards(uint256 tokenId) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/newDZapNFTStaking.sol\":8407:8599  function setUnbondingPeriod(uint256 _unbondingPeriod) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_36\n      tag_42\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":918:1071  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_45:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":2022:2055   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2004:2056   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1977:1995   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":918:1071  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {... */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/newDZapNFTStaking.sol\":8781:8979  function setRewardClaimDelay(uint256 _rewardClaimDelay) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_36\n      tag_53\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":1558:1603  mapping(uint256 => address) public tokenOwner */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_57:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_56:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2231:2263   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2213:2264   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2201:2203   */\n      0x20\n        /* \"#utility.yul\":2186:2204   */\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":1558:1603  mapping(uint256 => address) public tokenOwner */\n      tag_49\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":4571:4878  function unstake(uint256 tokenId) external whenNotPaused {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_36\n      tag_63\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":5101:5473  function withdraw(uint256 tokenId) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_36\n      tag_67\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":9270:9335  function unpause() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_36\n      tag_71\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":1293:1324  uint256 public rewardClaimDelay */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      sload(0x05)\n      dup2\n      jump\n    tag_73:\n      mload(0x40)\n        /* \"#utility.yul\":2421:2446   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2409:2411   */\n      0x20\n        /* \"#utility.yul\":2394:2412   */\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":1293:1324  uint256 public rewardClaimDelay */\n      tag_49\n        /* \"#utility.yul\":2275:2452   */\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":1045:1063  IERC721 public nft */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      sload(0x00)\n      tag_56\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_12:\n      tag_36\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_73\n      tag_88\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":1493:1552  mapping(address => mapping(uint256 => Stake)) public stakes */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup6\n      jump\n    tag_92:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3896:3921   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":3952:3954   */\n      0x20\n        /* \"#utility.yul\":3937:3955   */\n      dup7\n      add\n        /* \"#utility.yul\":3930:3964   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3980:3998   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":3973:4007   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4038:4040   */\n      0x60\n        /* \"#utility.yul\":4023:4041   */\n      dup4\n      add\n        /* \"#utility.yul\":4016:4050   */\n      mstore\n        /* \"#utility.yul\":4094:4108   */\n      iszero\n        /* \"#utility.yul\":4087:4109   */\n      iszero\n        /* \"#utility.yul\":4081:4084   */\n      0x80\n        /* \"#utility.yul\":4066:4085   */\n      dup3\n      add\n        /* \"#utility.yul\":4059:4110   */\n      mstore\n        /* \"#utility.yul\":3883:3886   */\n      0xa0\n        /* \"#utility.yul\":3868:3887   */\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":1493:1552  mapping(address => mapping(uint256 => Stake)) public stakes */\n      tag_49\n        /* \"#utility.yul\":3643:4116   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_99:\n      mload(0x40)\n        /* \"#utility.yul\":4286:4300   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4279:4301   */\n      iszero\n        /* \"#utility.yul\":4261:4302   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4249:4251   */\n      0x20\n        /* \"#utility.yul\":4234:4252   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      tag_49\n        /* \"#utility.yul\":4121:4308   */\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":1257:1287  uint256 public unbondingPeriod */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_73\n      sload(0x04)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_36\n      tag_109\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":2775:3355  function initialize(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_36\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":9093:9154  function pause() external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_36\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_56)\n        /* \"contracts/newDZapNFTStaking.sol\":9342:9427  function checkUpgradebility() external pure returns(bool){... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":9416:9420  true */\n      0x01\n        /* \"contracts/newDZapNFTStaking.sol\":9342:9427  function checkUpgradebility() external pure returns(bool){... */\n      jump(tag_99)\n        /* \"contracts/newDZapNFTStaking.sol\":7955:8231  function updateRewardRate(uint256 _rewardPerBlock) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_36\n      tag_128\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":3778:4407  function stake(uint256 tokenId) external whenNotPaused {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_36\n      tag_132\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_135:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":1219:1250  RewardRate[] public rewardRates */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      tag_141\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5884:5909   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":5940:5942   */\n      0x20\n        /* \"#utility.yul\":5925:5943   */\n      dup4\n      add\n        /* \"#utility.yul\":5918:5952   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5857:5875   */\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":1219:1250  RewardRate[] public rewardRates */\n      tag_49\n        /* \"#utility.yul\":5710:5958   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_36\n      tag_147\n      calldatasize\n      0x04\n      tag_148\n      jump\t// in\n    tag_147:\n      tag_149\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":1069:1094  IERC20 public rewardToken */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      sload(0x01)\n      tag_56\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":1100:1120  address public admin */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      sload(0x02)\n      tag_56\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":5654:6037  function claimRewards(uint256 tokenId) external {... */\n    tag_39:\n        /* \"contracts/newDZapNFTStaking.sol\":5724:5734  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":5717:5735  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5717:5723  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":5717:5735  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5717:5744  stakes[msg.sender][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5717:5753  stakes[msg.sender][tokenId].isStaked */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/newDZapNFTStaking.sol\":5712:5773  if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked() */\n      tag_160\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":5762:5773  NotStaked() */\n      mload(0x40)\n      shl(0xe3, 0x73e5c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":5712:5773  if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked() */\n    tag_160:\n        /* \"contracts/newDZapNFTStaking.sol\":5794:5804  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":5787:5805  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5787:5793  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":5787:5805  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5787:5814  stakes[msg.sender][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5787:5826  stakes[msg.sender][tokenId].unbondingAt */\n      0x02\n      add\n      sload\n        /* \"contracts/newDZapNFTStaking.sol\":5787:5831  stakes[msg.sender][tokenId].unbondingAt != 0 */\n      iszero\n        /* \"contracts/newDZapNFTStaking.sol\":5783:5861  if (stakes[msg.sender][tokenId].unbondingAt != 0) revert ClaimDelayNotPassed() */\n      tag_161\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":5840:5861  ClaimDelayNotPassed() */\n      mload(0x40)\n      shl(0xe1, 0x58ae518b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":5783:5861  if (stakes[msg.sender][tokenId].unbondingAt != 0) revert ClaimDelayNotPassed() */\n    tag_161:\n        /* \"contracts/newDZapNFTStaking.sol\":5939:5955  rewardClaimDelay */\n      sload(0x05)\n        /* \"contracts/newDZapNFTStaking.sol\":5900:5910  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":5893:5911  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5893:5899  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":5893:5911  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5893:5920  stakes[msg.sender][tokenId] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5893:5936  stakes[msg.sender][tokenId].rewardClaimedAt */\n      0x03\n      add\n      sload\n        /* \"contracts/newDZapNFTStaking.sol\":5893:5955  stakes[msg.sender][tokenId].rewardClaimedAt + rewardClaimDelay */\n      tag_162\n      swap2\n        /* \"contracts/newDZapNFTStaking.sol\":5939:5955  rewardClaimDelay */\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":5893:5955  stakes[msg.sender][tokenId].rewardClaimedAt + rewardClaimDelay */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/newDZapNFTStaking.sol\":5875:5890  block.timestamp */\n      timestamp\n        /* \"contracts/newDZapNFTStaking.sol\":5875:5955  block.timestamp < stakes[msg.sender][tokenId].rewardClaimedAt + rewardClaimDelay */\n      lt\n        /* \"contracts/newDZapNFTStaking.sol\":5871:5985  if (block.timestamp < stakes[msg.sender][tokenId].rewardClaimedAt + rewardClaimDelay) revert ClaimDelayNotPassed() */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":5964:5985  ClaimDelayNotPassed() */\n      mload(0x40)\n      shl(0xe1, 0x58ae518b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":5871:5985  if (block.timestamp < stakes[msg.sender][tokenId].rewardClaimedAt + rewardClaimDelay) revert ClaimDelayNotPassed() */\n    tag_164:\n        /* \"contracts/newDZapNFTStaking.sol\":5996:6030  _claimRewards(msg.sender, tokenId) */\n      tag_165\n        /* \"contracts/newDZapNFTStaking.sol\":6010:6020  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":6022:6029  tokenId */\n      dup3\n        /* \"contracts/newDZapNFTStaking.sol\":5996:6009  _claimRewards */\n      tag_166\n        /* \"contracts/newDZapNFTStaking.sol\":5996:6030  _claimRewards(msg.sender, tokenId) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/newDZapNFTStaking.sol\":5654:6037  function claimRewards(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/newDZapNFTStaking.sol\":8407:8599  function setUnbondingPeriod(uint256 _unbondingPeriod) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/newDZapNFTStaking.sol\":8494:8510  _unbondingPeriod */\n      dup1\n        /* \"contracts/newDZapNFTStaking.sol\":8514:8515  0 */\n      0x00\n        /* \"contracts/newDZapNFTStaking.sol\":8494:8515  _unbondingPeriod == 0 */\n      sub\n        /* \"contracts/newDZapNFTStaking.sol\":8490:8548  if (_unbondingPeriod == 0) revert InvalidUnbondingPeriod() */\n      tag_171\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":8524:8548  InvalidUnbondingPeriod() */\n      mload(0x40)\n      shl(0xe6, 0x027a6b43)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":8490:8548  if (_unbondingPeriod == 0) revert InvalidUnbondingPeriod() */\n    tag_171:\n        /* \"contracts/newDZapNFTStaking.sol\":8558:8573  unbondingPeriod */\n      0x04\n        /* \"contracts/newDZapNFTStaking.sol\":8558:8592  unbondingPeriod = _unbondingPeriod */\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":8407:8599  function setUnbondingPeriod(uint256 _unbondingPeriod) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/newDZapNFTStaking.sol\":8781:8979  function setRewardClaimDelay(uint256 _rewardClaimDelay) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/newDZapNFTStaking.sol\":8870:8887  _rewardClaimDelay */\n      dup1\n        /* \"contracts/newDZapNFTStaking.sol\":8891:8892  0 */\n      0x00\n        /* \"contracts/newDZapNFTStaking.sol\":8870:8892  _rewardClaimDelay == 0 */\n      sub\n        /* \"contracts/newDZapNFTStaking.sol\":8866:8926  if (_rewardClaimDelay == 0) revert InvalidRewardClaimDelay() */\n      tag_176\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":8901:8926  InvalidRewardClaimDelay() */\n      mload(0x40)\n      shl(0xe0, 0x5958c647)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":8866:8926  if (_rewardClaimDelay == 0) revert InvalidRewardClaimDelay() */\n    tag_176:\n        /* \"contracts/newDZapNFTStaking.sol\":8936:8952  rewardClaimDelay */\n      0x05\n        /* \"contracts/newDZapNFTStaking.sol\":8936:8972  rewardClaimDelay = _rewardClaimDelay */\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":8781:8979  function setRewardClaimDelay(uint256 _rewardClaimDelay) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/newDZapNFTStaking.sol\":4571:4878  function unstake(uint256 tokenId) external whenNotPaused {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/newDZapNFTStaking.sol\":4650:4660  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":4643:4661  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4643:4649  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":4643:4661  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":4643:4670  stakes[msg.sender][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":4643:4679  stakes[msg.sender][tokenId].isStaked */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/newDZapNFTStaking.sol\":4638:4699  if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked() */\n      tag_181\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":4688:4699  NotStaked() */\n      mload(0x40)\n      shl(0xe3, 0x73e5c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":4638:4699  if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked() */\n    tag_181:\n        /* \"contracts/newDZapNFTStaking.sol\":4710:4744  _claimRewards(msg.sender, tokenId) */\n      tag_182\n        /* \"contracts/newDZapNFTStaking.sol\":4724:4734  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":4736:4743  tokenId */\n      dup3\n        /* \"contracts/newDZapNFTStaking.sol\":4710:4723  _claimRewards */\n      tag_166\n        /* \"contracts/newDZapNFTStaking.sol\":4710:4744  _claimRewards(msg.sender, tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/newDZapNFTStaking.sol\":4812:4827  unbondingPeriod */\n      sload(0x04)\n        /* \"contracts/newDZapNFTStaking.sol\":4797:4827  block.number + unbondingPeriod */\n      tag_183\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":4797:4809  block.number */\n      number\n        /* \"contracts/newDZapNFTStaking.sol\":4797:4827  block.number + unbondingPeriod */\n      tag_163\n      jump\t// in\n    tag_183:\n        /* \"contracts/newDZapNFTStaking.sol\":4762:4772  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":4755:4773  stakes[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4755:4761  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":4755:4773  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":4755:4782  stakes[msg.sender][tokenId] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":4755:4794  stakes[msg.sender][tokenId].unbondingAt */\n      0x02\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":4755:4827  stakes[msg.sender][tokenId].unbondingAt = block.number + unbondingPeriod */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":4842:4871  Unstaked(msg.sender, tokenId) */\n      mload\n        /* \"#utility.yul\":2421:2446   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4762:4772  msg.sender */\n      swap1\n      swap2\n        /* \"contracts/newDZapNFTStaking.sol\":4842:4871  Unstaked(msg.sender, tokenId) */\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n      swap2\n        /* \"#utility.yul\":2394:2412   */\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":4842:4871  Unstaked(msg.sender, tokenId) */\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/newDZapNFTStaking.sol\":4571:4878  function unstake(uint256 tokenId) external whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/newDZapNFTStaking.sol\":5101:5473  function withdraw(uint256 tokenId) external {... */\n    tag_68:\n        /* \"contracts/newDZapNFTStaking.sol\":5167:5177  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":5160:5178  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5160:5166  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":5160:5178  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5160:5187  stakes[msg.sender][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5160:5196  stakes[msg.sender][tokenId].isStaked */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/newDZapNFTStaking.sol\":5155:5216  if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked() */\n      tag_186\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":5205:5216  NotStaked() */\n      mload(0x40)\n      shl(0xe3, 0x73e5c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":5155:5216  if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked() */\n    tag_186:\n        /* \"contracts/newDZapNFTStaking.sol\":5252:5262  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":5245:5263  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5245:5251  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":5245:5263  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5245:5272  stakes[msg.sender][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5245:5284  stakes[msg.sender][tokenId].unbondingAt */\n      0x02\n      add\n      sload\n        /* \"contracts/newDZapNFTStaking.sol\":5230:5242  block.number */\n      number\n        /* \"contracts/newDZapNFTStaking.sol\":5230:5284  block.number < stakes[msg.sender][tokenId].unbondingAt */\n      lt\n        /* \"contracts/newDZapNFTStaking.sol\":5226:5319  if (block.number < stakes[msg.sender][tokenId].unbondingAt) revert UnbondingPeriodNotPassed() */\n      iszero\n      tag_187\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":5293:5319  UnbondingPeriodNotPassed() */\n      mload(0x40)\n      shl(0xe0, 0x3878000d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":5226:5319  if (block.number < stakes[msg.sender][tokenId].unbondingAt) revert UnbondingPeriodNotPassed() */\n    tag_187:\n        /* \"contracts/newDZapNFTStaking.sol\":5330:5333  nft */\n      sload(0x00)\n        /* \"contracts/newDZapNFTStaking.sol\":5330:5386  nft.safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5359:5363  this */\n      address\n        /* \"contracts/newDZapNFTStaking.sol\":5330:5386  nft.safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6940:6974   */\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5366:5376  msg.sender */\n      caller\n        /* \"#utility.yul\":6990:7008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6983:7026   */\n      mstore\n        /* \"#utility.yul\":7042:7060   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7035:7069   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":5330:5333  nft */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":5330:5350  nft.safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":6875:6893   */\n      0x64\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":5330:5386  nft.safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":5410:5420  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":5403:5421  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":5403:5409  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":5403:5421  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5403:5430  stakes[msg.sender][tokenId] */\n      swap6\n      dup4\n      mstore\n      swap5\n      dup2\n      mstore\n      dup5\n      dup3\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5396:5430  delete stakes[msg.sender][tokenId] */\n      dup3\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      0x02\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      0x03\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      0x04\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":5447:5457  tokenOwner */\n      0x07\n        /* \"contracts/newDZapNFTStaking.sol\":5447:5466  tokenOwner[tokenId] */\n      swap1\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":5440:5466  delete tokenOwner[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":5101:5473  function withdraw(uint256 tokenId) external {... */\n      jump\t// out\n        /* \"contracts/newDZapNFTStaking.sol\":9270:9335  function unpause() external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/newDZapNFTStaking.sol\":9318:9328  _unpause() */\n      tag_196\n        /* \"contracts/newDZapNFTStaking.sol\":9318:9326  _unpause */\n      tag_197\n        /* \"contracts/newDZapNFTStaking.sol\":9318:9328  _unpause() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/newDZapNFTStaking.sol\":9270:9335  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_207:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":2775:3355  function initialize(... */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_221\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_225:\n        /* \"contracts/newDZapNFTStaking.sol\":3008:3032  __UUPSUpgradeable_init() */\n      tag_227\n        /* \"contracts/newDZapNFTStaking.sol\":3008:3030  __UUPSUpgradeable_init */\n      tag_228\n        /* \"contracts/newDZapNFTStaking.sol\":3008:3032  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/newDZapNFTStaking.sol\":3042:3064  __Ownable_init(_admin) */\n      tag_229\n        /* \"contracts/newDZapNFTStaking.sol\":3057:3063  _admin */\n      dup12\n        /* \"contracts/newDZapNFTStaking.sol\":3042:3056  __Ownable_init */\n      tag_230\n        /* \"contracts/newDZapNFTStaking.sol\":3042:3064  __Ownable_init(_admin) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/newDZapNFTStaking.sol\":3074:3091  __Pausable_init() */\n      tag_231\n        /* \"contracts/newDZapNFTStaking.sol\":3074:3089  __Pausable_init */\n      tag_232\n        /* \"contracts/newDZapNFTStaking.sol\":3074:3091  __Pausable_init() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/newDZapNFTStaking.sol\":3102:3107  admin */\n      0x02\n        /* \"contracts/newDZapNFTStaking.sol\":3102:3116  admin = _admin */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup15\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      dup4\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":3102:3107  admin */\n      0x00\n        /* \"contracts/newDZapNFTStaking.sol\":3126:3145  nft = IERC721(_nft) */\n      dup1\n      sload\n      dup15\n      dup4\n      and\n      swap1\n      dup5\n      and\n      or\n      dup2\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":3102:3116  admin = _admin */\n      0x01\n        /* \"contracts/newDZapNFTStaking.sol\":3155:3189  rewardToken = IERC20(_rewardToken) */\n      dup1\n      sload\n      swap3\n      dup15\n      and\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup3\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":3216:3257  RewardRate(block.number, _rewardPerBlock) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":3227:3239  block.number */\n      number\n        /* \"contracts/newDZapNFTStaking.sol\":3216:3257  RewardRate(block.number, _rewardPerBlock) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup13\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":3199:3210  rewardRates */\n      0x03\n        /* \"contracts/newDZapNFTStaking.sol\":3199:3258  rewardRates.push(RewardRate(block.number, _rewardPerBlock)) */\n      dup1\n      sload\n      swap5\n      dup6\n      add\n      dup2\n      sstore\n      swap1\n      swap3\n      mstore\n      mload\n      swap2\n      swap1\n      swap3\n      mul\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap1\n      mload\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":3268:3283  unbondingPeriod */\n      0x04\n        /* \"contracts/newDZapNFTStaking.sol\":3268:3302  unbondingPeriod = _unbondingPeriod */\n      dup8\n      swap1\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":3312:3328  rewardClaimDelay */\n      0x05\n        /* \"contracts/newDZapNFTStaking.sol\":3312:3348  rewardClaimDelay = _rewardClaimDelay */\n      dup7\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":7233:7283   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":7221:7223   */\n      0x20\n        /* \"#utility.yul\":7206:7224   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":2775:3355  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/newDZapNFTStaking.sol\":9093:9154  function pause() external onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/newDZapNFTStaking.sol\":9139:9147  _pause() */\n      tag_196\n        /* \"contracts/newDZapNFTStaking.sol\":9139:9145  _pause */\n      tag_241\n        /* \"contracts/newDZapNFTStaking.sol\":9139:9147  _pause() */\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":7955:8231  function updateRewardRate(uint256 _rewardPerBlock) external onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/newDZapNFTStaking.sol\":8039:8054  _rewardPerBlock */\n      dup1\n        /* \"contracts/newDZapNFTStaking.sol\":8058:8059  0 */\n      0x00\n        /* \"contracts/newDZapNFTStaking.sol\":8039:8059  _rewardPerBlock == 0 */\n      sub\n        /* \"contracts/newDZapNFTStaking.sol\":8035:8091  if (_rewardPerBlock == 0) revert InvalidRewardPerBlock() */\n      tag_249\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":8068:8091  InvalidRewardPerBlock() */\n      mload(0x40)\n      shl(0xe0, 0xae4fc7ab)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":8035:8091  if (_rewardPerBlock == 0) revert InvalidRewardPerBlock() */\n    tag_249:\n        /* \"contracts/newDZapNFTStaking.sol\":8119:8160  RewardRate(block.number, _rewardPerBlock) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":8130:8142  block.number */\n      number\n        /* \"contracts/newDZapNFTStaking.sol\":8119:8160  RewardRate(block.number, _rewardPerBlock) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup6\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":8102:8113  rewardRates */\n      0x03\n        /* \"contracts/newDZapNFTStaking.sol\":8102:8161  rewardRates.push(RewardRate(block.number, _rewardPerBlock)) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      swap4\n      mload\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      0x02\n      swap1\n      swap6\n      mul\n      swap5\n      dup6\n      add\n      sstore\n      mload\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":8176:8224  RewardRateUpdated(block.number, _rewardPerBlock) */\n      dup3\n      mload\n        /* \"#utility.yul\":5884:5909   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5925:5943   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":5918:5952   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":8176:8224  RewardRateUpdated(block.number, _rewardPerBlock) */\n      0xc390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee50\n      swap2\n        /* \"#utility.yul\":5857:5875   */\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":8176:8224  RewardRateUpdated(block.number, _rewardPerBlock) */\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/newDZapNFTStaking.sol\":7955:8231  function updateRewardRate(uint256 _rewardPerBlock) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/newDZapNFTStaking.sol\":3778:4407  function stake(uint256 tokenId) external whenNotPaused {... */\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/newDZapNFTStaking.sol\":3854:3864  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":3847:3865  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":3847:3853  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":3847:3865  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":3847:3874  stakes[msg.sender][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":3847:3883  stakes[msg.sender][tokenId].isStaked */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/newDZapNFTStaking.sol\":3843:3907  if (stakes[msg.sender][tokenId].isStaked) revert AlreadyStaked() */\n      iszero\n      tag_255\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":3892:3907  AlreadyStaked() */\n      mload(0x40)\n      shl(0xe0, 0x0ae3514d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":3843:3907  if (stakes[msg.sender][tokenId].isStaked) revert AlreadyStaked() */\n    tag_255:\n        /* \"contracts/newDZapNFTStaking.sol\":3921:3924  nft */\n      sload(0x00)\n        /* \"contracts/newDZapNFTStaking.sol\":3921:3941  nft.ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2421:2446   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":3945:3955  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":3921:3924  nft */\n      and\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":3921:3932  nft.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":3921:3941  nft.ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":3921:3955  nft.ownerOf(tokenId) != msg.sender */\n      and\n      eq\n        /* \"contracts/newDZapNFTStaking.sol\":3917:3979  if (nft.ownerOf(tokenId) != msg.sender) revert NotTokenOwner() */\n      tag_261\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":3964:3979  NotTokenOwner() */\n      mload(0x40)\n      shl(0xe0, 0x59dc379f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":3917:3979  if (nft.ownerOf(tokenId) != msg.sender) revert NotTokenOwner() */\n    tag_261:\n        /* \"contracts/newDZapNFTStaking.sol\":3990:4024  _claimRewards(msg.sender, tokenId) */\n      tag_262\n        /* \"contracts/newDZapNFTStaking.sol\":4004:4014  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":4016:4023  tokenId */\n      dup3\n        /* \"contracts/newDZapNFTStaking.sol\":3990:4003  _claimRewards */\n      tag_166\n        /* \"contracts/newDZapNFTStaking.sol\":3990:4024  _claimRewards(msg.sender, tokenId) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/newDZapNFTStaking.sol\":4035:4038  nft */\n      sload(0x00)\n        /* \"contracts/newDZapNFTStaking.sol\":4035:4091  nft.safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4056:4066  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":4035:4091  nft.safeTransferFrom(msg.sender, address(this), tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6940:6974   */\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4076:4080  this */\n      address\n        /* \"#utility.yul\":6990:7008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6983:7026   */\n      mstore\n        /* \"#utility.yul\":7042:7060   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7035:7069   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":4035:4038  nft */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":4035:4055  nft.safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":6875:6893   */\n      0x64\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":4035:4091  nft.safeTransferFrom(msg.sender, address(this), tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_264:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_266\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_266:\n      pop\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":4131:4316  Stake({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4191:4203  block.number */\n      number\n        /* \"contracts/newDZapNFTStaking.sol\":4131:4316  Stake({... */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n      0x00\n      dup4\n      dup6\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4262:4277  block.timestamp */\n      timestamp\n        /* \"contracts/newDZapNFTStaking.sol\":4131:4316  Stake({... */\n      0x60\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4301:4305  true */\n      0x01\n        /* \"contracts/newDZapNFTStaking.sol\":4131:4316  Stake({... */\n      0x80\n      dup8\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4108:4118  msg.sender */\n      caller\n        /* \"contracts/newDZapNFTStaking.sol\":4101:4119  stakes[msg.sender] */\n      dup1\n      dup7\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4101:4107  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":4101:4119  stakes[msg.sender] */\n      dup8\n      mstore\n      dup10\n      dup7\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":4101:4128  stakes[msg.sender][tokenId] */\n      dup14\n      dup8\n      mstore\n      dup8\n      mstore\n      dup10\n      dup7\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":4101:4316  stakes[msg.sender][tokenId] = Stake({... */\n      swap9\n      mload\n      dup10\n      sstore\n      swap7\n      mload\n      swap2\n      dup9\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap2\n      mload\n      0x02\n      dup8\n      add\n      sstore\n      mload\n      0x03\n      dup7\n      add\n      sstore\n      mload\n      0x04\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap5\n      iszero\n      iszero\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":4326:4336  tokenOwner */\n      0x07\n        /* \"contracts/newDZapNFTStaking.sol\":4326:4345  tokenOwner[tokenId] */\n      dup2\n      mstore\n      swap2\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":4326:4358  tokenOwner[tokenId] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":4373:4400  Staked(msg.sender, tokenId) */\n      swap2\n      mload\n        /* \"#utility.yul\":2421:2446   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":4108:4118  msg.sender */\n      swap2\n      swap4\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":4373:4400  Staked(msg.sender, tokenId) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap3\n      pop\n        /* \"#utility.yul\":2394:2412   */\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":4373:4400  Staked(msg.sender, tokenId) */\n      tag_184\n        /* \"#utility.yul\":2275:2452   */\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":1219:1250  RewardRate[] public rewardRates */\n    tag_142:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2213:2264   */\n      mstore\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/newDZapNFTStaking.sol\":6217:6664  function _claimRewards(address user, uint256 tokenId) internal {... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":6316:6328  stakes[user] */\n      dup3\n      and\n        /* \"contracts/newDZapNFTStaking.sol\":6290:6313  Stake storage stakeInfo */\n      0x00\n        /* \"contracts/newDZapNFTStaking.sol\":6316:6328  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/newDZapNFTStaking.sol\":6316:6322  stakes */\n      0x06\n        /* \"contracts/newDZapNFTStaking.sol\":6316:6328  stakes[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":6316:6337  stakes[user][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/newDZapNFTStaking.sol\":6383:6401  stakeInfo.stakedAt */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/newDZapNFTStaking.sol\":6316:6337  stakes[user][tokenId] */\n      swap1\n      swap2\n        /* \"contracts/newDZapNFTStaking.sol\":6290:6313  Stake storage stakeInfo */\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":6365:6416  _calculateRewards(stakeInfo.stakedAt, block.number) */\n      tag_277\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":6403:6415  block.number */\n      number\n        /* \"contracts/newDZapNFTStaking.sol\":6365:6382  _calculateRewards */\n      tag_278\n        /* \"contracts/newDZapNFTStaking.sol\":6365:6416  _calculateRewards(stakeInfo.stakedAt, block.number) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/newDZapNFTStaking.sol\":6347:6416  uint256 rewards = _calculateRewards(stakeInfo.stakedAt, block.number) */\n      swap1\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":6430:6441  rewards > 0 */\n      dup1\n      iszero\n        /* \"contracts/newDZapNFTStaking.sol\":6426:6658  if (rewards > 0) {... */\n      tag_279\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":6457:6468  rewardToken */\n      sload(0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":6457:6496  rewardToken.safeTransfer(user, rewards) */\n      tag_280\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":6457:6468  rewardToken */\n      and\n        /* \"contracts/newDZapNFTStaking.sol\":6482:6486  user */\n      dup6\n        /* \"contracts/newDZapNFTStaking.sol\":6488:6495  rewards */\n      dup4\n        /* \"contracts/newDZapNFTStaking.sol\":6457:6481  rewardToken.safeTransfer */\n      tag_281\n        /* \"contracts/newDZapNFTStaking.sol\":6457:6496  rewardToken.safeTransfer(user, rewards) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/newDZapNFTStaking.sol\":6529:6533  user */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/newDZapNFTStaking.sol\":6515:6543  RewardClaimed(user, rewards) */\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/newDZapNFTStaking.sol\":6535:6542  rewards */\n      dup3\n        /* \"contracts/newDZapNFTStaking.sol\":6515:6543  RewardClaimed(user, rewards) */\n      mload(0x40)\n      tag_282\n      swap2\n        /* \"#utility.yul\":2421:2446   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2409:2411   */\n      0x20\n        /* \"#utility.yul\":2394:2412   */\n      add\n      swap1\n        /* \"#utility.yul\":2275:2452   */\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":6515:6543  RewardClaimed(user, rewards) */\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/newDZapNFTStaking.sol\":6578:6590  block.number */\n      number\n        /* \"contracts/newDZapNFTStaking.sol\":6557:6575  stakeInfo.stakedAt */\n      0x01\n      dup4\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":6557:6590  stakeInfo.stakedAt = block.number */\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":6632:6647  block.timestamp */\n      timestamp\n        /* \"contracts/newDZapNFTStaking.sol\":6604:6629  stakeInfo.rewardClaimedAt */\n      0x03\n      dup4\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":6604:6647  stakeInfo.rewardClaimedAt = block.timestamp */\n      sstore\n        /* \"contracts/newDZapNFTStaking.sol\":6426:6658  if (rewards > 0) {... */\n    tag_279:\n        /* \"contracts/newDZapNFTStaking.sol\":6280:6664  {... */\n      pop\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":6217:6664  function _claimRewards(address user, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2213:2264   */\n      mstore\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_274\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_179:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_294:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2231:2263   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2213:2264   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2201:2203   */\n      0x20\n        /* \"#utility.yul\":2186:2204   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      tag_251\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_301\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_302\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/newDZapNFTStaking.sol\":3513:3597  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_309\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_310\n      swap2\n      dup2\n      add\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      0x01\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2231:2263   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2213:2264   */\n      mstore\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_274\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_312:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2421:2446   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_274\n        /* \"#utility.yul\":2275:2452   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_343\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_343:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/newDZapNFTStaking.sol\":7009:7719  function _calculateRewards(uint256 startBlock, uint256 endBlock) internal view returns (uint256 totalRewards) {... */\n    tag_278:\n        /* \"contracts/newDZapNFTStaking.sol\":7143:7154  rewardRates */\n      0x03\n        /* \"contracts/newDZapNFTStaking.sol\":7143:7161  rewardRates.length */\n      sload\n        /* \"contracts/newDZapNFTStaking.sol\":7097:7117  uint256 totalRewards */\n      0x00\n      swap1\n      dup2\n        /* \"contracts/newDZapNFTStaking.sol\":7188:7195  len - 1 */\n      tag_353\n        /* \"contracts/newDZapNFTStaking.sol\":7194:7195  1 */\n      0x01\n        /* \"contracts/newDZapNFTStaking.sol\":7143:7161  rewardRates.length */\n      dup4\n        /* \"contracts/newDZapNFTStaking.sol\":7188:7195  len - 1 */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"contracts/newDZapNFTStaking.sol\":7176:7195  uint256 i = len - 1 */\n      swap1\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7171:7713  for (uint256 i = len - 1; i >= 0; i--) {... */\n    tag_350:\n        /* \"contracts/newDZapNFTStaking.sol\":7224:7246  RewardRate memory rate */\n      0x00\n        /* \"contracts/newDZapNFTStaking.sol\":7249:7260  rewardRates */\n      0x03\n        /* \"contracts/newDZapNFTStaking.sol\":7261:7262  i */\n      dup3\n        /* \"contracts/newDZapNFTStaking.sol\":7249:7263  rewardRates[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_356\n      jumpi\n      tag_356\n      tag_357\n      jump\t// in\n    tag_356:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/newDZapNFTStaking.sol\":7224:7263  RewardRate memory rate = rewardRates[i] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7292:7296  rate */\n      dup1\n        /* \"contracts/newDZapNFTStaking.sol\":7292:7308  rate.blockNumber */\n      0x00\n      add\n      mload\n        /* \"contracts/newDZapNFTStaking.sol\":7281:7289  endBlock */\n      dup6\n        /* \"contracts/newDZapNFTStaking.sol\":7281:7308  endBlock > rate.blockNumber */\n      gt\n        /* \"contracts/newDZapNFTStaking.sol\":7277:7703  if (endBlock > rate.blockNumber) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":7356:7372  rate.blockNumber */\n      dup1\n      mload\n        /* \"contracts/newDZapNFTStaking.sol\":7328:7342  uint256 blocks */\n      0x00\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":7345:7372  endBlock - rate.blockNumber */\n      tag_360\n      swap1\n        /* \"contracts/newDZapNFTStaking.sol\":7345:7353  endBlock */\n      dup8\n        /* \"contracts/newDZapNFTStaking.sol\":7345:7372  endBlock - rate.blockNumber */\n      tag_354\n      jump\t// in\n    tag_360:\n        /* \"contracts/newDZapNFTStaking.sol\":7328:7372  uint256 blocks = endBlock - rate.blockNumber */\n      swap1\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7415:7419  rate */\n      dup2\n        /* \"contracts/newDZapNFTStaking.sol\":7415:7434  rate.rewardPerBlock */\n      0x20\n      add\n      mload\n        /* \"contracts/newDZapNFTStaking.sol\":7406:7412  blocks */\n      dup2\n        /* \"contracts/newDZapNFTStaking.sol\":7406:7434  blocks * rate.rewardPerBlock */\n      tag_361\n      swap2\n      swap1\n      tag_362\n      jump\t// in\n    tag_361:\n        /* \"contracts/newDZapNFTStaking.sol\":7390:7434  totalRewards += blocks * rate.rewardPerBlock */\n      tag_363\n      swap1\n      dup7\n      tag_163\n      jump\t// in\n    tag_363:\n        /* \"contracts/newDZapNFTStaking.sol\":7463:7479  rate.blockNumber */\n      dup3\n      mload\n      swap7\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7390:7434  totalRewards += blocks * rate.rewardPerBlock */\n      swap5\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7501:7523  endBlock <= startBlock */\n      dup7\n      dup7\n      gt\n        /* \"contracts/newDZapNFTStaking.sol\":7497:7654  if (endBlock <= startBlock) {... */\n      tag_364\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":7589:7608  rate.rewardPerBlock */\n      0x20\n      dup3\n      add\n      mload\n        /* \"contracts/newDZapNFTStaking.sol\":7564:7585  endBlock - startBlock */\n      tag_365\n        /* \"contracts/newDZapNFTStaking.sol\":7575:7585  startBlock */\n      dup9\n        /* \"contracts/newDZapNFTStaking.sol\":7564:7572  endBlock */\n      dup9\n        /* \"contracts/newDZapNFTStaking.sol\":7564:7585  endBlock - startBlock */\n      tag_354\n      jump\t// in\n    tag_365:\n        /* \"contracts/newDZapNFTStaking.sol\":7563:7608  (endBlock - startBlock) * rate.rewardPerBlock */\n      tag_366\n      swap2\n      swap1\n      tag_362\n      jump\t// in\n    tag_366:\n        /* \"contracts/newDZapNFTStaking.sol\":7547:7608  totalRewards += (endBlock - startBlock) * rate.rewardPerBlock */\n      tag_367\n      swap1\n      dup7\n      tag_163\n      jump\t// in\n    tag_367:\n      swap5\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7630:7635  break */\n      pop\n      pop\n      jump(tag_351)\n        /* \"contracts/newDZapNFTStaking.sol\":7497:7654  if (endBlock <= startBlock) {... */\n    tag_364:\n        /* \"contracts/newDZapNFTStaking.sol\":7675:7676  i */\n      dup3\n        /* \"contracts/newDZapNFTStaking.sol\":7680:7681  0 */\n      0x00\n        /* \"contracts/newDZapNFTStaking.sol\":7675:7681  i == 0 */\n      sub\n        /* \"contracts/newDZapNFTStaking.sol\":7671:7688  if (i == 0) break */\n      tag_368\n      jumpi\n        /* \"contracts/newDZapNFTStaking.sol\":7683:7688  break */\n      pop\n      pop\n      jump(tag_351)\n        /* \"contracts/newDZapNFTStaking.sol\":7671:7688  if (i == 0) break */\n    tag_368:\n        /* \"contracts/newDZapNFTStaking.sol\":7310:7703  {... */\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7277:7703  if (endBlock > rate.blockNumber) {... */\n    tag_359:\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7205:7208  i-- */\n      dup1\n      tag_369\n      dup2\n      tag_370\n      jump\t// in\n    tag_369:\n      swap2\n      pop\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7171:7713  for (uint256 i = len - 1; i >= 0; i--) {... */\n      jump(tag_350)\n    tag_351:\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7119:7719  {... */\n      pop\n        /* \"contracts/newDZapNFTStaking.sol\":7009:7719  function _calculateRewards(uint256 startBlock, uint256 endBlock) internal view returns (uint256 totalRewards) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8510:8542   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8492:8543   */\n      mstore\n        /* \"#utility.yul\":8559:8577   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8552:8586   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8465:8483   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_320\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_375\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_295:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_384\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_385\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_320\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_388\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_204\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_391\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_403\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_403:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_407\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_408\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_409\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_410\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2231:2263   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2213:2264   */\n      mstore\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_274\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_385:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_416\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2231:2263   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2213:2264   */\n      mstore\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_274\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_416:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_420\n      swap2\n      swap1\n      tag_421\n      jump\t// in\n    tag_420:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_424\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_423)\n    tag_424:\n      0x60\n      swap2\n      pop\n    tag_423:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_425\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_426\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_419:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_432\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_433\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_426:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_435\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_436\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_437\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_432)\n    tag_435:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_439\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_439:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_440\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2231:2263   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2213:2264   */\n      mstore\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_274\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_440:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      swap3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_443\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2213:2264   */\n      mstore\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_274\n        /* \"#utility.yul\":2067:2270   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_443:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_445\n      swap2\n      swap1\n      tag_421\n      jump\t// in\n    tag_445:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_448\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_447)\n    tag_448:\n      0x60\n      swap2\n      pop\n    tag_447:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_449\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_426\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_437:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_451\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_451:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:194   */\n    tag_38:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_460:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:330   */\n    tag_453:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":274:305   */\n      dup2\n      and\n        /* \"#utility.yul\":264:306   */\n      dup2\n      eq\n        /* \"#utility.yul\":254:324   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":335:462   */\n    tag_454:\n        /* \"#utility.yul\":396:406   */\n      0x4e487b71\n        /* \"#utility.yul\":391:394   */\n      0xe0\n        /* \"#utility.yul\":387:407   */\n      shl\n        /* \"#utility.yul\":384:385   */\n      0x00\n        /* \"#utility.yul\":377:408   */\n      mstore\n        /* \"#utility.yul\":427:431   */\n      0x41\n        /* \"#utility.yul\":424:425   */\n      0x04\n        /* \"#utility.yul\":417:432   */\n      mstore\n        /* \"#utility.yul\":451:455   */\n      0x24\n        /* \"#utility.yul\":448:449   */\n      0x00\n        /* \"#utility.yul\":441:456   */\n      revert\n        /* \"#utility.yul\":467:1185   */\n    tag_455:\n        /* \"#utility.yul\":509:514   */\n      0x00\n        /* \"#utility.yul\":562:565   */\n      dup3\n        /* \"#utility.yul\":555:559   */\n      0x1f\n        /* \"#utility.yul\":547:553   */\n      dup4\n        /* \"#utility.yul\":543:560   */\n      add\n        /* \"#utility.yul\":539:566   */\n      slt\n        /* \"#utility.yul\":529:584   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":580:581   */\n      0x00\n        /* \"#utility.yul\":577:578   */\n      dup1\n        /* \"#utility.yul\":570:582   */\n      revert\n        /* \"#utility.yul\":529:584   */\n    tag_465:\n        /* \"#utility.yul\":616:622   */\n      dup2\n        /* \"#utility.yul\":603:623   */\n      calldataload\n        /* \"#utility.yul\":642:660   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":679:681   */\n      dup1\n        /* \"#utility.yul\":675:677   */\n      dup3\n        /* \"#utility.yul\":672:682   */\n      gt\n        /* \"#utility.yul\":669:705   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":685:703   */\n      tag_467\n      tag_454\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":760:762   */\n      0x40\n        /* \"#utility.yul\":754:763   */\n      mload\n        /* \"#utility.yul\":728:730   */\n      0x1f\n        /* \"#utility.yul\":814:827   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":810:832   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":834:836   */\n      0x3f\n        /* \"#utility.yul\":806:837   */\n      add\n        /* \"#utility.yul\":802:842   */\n      and\n        /* \"#utility.yul\":790:843   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":858:876   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":878:900   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":855:901   */\n      or\n        /* \"#utility.yul\":852:924   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":904:922   */\n      tag_469\n      tag_454\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":944:954   */\n      dup2\n        /* \"#utility.yul\":940:942   */\n      0x40\n        /* \"#utility.yul\":933:955   */\n      mstore\n        /* \"#utility.yul\":979:981   */\n      dup4\n        /* \"#utility.yul\":971:977   */\n      dup2\n        /* \"#utility.yul\":964:982   */\n      mstore\n        /* \"#utility.yul\":1025:1028   */\n      dup7\n        /* \"#utility.yul\":1018:1022   */\n      0x20\n        /* \"#utility.yul\":1013:1015   */\n      dup6\n        /* \"#utility.yul\":1005:1011   */\n      dup9\n        /* \"#utility.yul\":1001:1016   */\n      add\n        /* \"#utility.yul\":997:1023   */\n      add\n        /* \"#utility.yul\":994:1029   */\n      gt\n        /* \"#utility.yul\":991:1046   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":1042:1043   */\n      0x00\n        /* \"#utility.yul\":1039:1040   */\n      dup1\n        /* \"#utility.yul\":1032:1044   */\n      revert\n        /* \"#utility.yul\":991:1046   */\n    tag_470:\n        /* \"#utility.yul\":1106:1108   */\n      dup4\n        /* \"#utility.yul\":1099:1103   */\n      0x20\n        /* \"#utility.yul\":1091:1097   */\n      dup8\n        /* \"#utility.yul\":1087:1104   */\n      add\n        /* \"#utility.yul\":1080:1084   */\n      0x20\n        /* \"#utility.yul\":1072:1078   */\n      dup4\n        /* \"#utility.yul\":1068:1085   */\n      add\n        /* \"#utility.yul\":1055:1109   */\n      calldatacopy\n        /* \"#utility.yul\":1153:1154   */\n      0x00\n        /* \"#utility.yul\":1146:1150   */\n      0x20\n        /* \"#utility.yul\":1141:1143   */\n      dup6\n        /* \"#utility.yul\":1133:1139   */\n      dup4\n        /* \"#utility.yul\":1129:1144   */\n      add\n        /* \"#utility.yul\":1125:1151   */\n      add\n        /* \"#utility.yul\":1118:1155   */\n      mstore\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1164:1179   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":467:1185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1190:1855   */\n    tag_47:\n        /* \"#utility.yul\":1285:1291   */\n      0x00\n        /* \"#utility.yul\":1293:1299   */\n      dup1\n        /* \"#utility.yul\":1301:1307   */\n      0x00\n        /* \"#utility.yul\":1309:1315   */\n      dup1\n        /* \"#utility.yul\":1362:1365   */\n      0x80\n        /* \"#utility.yul\":1350:1359   */\n      dup6\n        /* \"#utility.yul\":1341:1348   */\n      dup8\n        /* \"#utility.yul\":1337:1360   */\n      sub\n        /* \"#utility.yul\":1333:1366   */\n      slt\n        /* \"#utility.yul\":1330:1383   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":1379:1380   */\n      0x00\n        /* \"#utility.yul\":1376:1377   */\n      dup1\n        /* \"#utility.yul\":1369:1381   */\n      revert\n        /* \"#utility.yul\":1330:1383   */\n    tag_472:\n        /* \"#utility.yul\":1418:1427   */\n      dup5\n        /* \"#utility.yul\":1405:1428   */\n      calldataload\n        /* \"#utility.yul\":1437:1468   */\n      tag_473\n        /* \"#utility.yul\":1462:1467   */\n      dup2\n        /* \"#utility.yul\":1437:1468   */\n      tag_453\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1487:1492   */\n      swap4\n      pop\n        /* \"#utility.yul\":1544:1546   */\n      0x20\n        /* \"#utility.yul\":1529:1547   */\n      dup6\n      add\n        /* \"#utility.yul\":1516:1548   */\n      calldataload\n        /* \"#utility.yul\":1557:1590   */\n      tag_474\n        /* \"#utility.yul\":1516:1548   */\n      dup2\n        /* \"#utility.yul\":1557:1590   */\n      tag_453\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":1609:1616   */\n      swap3\n      pop\n        /* \"#utility.yul\":1663:1665   */\n      0x40\n        /* \"#utility.yul\":1648:1666   */\n      dup6\n      add\n        /* \"#utility.yul\":1635:1667   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1718:1720   */\n      0x60\n        /* \"#utility.yul\":1703:1721   */\n      dup6\n      add\n        /* \"#utility.yul\":1690:1722   */\n      calldataload\n        /* \"#utility.yul\":1745:1763   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1734:1764   */\n      dup2\n      gt\n        /* \"#utility.yul\":1731:1781   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":1777:1778   */\n      0x00\n        /* \"#utility.yul\":1774:1775   */\n      dup1\n        /* \"#utility.yul\":1767:1779   */\n      revert\n        /* \"#utility.yul\":1731:1781   */\n    tag_475:\n        /* \"#utility.yul\":1800:1849   */\n      tag_476\n        /* \"#utility.yul\":1841:1848   */\n      dup8\n        /* \"#utility.yul\":1832:1838   */\n      dup3\n        /* \"#utility.yul\":1821:1830   */\n      dup9\n        /* \"#utility.yul\":1817:1839   */\n      add\n        /* \"#utility.yul\":1800:1849   */\n      tag_455\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":1790:1849   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1190:1855   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:3136   */\n    tag_84:\n        /* \"#utility.yul\":2758:2764   */\n      0x00\n        /* \"#utility.yul\":2766:2772   */\n      dup1\n        /* \"#utility.yul\":2819:2821   */\n      0x40\n        /* \"#utility.yul\":2807:2816   */\n      dup4\n        /* \"#utility.yul\":2798:2805   */\n      dup6\n        /* \"#utility.yul\":2794:2817   */\n      sub\n        /* \"#utility.yul\":2790:2822   */\n      slt\n        /* \"#utility.yul\":2787:2839   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":2835:2836   */\n      0x00\n        /* \"#utility.yul\":2832:2833   */\n      dup1\n        /* \"#utility.yul\":2825:2837   */\n      revert\n        /* \"#utility.yul\":2787:2839   */\n    tag_482:\n        /* \"#utility.yul\":2874:2883   */\n      dup3\n        /* \"#utility.yul\":2861:2884   */\n      calldataload\n        /* \"#utility.yul\":2893:2924   */\n      tag_483\n        /* \"#utility.yul\":2918:2923   */\n      dup2\n        /* \"#utility.yul\":2893:2924   */\n      tag_453\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":2943:2948   */\n      swap2\n      pop\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2984:3002   */\n      dup4\n      add\n        /* \"#utility.yul\":2971:3003   */\n      calldataload\n        /* \"#utility.yul\":3026:3044   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3015:3045   */\n      dup2\n      gt\n        /* \"#utility.yul\":3012:3062   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":3058:3059   */\n      0x00\n        /* \"#utility.yul\":3055:3056   */\n      dup1\n        /* \"#utility.yul\":3048:3060   */\n      revert\n        /* \"#utility.yul\":3012:3062   */\n    tag_484:\n        /* \"#utility.yul\":3081:3130   */\n      tag_485\n        /* \"#utility.yul\":3122:3129   */\n      dup6\n        /* \"#utility.yul\":3113:3119   */\n      dup3\n        /* \"#utility.yul\":3102:3111   */\n      dup7\n        /* \"#utility.yul\":3098:3120   */\n      add\n        /* \"#utility.yul\":3081:3130   */\n      tag_455\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3071:3130   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2681:3136   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3323:3638   */\n    tag_94:\n        /* \"#utility.yul\":3391:3397   */\n      0x00\n        /* \"#utility.yul\":3399:3405   */\n      dup1\n        /* \"#utility.yul\":3452:3454   */\n      0x40\n        /* \"#utility.yul\":3440:3449   */\n      dup4\n        /* \"#utility.yul\":3431:3438   */\n      dup6\n        /* \"#utility.yul\":3427:3450   */\n      sub\n        /* \"#utility.yul\":3423:3455   */\n      slt\n        /* \"#utility.yul\":3420:3472   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3465:3466   */\n      dup1\n        /* \"#utility.yul\":3458:3470   */\n      revert\n        /* \"#utility.yul\":3420:3472   */\n    tag_488:\n        /* \"#utility.yul\":3507:3516   */\n      dup3\n        /* \"#utility.yul\":3494:3517   */\n      calldataload\n        /* \"#utility.yul\":3526:3557   */\n      tag_489\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3526:3557   */\n      tag_453\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3576:3581   */\n      swap5\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"#utility.yul\":3613:3631   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3600:3632   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3323:3638   */\n      jump\t// out\n        /* \"#utility.yul\":4313:5049   */\n    tag_113:\n        /* \"#utility.yul\":4417:4423   */\n      0x00\n        /* \"#utility.yul\":4425:4431   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      0x00\n        /* \"#utility.yul\":4441:4447   */\n      dup1\n        /* \"#utility.yul\":4449:4455   */\n      0x00\n        /* \"#utility.yul\":4457:4463   */\n      dup1\n        /* \"#utility.yul\":4510:4513   */\n      0xc0\n        /* \"#utility.yul\":4498:4507   */\n      dup8\n        /* \"#utility.yul\":4489:4496   */\n      dup10\n        /* \"#utility.yul\":4485:4508   */\n      sub\n        /* \"#utility.yul\":4481:4514   */\n      slt\n        /* \"#utility.yul\":4478:4531   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":4527:4528   */\n      0x00\n        /* \"#utility.yul\":4524:4525   */\n      dup1\n        /* \"#utility.yul\":4517:4529   */\n      revert\n        /* \"#utility.yul\":4478:4531   */\n    tag_493:\n        /* \"#utility.yul\":4566:4575   */\n      dup7\n        /* \"#utility.yul\":4553:4576   */\n      calldataload\n        /* \"#utility.yul\":4585:4616   */\n      tag_494\n        /* \"#utility.yul\":4610:4615   */\n      dup2\n        /* \"#utility.yul\":4585:4616   */\n      tag_453\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4635:4640   */\n      swap6\n      pop\n        /* \"#utility.yul\":4692:4694   */\n      0x20\n        /* \"#utility.yul\":4677:4695   */\n      dup8\n      add\n        /* \"#utility.yul\":4664:4696   */\n      calldataload\n        /* \"#utility.yul\":4705:4738   */\n      tag_495\n        /* \"#utility.yul\":4664:4696   */\n      dup2\n        /* \"#utility.yul\":4705:4738   */\n      tag_453\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4757:4764   */\n      swap5\n      pop\n        /* \"#utility.yul\":4816:4818   */\n      0x40\n        /* \"#utility.yul\":4801:4819   */\n      dup8\n      add\n        /* \"#utility.yul\":4788:4820   */\n      calldataload\n        /* \"#utility.yul\":4829:4862   */\n      tag_496\n        /* \"#utility.yul\":4788:4820   */\n      dup2\n        /* \"#utility.yul\":4829:4862   */\n      tag_453\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4313:5049   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":4881:4888   */\n      swap5\n      swap6\n        /* \"#utility.yul\":4935:4937   */\n      0x60\n        /* \"#utility.yul\":4920:4938   */\n      dup2\n      add\n        /* \"#utility.yul\":4907:4939   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":4986:4989   */\n      0x80\n        /* \"#utility.yul\":4971:4990   */\n      dup2\n      add\n        /* \"#utility.yul\":4958:4991   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":5038:5041   */\n      0xa0\n        /* \"#utility.yul\":5023:5042   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5010:5043   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4313:5049   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5304   */\n    tag_456:\n        /* \"#utility.yul\":5139:5140   */\n      0x00\n        /* \"#utility.yul\":5149:5262   */\n    tag_498:\n        /* \"#utility.yul\":5163:5169   */\n      dup4\n        /* \"#utility.yul\":5160:5161   */\n      dup2\n        /* \"#utility.yul\":5157:5170   */\n      lt\n        /* \"#utility.yul\":5149:5262   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":5239:5250   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5233:5251   */\n      mload\n        /* \"#utility.yul\":5220:5231   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5213:5252   */\n      mstore\n        /* \"#utility.yul\":5185:5187   */\n      0x20\n        /* \"#utility.yul\":5178:5188   */\n      add\n        /* \"#utility.yul\":5149:5262   */\n      jump(tag_498)\n    tag_500:\n      pop\n      pop\n        /* \"#utility.yul\":5296:5297   */\n      0x00\n        /* \"#utility.yul\":5278:5294   */\n      swap2\n      add\n        /* \"#utility.yul\":5271:5298   */\n      mstore\n        /* \"#utility.yul\":5054:5304   */\n      jump\t// out\n        /* \"#utility.yul\":5309:5705   */\n    tag_138:\n        /* \"#utility.yul\":5458:5460   */\n      0x20\n        /* \"#utility.yul\":5447:5456   */\n      dup2\n        /* \"#utility.yul\":5440:5461   */\n      mstore\n        /* \"#utility.yul\":5421:5425   */\n      0x00\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5484:5497   */\n      mload\n        /* \"#utility.yul\":5533:5539   */\n      dup1\n        /* \"#utility.yul\":5528:5530   */\n      0x20\n        /* \"#utility.yul\":5517:5526   */\n      dup5\n        /* \"#utility.yul\":5513:5531   */\n      add\n        /* \"#utility.yul\":5506:5540   */\n      mstore\n        /* \"#utility.yul\":5549:5628   */\n      tag_502\n        /* \"#utility.yul\":5621:5627   */\n      dup2\n        /* \"#utility.yul\":5616:5618   */\n      0x40\n        /* \"#utility.yul\":5605:5614   */\n      dup6\n        /* \"#utility.yul\":5601:5619   */\n      add\n        /* \"#utility.yul\":5596:5598   */\n      0x20\n        /* \"#utility.yul\":5588:5594   */\n      dup8\n        /* \"#utility.yul\":5584:5599   */\n      add\n        /* \"#utility.yul\":5549:5628   */\n      tag_456\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5689:5691   */\n      0x1f\n        /* \"#utility.yul\":5668:5683   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5664:5693   */\n      and\n        /* \"#utility.yul\":5649:5694   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5696:5698   */\n      0x40\n        /* \"#utility.yul\":5645:5699   */\n      add\n      swap3\n        /* \"#utility.yul\":5309:5705   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5963:6210   */\n    tag_148:\n        /* \"#utility.yul\":6022:6028   */\n      0x00\n        /* \"#utility.yul\":6075:6077   */\n      0x20\n        /* \"#utility.yul\":6063:6072   */\n      dup3\n        /* \"#utility.yul\":6054:6061   */\n      dup5\n        /* \"#utility.yul\":6050:6073   */\n      sub\n        /* \"#utility.yul\":6046:6078   */\n      slt\n        /* \"#utility.yul\":6043:6095   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":6091:6092   */\n      0x00\n        /* \"#utility.yul\":6088:6089   */\n      dup1\n        /* \"#utility.yul\":6081:6093   */\n      revert\n        /* \"#utility.yul\":6043:6095   */\n    tag_505:\n        /* \"#utility.yul\":6130:6139   */\n      dup2\n        /* \"#utility.yul\":6117:6140   */\n      calldataload\n        /* \"#utility.yul\":6149:6180   */\n      tag_432\n        /* \"#utility.yul\":6174:6179   */\n      dup2\n        /* \"#utility.yul\":6149:6180   */\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":6438:6565   */\n    tag_457:\n        /* \"#utility.yul\":6499:6509   */\n      0x4e487b71\n        /* \"#utility.yul\":6494:6497   */\n      0xe0\n        /* \"#utility.yul\":6490:6510   */\n      shl\n        /* \"#utility.yul\":6487:6488   */\n      0x00\n        /* \"#utility.yul\":6480:6511   */\n      mstore\n        /* \"#utility.yul\":6530:6534   */\n      0x11\n        /* \"#utility.yul\":6527:6528   */\n      0x04\n        /* \"#utility.yul\":6520:6535   */\n      mstore\n        /* \"#utility.yul\":6554:6558   */\n      0x24\n        /* \"#utility.yul\":6551:6552   */\n      0x00\n        /* \"#utility.yul\":6544:6559   */\n      revert\n        /* \"#utility.yul\":6570:6695   */\n    tag_163:\n        /* \"#utility.yul\":6635:6644   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6656:6666   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6653:6689   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":6669:6687   */\n      tag_419\n      tag_457\n      jump\t// in\n        /* \"#utility.yul\":7294:7545   */\n    tag_260:\n        /* \"#utility.yul\":7364:7370   */\n      0x00\n        /* \"#utility.yul\":7417:7419   */\n      0x20\n        /* \"#utility.yul\":7405:7414   */\n      dup3\n        /* \"#utility.yul\":7396:7403   */\n      dup5\n        /* \"#utility.yul\":7392:7415   */\n      sub\n        /* \"#utility.yul\":7388:7420   */\n      slt\n        /* \"#utility.yul\":7385:7437   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":7433:7434   */\n      0x00\n        /* \"#utility.yul\":7430:7431   */\n      dup1\n        /* \"#utility.yul\":7423:7435   */\n      revert\n        /* \"#utility.yul\":7385:7437   */\n    tag_515:\n        /* \"#utility.yul\":7465:7474   */\n      dup2\n        /* \"#utility.yul\":7459:7475   */\n      mload\n        /* \"#utility.yul\":7484:7515   */\n      tag_432\n        /* \"#utility.yul\":7509:7514   */\n      dup2\n        /* \"#utility.yul\":7484:7515   */\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":7550:7734   */\n    tag_311:\n        /* \"#utility.yul\":7620:7626   */\n      0x00\n        /* \"#utility.yul\":7673:7675   */\n      0x20\n        /* \"#utility.yul\":7661:7670   */\n      dup3\n        /* \"#utility.yul\":7652:7659   */\n      dup5\n        /* \"#utility.yul\":7648:7671   */\n      sub\n        /* \"#utility.yul\":7644:7676   */\n      slt\n        /* \"#utility.yul\":7641:7693   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":7689:7690   */\n      0x00\n        /* \"#utility.yul\":7686:7687   */\n      dup1\n        /* \"#utility.yul\":7679:7691   */\n      revert\n        /* \"#utility.yul\":7641:7693   */\n    tag_518:\n      pop\n        /* \"#utility.yul\":7712:7728   */\n      mload\n      swap2\n        /* \"#utility.yul\":7550:7734   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7739:7867   */\n    tag_354:\n        /* \"#utility.yul\":7806:7815   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7827:7838   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7824:7861   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":7841:7859   */\n      tag_419\n      tag_457\n      jump\t// in\n        /* \"#utility.yul\":7872:7999   */\n    tag_357:\n        /* \"#utility.yul\":7933:7943   */\n      0x4e487b71\n        /* \"#utility.yul\":7928:7931   */\n      0xe0\n        /* \"#utility.yul\":7924:7944   */\n      shl\n        /* \"#utility.yul\":7921:7922   */\n      0x00\n        /* \"#utility.yul\":7914:7945   */\n      mstore\n        /* \"#utility.yul\":7964:7968   */\n      0x32\n        /* \"#utility.yul\":7961:7962   */\n      0x04\n        /* \"#utility.yul\":7954:7969   */\n      mstore\n        /* \"#utility.yul\":7988:7992   */\n      0x24\n        /* \"#utility.yul\":7985:7986   */\n      0x00\n        /* \"#utility.yul\":7978:7993   */\n      revert\n        /* \"#utility.yul\":8004:8172   */\n    tag_362:\n        /* \"#utility.yul\":8077:8086   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8108:8117   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8125:8140   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8119:8141   */\n      dup5\n      eq\n        /* \"#utility.yul\":8105:8142   */\n      or\n        /* \"#utility.yul\":8095:8166   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":8146:8164   */\n      tag_419\n      tag_457\n      jump\t// in\n        /* \"#utility.yul\":8177:8313   */\n    tag_370:\n        /* \"#utility.yul\":8216:8219   */\n      0x00\n        /* \"#utility.yul\":8244:8249   */\n      dup2\n        /* \"#utility.yul\":8234:8273   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":8253:8271   */\n      tag_528\n      tag_457\n      jump\t// in\n    tag_528:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":8289:8307   */\n      add\n      swap1\n        /* \"#utility.yul\":8177:8313   */\n      jump\t// out\n        /* \"#utility.yul\":8597:8874   */\n    tag_411:\n        /* \"#utility.yul\":8664:8670   */\n      0x00\n        /* \"#utility.yul\":8717:8719   */\n      0x20\n        /* \"#utility.yul\":8705:8714   */\n      dup3\n        /* \"#utility.yul\":8696:8703   */\n      dup5\n        /* \"#utility.yul\":8692:8715   */\n      sub\n        /* \"#utility.yul\":8688:8720   */\n      slt\n        /* \"#utility.yul\":8685:8737   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":8733:8734   */\n      0x00\n        /* \"#utility.yul\":8730:8731   */\n      dup1\n        /* \"#utility.yul\":8723:8735   */\n      revert\n        /* \"#utility.yul\":8685:8737   */\n    tag_531:\n        /* \"#utility.yul\":8765:8774   */\n      dup2\n        /* \"#utility.yul\":8759:8775   */\n      mload\n        /* \"#utility.yul\":8818:8823   */\n      dup1\n        /* \"#utility.yul\":8811:8824   */\n      iszero\n        /* \"#utility.yul\":8804:8825   */\n      iszero\n        /* \"#utility.yul\":8797:8802   */\n      dup2\n        /* \"#utility.yul\":8794:8826   */\n      eq\n        /* \"#utility.yul\":8784:8844   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":8840:8841   */\n      0x00\n        /* \"#utility.yul\":8837:8838   */\n      dup1\n        /* \"#utility.yul\":8830:8842   */\n      revert\n        /* \"#utility.yul\":8879:9166   */\n    tag_421:\n        /* \"#utility.yul\":9008:9011   */\n      0x00\n        /* \"#utility.yul\":9046:9052   */\n      dup3\n        /* \"#utility.yul\":9040:9053   */\n      mload\n        /* \"#utility.yul\":9062:9128   */\n      tag_534\n        /* \"#utility.yul\":9121:9127   */\n      dup2\n        /* \"#utility.yul\":9116:9119   */\n      dup5\n        /* \"#utility.yul\":9109:9113   */\n      0x20\n        /* \"#utility.yul\":9101:9107   */\n      dup8\n        /* \"#utility.yul\":9097:9114   */\n      add\n        /* \"#utility.yul\":9062:9128   */\n      tag_456\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":9144:9160   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":8879:9166   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n\n    auxdata: 0xa2646970667358221220effd0e601bcb0da7a00d76d99402ab04035980320c9e53be9c549146857546e064736f6c63430008180033\n}\n",
                "bytecode": {
                  "functionDebugData": {},
                  "generatedSources": [],
                  "linkReferences": {},
                  "object": "60a060405230608052348015610013575f80fd5b50608051611af661003a5f395f8181610fda0152818161100301526111470152611af65ff3fe608060405260043610610195575f3560e01c80635c975abb116100e75780639ef3a26111610087578063f2caeb1e11610062578063f2caeb1e1461051b578063f2fde38b1461054f578063f7c618c11461056e578063f851a4401461058d575f80fd5b80639ef3a261146104a0578063a694fc3a146104bf578063ad3cb1cc146104de575f80fd5b8063728cdbca116100c2578063728cdbca1461041e5780638456cb591461043d5780638da5cb5b146104515780638dd0cdf31461048d575f80fd5b80635c975abb146103c65780636cf6d675146103f5578063715018a61461040a575f80fd5b80632e1a7d4d1161015257806347ccca021161012d57806347ccca02146103015780634f1ef2861461031f57806352d1902d14610332578063584b62a114610346575f80fd5b80632e1a7d4d146102ab5780633f4ba83a146102ca57806346582583146102de575f80fd5b80630962ef7914610199578063114eaf55146101ba578063150b7a02146101d9578063197916b4146102215780631caaa487146102405780632e17de781461028c575b5f80fd5b3480156101a4575f80fd5b506101b86101b3366004611723565b6105ac565b005b3480156101c5575f80fd5b506101b86101d4366004611723565b61067a565b3480156101e4575f80fd5b506102036101f33660046117eb565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561022c575f80fd5b506101b861023b366004611723565b6106a7565b34801561024b575f80fd5b5061027461025a366004611723565b60076020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610218565b348015610297575f80fd5b506101b86102a6366004611723565b6106d4565b3480156102b6575f80fd5b506101b86102c5366004611723565b610785565b3480156102d5575f80fd5b506101b86108b7565b3480156102e9575f80fd5b506102f360055481565b604051908152602001610218565b34801561030c575f80fd5b505f54610274906001600160a01b031681565b6101b861032d366004611853565b6108c9565b34801561033d575f80fd5b506102f36108e8565b348015610351575f80fd5b5061039c6103603660046118a0565b600660209081525f9283526040808420909152908252902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610218565b3480156103d1575f80fd5b505f80516020611aa18339815191525460ff165b6040519015158152602001610218565b348015610400575f80fd5b506102f360045481565b348015610415575f80fd5b506101b8610903565b348015610429575f80fd5b506101b86104383660046118ca565b610914565b348015610448575f80fd5b506101b8610aef565b34801561045c575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610274565b348015610498575f80fd5b5060016103e5565b3480156104ab575f80fd5b506101b86104ba366004611723565b610aff565b3480156104ca575f80fd5b506101b86104d9366004611723565b610bda565b3480156104e9575f80fd5b5061050e604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610218919061194d565b348015610526575f80fd5b5061053a610535366004611723565b610dd7565b60408051928352602083019190915201610218565b34801561055a575f80fd5b506101b861056936600461197f565b610e03565b348015610579575f80fd5b50600154610274906001600160a01b031681565b348015610598575f80fd5b50600254610274906001600160a01b031681565b335f90815260066020908152604080832084845290915290206004015460ff166105e8576040516273e5c360e31b815260040160405180910390fd5b335f90815260066020908152604080832084845290915290206002015415610623576040516358ae518b60e11b815260040160405180910390fd5b600554335f90815260066020908152604080832085845290915290206003015461064d91906119ae565b42101561066d576040516358ae518b60e11b815260040160405180910390fd5b6106773382610e42565b50565b610682610eeb565b805f036106a25760405163027a6b4360e61b815260040160405180910390fd5b600455565b6106af610eeb565b805f036106cf57604051635958c64760e01b815260040160405180910390fd5b600555565b6106dc610f46565b335f90815260066020908152604080832084845290915290206004015460ff16610718576040516273e5c360e31b815260040160405180910390fd5b6107223382610e42565b60045461072f90436119ae565b335f818152600660209081526040808320868452825291829020600201939093555183815290917f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7591015b60405180910390a250565b335f90815260066020908152604080832084845290915290206004015460ff166107c1576040516273e5c360e31b815260040160405180910390fd5b335f9081526006602090815260408083208484529091529020600201544310156107fe57604051633878000d60e01b815260040160405180910390fd5b5f54604051632142170760e11b8152306004820152336024820152604481018390526001600160a01b03909116906342842e0e906064015f604051808303815f87803b15801561084c575f80fd5b505af115801561085e573d5f803e3d5ffd5b5050335f908152600660209081526040808320958352948152848220828155600181018390556002810183905560038101839055600401805460ff19169055600790529290922080546001600160a01b03191690555050565b6108bf610eeb565b6108c7610f76565b565b6108d1610fcf565b6108da82611073565b6108e4828261107b565b5050565b5f6108f161113c565b505f80516020611a8183398151915290565b61090b610eeb565b6108c75f611185565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156109595750825b90505f8267ffffffffffffffff1660011480156109755750303b155b905081158015610983575080155b156109a15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109cb57845460ff60401b1916600160401b1785555b6109d36111f5565b6109dc8b6111fd565b6109e461120e565b600280546001600160a01b03808e166001600160a01b03199283161783555f80548e831690841617815560018054928e169290931691909117825560408051808201909152438152602081018c815260038054948501815590925251919092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b81019190915590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c90910155600487905560058690558315610ae257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b610af7610eeb565b6108c761121e565b610b07610eeb565b805f03610b275760405163ae4fc7ab60e01b815260040160405180910390fd5b604080518082018252438082526020808301858152600380546001810182555f9190915293517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b600290950294850155517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c9093019290925582519081529081018390527fc390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee5091015b60405180910390a150565b610be2610f46565b335f90815260066020908152604080832084845290915290206004015460ff1615610c2057604051630ae3514d60e01b815260040160405180910390fd5b5f546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610c66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8a91906119c1565b6001600160a01b031614610cb1576040516359dc379f60e01b815260040160405180910390fd5b610cbb3382610e42565b5f54604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e906064015f604051808303815f87803b158015610d09575f80fd5b505af1158015610d1b573d5f803e3d5ffd5b50506040805160a0810182528481524360208083019182525f838501818152426060860190815260016080870181815233808652600687528986208d875287528986209851895596519188019190915591516002870155516003860155516004909401805460ff191694151594909417909355600781529183902080546001600160a01b0319168217905591518581529193507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d92500161077a565b60038181548110610de6575f80fd5b5f9182526020909120600290910201805460019091015490915082565b610e0b610eeb565b6001600160a01b038116610e3957604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61067781611185565b6001600160a01b0382165f90815260066020908152604080832084845290915281206001810154909190610e769043611266565b90508015610ee557600154610e95906001600160a01b03168583611353565b836001600160a01b03167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724182604051610ed091815260200190565b60405180910390a24360018301554260038301555b50505050565b33610f1d7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108c75760405163118cdaa760e01b8152336004820152602401610e30565b5f80516020611aa18339815191525460ff16156108c75760405163d93c066560e01b815260040160405180910390fd5b610f7e6113a5565b5f80516020611aa1833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610bcf565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061105557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110495f80516020611a81833981519152546001600160a01b031690565b6001600160a01b031614155b156108c75760405163703e46dd60e11b815260040160405180910390fd5b610677610eeb565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110d5575060408051601f3d908101601f191682019092526110d2918101906119dc565b60015b6110fd57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e30565b5f80516020611a81833981519152811461112d57604051632a87526960e21b815260048101829052602401610e30565b61113783836113d4565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108c75760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6108c7611429565b611205611429565b61067781611472565b611216611429565b6108c761147a565b611226610f46565b5f80516020611aa1833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610fb7565b6003545f90816112776001836119f3565b90505b5f6003828154811061128e5761128e611a06565b905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250509050805f01518511156113385780515f906112d390876119f3565b90508160200151816112e59190611a1a565b6112ef90866119ae565b82519650945086861161132857602082015161130b88886119f3565b6113159190611a1a565b61131f90866119ae565b9450505061134b565b825f0361133657505061134b565b505b508061134381611a31565b91505061127a565b505092915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261113790849061149a565b5f80516020611aa18339815191525460ff166108c757604051638dfc202b60e01b815260040160405180910390fd5b6113dd826114fb565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561142157611137828261155e565b6108e46115d2565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108c757604051631afcd79f60e31b815260040160405180910390fd5b610e0b611429565b611482611429565b5f80516020611aa1833981519152805460ff19169055565b5f6114ae6001600160a01b038416836115f1565b905080515f141580156114d25750808060200190518101906114d09190611a46565b155b1561113757604051635274afe760e01b81526001600160a01b0384166004820152602401610e30565b806001600160a01b03163b5f0361153057604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e30565b5f80516020611a8183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161157a9190611a65565b5f60405180830381855af49150503d805f81146115b2576040519150601f19603f3d011682016040523d82523d5f602084013e6115b7565b606091505b50915091506115c7858383611605565b925050505b92915050565b34156108c75760405163b398979f60e01b815260040160405180910390fd5b60606115fe83835f611661565b9392505050565b60608261161a57611615826116fa565b6115fe565b815115801561163157506001600160a01b0384163b155b1561165a57604051639996b31560e01b81526001600160a01b0385166004820152602401610e30565b5092915050565b6060814710156116865760405163cd78605960e01b8152306004820152602401610e30565b5f80856001600160a01b031684866040516116a19190611a65565b5f6040518083038185875af1925050503d805f81146116db576040519150601f19603f3d011682016040523d82523d5f602084013e6116e0565b606091505b50915091506116f0868383611605565b9695505050505050565b80511561170a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611733575f80fd5b5035919050565b6001600160a01b0381168114610677575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611771575f80fd5b813567ffffffffffffffff8082111561178c5761178c61174e565b604051601f8301601f19908116603f011681019082821181831017156117b4576117b461174e565b816040528381528660208588010111156117cc575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f80608085870312156117fe575f80fd5b84356118098161173a565b935060208501356118198161173a565b925060408501359150606085013567ffffffffffffffff81111561183b575f80fd5b61184787828801611762565b91505092959194509250565b5f8060408385031215611864575f80fd5b823561186f8161173a565b9150602083013567ffffffffffffffff81111561188a575f80fd5b61189685828601611762565b9150509250929050565b5f80604083850312156118b1575f80fd5b82356118bc8161173a565b946020939093013593505050565b5f805f805f8060c087890312156118df575f80fd5b86356118ea8161173a565b955060208701356118fa8161173a565b9450604087013561190a8161173a565b959894975094956060810135955060808101359460a0909101359350915050565b5f5b8381101561194557818101518382015260200161192d565b50505f910152565b602081525f825180602084015261196b81604085016020870161192b565b601f01601f19169190910160400192915050565b5f6020828403121561198f575f80fd5b81356115fe8161173a565b634e487b7160e01b5f52601160045260245ffd5b808201808211156115cc576115cc61199a565b5f602082840312156119d1575f80fd5b81516115fe8161173a565b5f602082840312156119ec575f80fd5b5051919050565b818103818111156115cc576115cc61199a565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176115cc576115cc61199a565b5f81611a3f57611a3f61199a565b505f190190565b5f60208284031215611a56575f80fd5b815180151581146115fe575f80fd5b5f8251611a7681846020870161192b565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220effd0e601bcb0da7a00d76d99402ab04035980320c9e53be9c549146857546e064736f6c63430008180033",
                  "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1AF6 PUSH2 0x3A PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xFDA ADD MSTORE DUP2 DUP2 PUSH2 0x1003 ADD MSTORE PUSH2 0x1147 ADD MSTORE PUSH2 0x1AF6 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x195 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9EF3A261 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF2CAEB1E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF2CAEB1E EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x728CDBCA GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x728CDBCA EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x8DD0CDF3 EQ PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x6CF6D675 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x46582583 EQ PUSH2 0x2DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x962EF79 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x114EAF55 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x197916B4 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x1CAAA487 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x28C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EB JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x8B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x8E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x903 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x274 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x3E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x50E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53A PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x73E5C3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58AE518B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH4 0x58AE518B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 CALLER DUP3 PUSH2 0xE42 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x682 PUSH2 0xEEB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27A6B43 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x6AF PUSH2 0xEEB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5958C647 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x6DC PUSH2 0xF46 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x73E5C3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x722 CALLER DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x72F SWAP1 NUMBER PUSH2 0x19AE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE SWAP1 SWAP2 PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x73E5C3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD NUMBER LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x3878000D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x85E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x7 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8BF PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0xF76 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0x8E4 DUP3 DUP3 PUSH2 0x107B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F1 PUSH2 0x113C JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x90B PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x8C7 PUSH0 PUSH2 0x1185 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x959 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x975 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9CB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9D3 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x9DC DUP12 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x9E4 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH0 DUP1 SLOAD DUP15 DUP4 AND SWAP1 DUP5 AND OR DUP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP15 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE SWAP1 SWAP3 MSTORE MLOAD SWAP2 SWAP1 SWAP3 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C SWAP1 SWAP2 ADD SSTORE PUSH1 0x4 DUP8 SWAP1 SSTORE PUSH1 0x5 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xAE2 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x121E JUMP JUMPDEST PUSH2 0xB07 PUSH2 0xEEB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0xB27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAE4FC7AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE NUMBER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE SWAP4 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x2 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD SSTORE MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xC390A98ACE15A7BB6BAB611EEDFDBB2685043B241A869420043CDFB23CCFEE50 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xBE2 PUSH2 0xF46 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAE3514D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x59DC379F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBB CALLER DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE NUMBER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH0 DUP4 DUP6 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE CALLER DUP1 DUP7 MSTORE PUSH1 0x6 DUP8 MSTORE DUP10 DUP7 KECCAK256 DUP14 DUP8 MSTORE DUP8 MSTORE DUP10 DUP7 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP7 MLOAD SWAP2 DUP9 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD PUSH1 0x3 DUP7 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP2 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE SWAP2 MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP4 POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP3 POP ADD PUSH2 0x77A JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0xE0B PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 DUP2 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xE76 SWAP1 NUMBER PUSH2 0x1266 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEE5 JUMPI PUSH1 0x1 SLOAD PUSH2 0xE95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 PUSH2 0x1353 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 NUMBER PUSH1 0x1 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xF1D PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7E PUSH2 0x13A5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBCF JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1055 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1049 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 PUSH2 0xEEB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x10D2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x112D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x1137 DUP4 DUP4 PUSH2 0x13D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x677 DUP2 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1216 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1226 PUSH2 0xF46 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SWAP1 DUP2 PUSH2 0x1277 PUSH1 0x1 DUP4 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x128E JUMPI PUSH2 0x128E PUSH2 0x1A06 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP6 GT ISZERO PUSH2 0x1338 JUMPI DUP1 MLOAD PUSH0 SWAP1 PUSH2 0x12D3 SWAP1 DUP8 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x12EF SWAP1 DUP7 PUSH2 0x19AE JUMP JUMPDEST DUP3 MLOAD SWAP7 POP SWAP5 POP DUP7 DUP7 GT PUSH2 0x1328 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x130B DUP9 DUP9 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x131F SWAP1 DUP7 PUSH2 0x19AE JUMP JUMPDEST SWAP5 POP POP POP PUSH2 0x134B JUMP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x1336 JUMPI POP POP PUSH2 0x134B JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x1343 DUP2 PUSH2 0x1A31 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x127A JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1137 SWAP1 DUP5 SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13DD DUP3 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1421 JUMPI PUSH2 0x1137 DUP3 DUP3 PUSH2 0x155E JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0x15D2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0B PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1482 PUSH2 0x1429 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x14AE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x14D2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1530 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x15C7 DUP6 DUP4 DUP4 PUSH2 0x1605 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x15FE DUP4 DUP4 PUSH0 PUSH2 0x1661 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x161A JUMPI PUSH2 0x1615 DUP3 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x15FE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1631 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x16A1 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16F0 DUP7 DUP4 DUP4 PUSH2 0x1605 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x170A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1771 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x178C JUMPI PUSH2 0x178C PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x17B4 JUMPI PUSH2 0x17B4 PUSH2 0x174E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x17CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1809 DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1819 DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1847 DUP8 DUP3 DUP9 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x186F DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x188A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1896 DUP6 DUP3 DUP7 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18BC DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x18EA DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x18FA DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x190A DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP5 SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1945 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x192D JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x196B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15FE DUP2 PUSH2 0x173A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CC PUSH2 0x199A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15FE DUP2 PUSH2 0x173A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CC PUSH2 0x199A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x15CC JUMPI PUSH2 0x15CC PUSH2 0x199A JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x1A3F JUMPI PUSH2 0x1A3F PUSH2 0x199A JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A56 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1A76 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCCD5ED15C6E187E77E9AEE8 DUP2 DUP5 0xC2 0x1F 0x4F 0x21 DUP3 0xAB PC 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220EFFD0E601BCB0DA7A00D76D994 MUL 0xAB DIV SUB MSIZE DUP1 ORIGIN 0xC SWAP15 MSTORE8 0xBE SWAP13 SLOAD SWAP2 CHAINID DUP6 PUSH22 0x46E064736F6C63430008180033000000000000000000 ",
                  "sourceMap": "862:8567:18:-:0;;;1171:4:2;1128:48;;862:8567:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
                },
                "deployedBytecode": {
                  "functionDebugData": {
                    "@UPGRADE_INTERFACE_VERSION_472": {
                      "entryPoint": null,
                      "id": 472,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@__Ownable_init_54": {
                      "entryPoint": 4605,
                      "id": 54,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@__Ownable_init_unchained_81": {
                      "entryPoint": 5234,
                      "id": 81,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@__Pausable_init_771": {
                      "entryPoint": 4622,
                      "id": 771,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@__Pausable_init_unchained_789": {
                      "entryPoint": 5242,
                      "id": 789,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@__UUPSUpgradeable_init_502": {
                      "entryPoint": 4597,
                      "id": 502,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_authorizeUpgrade_2364": {
                      "entryPoint": 4211,
                      "id": 2364,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@_calculateRewards_2742": {
                      "entryPoint": 4710,
                      "id": 2742,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "@_callOptionalReturn_1572": {
                      "entryPoint": 5274,
                      "id": 1572,
                      "parameterSlots": 2,
                      "returnSlots": 0
                    },
                    "@_checkInitializing_370": {
                      "entryPoint": 5161,
                      "id": 370,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_checkNonPayable_1207": {
                      "entryPoint": 5586,
                      "id": 1207,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_checkNotDelegated_578": {
                      "entryPoint": 4412,
                      "id": 578,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_checkOwner_122": {
                      "entryPoint": 3819,
                      "id": 122,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_checkProxy_562": {
                      "entryPoint": 4047,
                      "id": 562,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_claimRewards_2659": {
                      "entryPoint": 3650,
                      "id": 2659,
                      "parameterSlots": 2,
                      "returnSlots": 0
                    },
                    "@_getInitializableStorage_447": {
                      "entryPoint": null,
                      "id": 447,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@_getOwnableStorage_25": {
                      "entryPoint": null,
                      "id": 25,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@_getPausableStorage_745": {
                      "entryPoint": null,
                      "id": 745,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@_isInitializing_438": {
                      "entryPoint": null,
                      "id": 438,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@_msgSender_701": {
                      "entryPoint": null,
                      "id": 701,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@_pause_870": {
                      "entryPoint": 4638,
                      "id": 870,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_requireNotPaused_833": {
                      "entryPoint": 3910,
                      "id": 833,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_requirePaused_846": {
                      "entryPoint": 5029,
                      "id": 846,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_revert_2009": {
                      "entryPoint": 5882,
                      "id": 2009,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@_setImplementation_993": {
                      "entryPoint": 5371,
                      "id": 993,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@_transferOwnership_193": {
                      "entryPoint": 4485,
                      "id": 193,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@_unpause_894": {
                      "entryPoint": 3958,
                      "id": 894,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@_upgradeToAndCallUUPS_629": {
                      "entryPoint": 4219,
                      "id": 629,
                      "parameterSlots": 2,
                      "returnSlots": 0
                    },
                    "@admin_2212": {
                      "entryPoint": null,
                      "id": 2212,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@checkUpgradebility_2842": {
                      "entryPoint": null,
                      "id": 2842,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@claimRewards_2601": {
                      "entryPoint": 1452,
                      "id": 2601,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@functionCallWithValue_1877": {
                      "entryPoint": 5729,
                      "id": 1877,
                      "parameterSlots": 3,
                      "returnSlots": 1
                    },
                    "@functionCall_1831": {
                      "entryPoint": 5617,
                      "id": 1831,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "@functionDelegateCall_1929": {
                      "entryPoint": 5470,
                      "id": 1929,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "@getAddressSlot_2042": {
                      "entryPoint": null,
                      "id": 2042,
                      "parameterSlots": 1,
                      "returnSlots": 1
                    },
                    "@getImplementation_966": {
                      "entryPoint": null,
                      "id": 966,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@initialize_2354": {
                      "entryPoint": 2324,
                      "id": 2354,
                      "parameterSlots": 6,
                      "returnSlots": 0
                    },
                    "@nft_2207": {
                      "entryPoint": null,
                      "id": 2207,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@onERC721Received_672": {
                      "entryPoint": null,
                      "id": 672,
                      "parameterSlots": 4,
                      "returnSlots": 1
                    },
                    "@owner_105": {
                      "entryPoint": null,
                      "id": 105,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@pause_2824": {
                      "entryPoint": 2799,
                      "id": 2824,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@paused_821": {
                      "entryPoint": null,
                      "id": 821,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@proxiableUUID_520": {
                      "entryPoint": 2280,
                      "id": 520,
                      "parameterSlots": 0,
                      "returnSlots": 1
                    },
                    "@renounceOwnership_136": {
                      "entryPoint": 2307,
                      "id": 136,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@rewardClaimDelay_2225": {
                      "entryPoint": null,
                      "id": 2225,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@rewardRates_2221": {
                      "entryPoint": 3543,
                      "id": 2221,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@rewardToken_2210": {
                      "entryPoint": null,
                      "id": 2210,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@safeTransfer_1382": {
                      "entryPoint": 4947,
                      "id": 1382,
                      "parameterSlots": 3,
                      "returnSlots": 0
                    },
                    "@setRewardClaimDelay_2814": {
                      "entryPoint": 1703,
                      "id": 2814,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@setUnbondingPeriod_2794": {
                      "entryPoint": 1658,
                      "id": 2794,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@stake_2443": {
                      "entryPoint": 3034,
                      "id": 2443,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@stakes_2243": {
                      "entryPoint": null,
                      "id": 2243,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@tokenOwner_2247": {
                      "entryPoint": null,
                      "id": 2247,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@transferOwnership_164": {
                      "entryPoint": 3587,
                      "id": 164,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@unbondingPeriod_2223": {
                      "entryPoint": null,
                      "id": 2223,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@unpause_2834": {
                      "entryPoint": 2231,
                      "id": 2834,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "@unstake_2489": {
                      "entryPoint": 1748,
                      "id": 2489,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@updateRewardRate_2774": {
                      "entryPoint": 2815,
                      "id": 2774,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "@upgradeToAndCall_1027": {
                      "entryPoint": 5076,
                      "id": 1027,
                      "parameterSlots": 2,
                      "returnSlots": 0
                    },
                    "@upgradeToAndCall_540": {
                      "entryPoint": 2249,
                      "id": 540,
                      "parameterSlots": 2,
                      "returnSlots": 0
                    },
                    "@verifyCallResultFromTarget_1969": {
                      "entryPoint": 5637,
                      "id": 1969,
                      "parameterSlots": 3,
                      "returnSlots": 1
                    },
                    "@withdraw_2547": {
                      "entryPoint": 1925,
                      "id": 2547,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    },
                    "abi_decode_bytes": {
                      "entryPoint": 5986,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_decode_tuple_t_address": {
                      "entryPoint": 6527,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_decode_tuple_t_address_fromMemory": {
                      "entryPoint": 6593,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256": {
                      "entryPoint": 6346,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 6
                    },
                    "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
                      "entryPoint": 6123,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 4
                    },
                    "abi_decode_tuple_t_addresst_bytes_memory_ptr": {
                      "entryPoint": 6227,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 2
                    },
                    "abi_decode_tuple_t_addresst_uint256": {
                      "entryPoint": 6304,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 2
                    },
                    "abi_decode_tuple_t_bool_fromMemory": {
                      "entryPoint": 6726,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_decode_tuple_t_bytes32_fromMemory": {
                      "entryPoint": 6620,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_decode_tuple_t_uint256": {
                      "entryPoint": 5923,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                      "entryPoint": 6757,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 4,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 3,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_contract$_IERC20_$1296__to_t_address__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_contract$_IERC721_$1739__to_t_address__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                      "entryPoint": 6477,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 3,
                      "returnSlots": 1
                    },
                    "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
                      "entryPoint": null,
                      "id": null,
                      "parameterSlots": 6,
                      "returnSlots": 1
                    },
                    "checked_add_t_uint256": {
                      "entryPoint": 6574,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "checked_mul_t_uint256": {
                      "entryPoint": 6682,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "checked_sub_t_uint256": {
                      "entryPoint": 6643,
                      "id": null,
                      "parameterSlots": 2,
                      "returnSlots": 1
                    },
                    "copy_memory_to_memory_with_cleanup": {
                      "entryPoint": 6443,
                      "id": null,
                      "parameterSlots": 3,
                      "returnSlots": 0
                    },
                    "decrement_t_uint256": {
                      "entryPoint": 6705,
                      "id": null,
                      "parameterSlots": 1,
                      "returnSlots": 1
                    },
                    "panic_error_0x11": {
                      "entryPoint": 6554,
                      "id": null,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "panic_error_0x32": {
                      "entryPoint": 6662,
                      "id": null,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "panic_error_0x41": {
                      "entryPoint": 5966,
                      "id": null,
                      "parameterSlots": 0,
                      "returnSlots": 0
                    },
                    "validator_revert_address": {
                      "entryPoint": 5946,
                      "id": null,
                      "parameterSlots": 1,
                      "returnSlots": 0
                    }
                  },
                  "generatedSources": [
                    {
                      "ast": {
                        "nativeSrc": "0:9168:19",
                        "nodeType": "YulBlock",
                        "src": "0:9168:19",
                        "statements": [
                          {
                            "nativeSrc": "6:3:19",
                            "nodeType": "YulBlock",
                            "src": "6:3:19",
                            "statements": []
                          },
                          {
                            "body": {
                              "nativeSrc": "84:110:19",
                              "nodeType": "YulBlock",
                              "src": "84:110:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "130:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "130:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "139:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "139:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "142:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "142:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "132:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "132:6:19"
                                          },
                                          "nativeSrc": "132:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "132:12:19"
                                        },
                                        "nativeSrc": "132:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "132:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "105:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "105:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "114:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "114:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "101:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "101:3:19"
                                        },
                                        "nativeSrc": "101:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "101:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "126:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "126:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "97:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "97:3:19"
                                    },
                                    "nativeSrc": "97:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "97:32:19"
                                  },
                                  "nativeSrc": "94:52:19",
                                  "nodeType": "YulIf",
                                  "src": "94:52:19"
                                },
                                {
                                  "nativeSrc": "155:33:19",
                                  "nodeType": "YulAssignment",
                                  "src": "155:33:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "178:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "178:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "165:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "165:12:19"
                                    },
                                    "nativeSrc": "165:23:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "165:23:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "155:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "155:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_uint256",
                            "nativeSrc": "14:180:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "50:9:19",
                                "nodeType": "YulTypedName",
                                "src": "50:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "61:7:19",
                                "nodeType": "YulTypedName",
                                "src": "61:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "73:6:19",
                                "nodeType": "YulTypedName",
                                "src": "73:6:19",
                                "type": ""
                              }
                            ],
                            "src": "14:180:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "244:86:19",
                              "nodeType": "YulBlock",
                              "src": "244:86:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "308:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "308:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "317:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "317:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "320:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "320:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "310:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "310:6:19"
                                          },
                                          "nativeSrc": "310:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "310:12:19"
                                        },
                                        "nativeSrc": "310:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "310:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "267:5:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "267:5:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "278:5:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "278:5:19"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "293:3:19",
                                                        "nodeType": "YulLiteral",
                                                        "src": "293:3:19",
                                                        "type": "",
                                                        "value": "160"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "298:1:19",
                                                        "nodeType": "YulLiteral",
                                                        "src": "298:1:19",
                                                        "type": "",
                                                        "value": "1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "shl",
                                                      "nativeSrc": "289:3:19",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "289:3:19"
                                                    },
                                                    "nativeSrc": "289:11:19",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "289:11:19"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "302:1:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "302:1:19",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sub",
                                                  "nativeSrc": "285:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "285:3:19"
                                                },
                                                "nativeSrc": "285:19:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "285:19:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nativeSrc": "274:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "274:3:19"
                                            },
                                            "nativeSrc": "274:31:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "274:31:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "264:2:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "264:2:19"
                                        },
                                        "nativeSrc": "264:42:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "264:42:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "257:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "257:6:19"
                                    },
                                    "nativeSrc": "257:50:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "257:50:19"
                                  },
                                  "nativeSrc": "254:70:19",
                                  "nodeType": "YulIf",
                                  "src": "254:70:19"
                                }
                              ]
                            },
                            "name": "validator_revert_address",
                            "nativeSrc": "199:131:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "value",
                                "nativeSrc": "233:5:19",
                                "nodeType": "YulTypedName",
                                "src": "233:5:19",
                                "type": ""
                              }
                            ],
                            "src": "199:131:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "367:95:19",
                              "nodeType": "YulBlock",
                              "src": "367:95:19",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "384:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "384:1:19",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "391:3:19",
                                            "nodeType": "YulLiteral",
                                            "src": "391:3:19",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "396:10:19",
                                            "nodeType": "YulLiteral",
                                            "src": "396:10:19",
                                            "type": "",
                                            "value": "0x4e487b71"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "387:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "387:3:19"
                                        },
                                        "nativeSrc": "387:20:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "387:20:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "377:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "377:6:19"
                                    },
                                    "nativeSrc": "377:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "377:31:19"
                                  },
                                  "nativeSrc": "377:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "377:31:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "424:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "424:1:19",
                                        "type": "",
                                        "value": "4"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "427:4:19",
                                        "nodeType": "YulLiteral",
                                        "src": "427:4:19",
                                        "type": "",
                                        "value": "0x41"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "417:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "417:6:19"
                                    },
                                    "nativeSrc": "417:15:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "417:15:19"
                                  },
                                  "nativeSrc": "417:15:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "417:15:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "448:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "448:1:19",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "451:4:19",
                                        "nodeType": "YulLiteral",
                                        "src": "451:4:19",
                                        "type": "",
                                        "value": "0x24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "441:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "441:6:19"
                                    },
                                    "nativeSrc": "441:15:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "441:15:19"
                                  },
                                  "nativeSrc": "441:15:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "441:15:19"
                                }
                              ]
                            },
                            "name": "panic_error_0x41",
                            "nativeSrc": "335:127:19",
                            "nodeType": "YulFunctionDefinition",
                            "src": "335:127:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "519:666:19",
                              "nodeType": "YulBlock",
                              "src": "519:666:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "568:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "568:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "577:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "577:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "580:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "580:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "570:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "570:6:19"
                                          },
                                          "nativeSrc": "570:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "570:12:19"
                                        },
                                        "nativeSrc": "570:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "570:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "offset",
                                                "nativeSrc": "547:6:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "547:6:19"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "555:4:19",
                                                "nodeType": "YulLiteral",
                                                "src": "555:4:19",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "543:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "543:3:19"
                                            },
                                            "nativeSrc": "543:17:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "543:17:19"
                                          },
                                          {
                                            "name": "end",
                                            "nativeSrc": "562:3:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "562:3:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "slt",
                                          "nativeSrc": "539:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "539:3:19"
                                        },
                                        "nativeSrc": "539:27:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "539:27:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "532:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "532:6:19"
                                    },
                                    "nativeSrc": "532:35:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "532:35:19"
                                  },
                                  "nativeSrc": "529:55:19",
                                  "nodeType": "YulIf",
                                  "src": "529:55:19"
                                },
                                {
                                  "nativeSrc": "593:30:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "593:30:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "616:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "616:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "603:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "603:12:19"
                                    },
                                    "nativeSrc": "603:20:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "603:20:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "_1",
                                      "nativeSrc": "597:2:19",
                                      "nodeType": "YulTypedName",
                                      "src": "597:2:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "632:28:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "632:28:19",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "642:18:19",
                                    "nodeType": "YulLiteral",
                                    "src": "642:18:19",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  },
                                  "variables": [
                                    {
                                      "name": "_2",
                                      "nativeSrc": "636:2:19",
                                      "nodeType": "YulTypedName",
                                      "src": "636:2:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "683:22:19",
                                    "nodeType": "YulBlock",
                                    "src": "683:22:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "panic_error_0x41",
                                            "nativeSrc": "685:16:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "685:16:19"
                                          },
                                          "nativeSrc": "685:18:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "685:18:19"
                                        },
                                        "nativeSrc": "685:18:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "685:18:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "675:2:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "675:2:19"
                                      },
                                      {
                                        "name": "_2",
                                        "nativeSrc": "679:2:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "679:2:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "672:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "672:2:19"
                                    },
                                    "nativeSrc": "672:10:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "672:10:19"
                                  },
                                  "nativeSrc": "669:36:19",
                                  "nodeType": "YulIf",
                                  "src": "669:36:19"
                                },
                                {
                                  "nativeSrc": "714:17:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "714:17:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "728:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "728:2:19",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "724:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "724:3:19"
                                    },
                                    "nativeSrc": "724:7:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "724:7:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "_3",
                                      "nativeSrc": "718:2:19",
                                      "nodeType": "YulTypedName",
                                      "src": "718:2:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "740:23:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "740:23:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "760:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "760:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "754:5:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "754:5:19"
                                    },
                                    "nativeSrc": "754:9:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "754:9:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "744:6:19",
                                      "nodeType": "YulTypedName",
                                      "src": "744:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "772:71:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "772:71:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "794:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "794:6:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "_1",
                                                        "nativeSrc": "818:2:19",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "818:2:19"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "822:4:19",
                                                        "nodeType": "YulLiteral",
                                                        "src": "822:4:19",
                                                        "type": "",
                                                        "value": "0x1f"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "814:3:19",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "814:3:19"
                                                    },
                                                    "nativeSrc": "814:13:19",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "814:13:19"
                                                  },
                                                  {
                                                    "name": "_3",
                                                    "nativeSrc": "829:2:19",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "829:2:19"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "and",
                                                  "nativeSrc": "810:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "810:3:19"
                                                },
                                                "nativeSrc": "810:22:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "810:22:19"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "834:2:19",
                                                "nodeType": "YulLiteral",
                                                "src": "834:2:19",
                                                "type": "",
                                                "value": "63"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "806:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "806:3:19"
                                            },
                                            "nativeSrc": "806:31:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "806:31:19"
                                          },
                                          {
                                            "name": "_3",
                                            "nativeSrc": "839:2:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "839:2:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "802:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "802:3:19"
                                        },
                                        "nativeSrc": "802:40:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "802:40:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "790:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "790:3:19"
                                    },
                                    "nativeSrc": "790:53:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "790:53:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "newFreePtr",
                                      "nativeSrc": "776:10:19",
                                      "nodeType": "YulTypedName",
                                      "src": "776:10:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "902:22:19",
                                    "nodeType": "YulBlock",
                                    "src": "902:22:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "panic_error_0x41",
                                            "nativeSrc": "904:16:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "904:16:19"
                                          },
                                          "nativeSrc": "904:18:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "904:18:19"
                                        },
                                        "nativeSrc": "904:18:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "904:18:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "newFreePtr",
                                            "nativeSrc": "861:10:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "861:10:19"
                                          },
                                          {
                                            "name": "_2",
                                            "nativeSrc": "873:2:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "873:2:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "gt",
                                          "nativeSrc": "858:2:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "858:2:19"
                                        },
                                        "nativeSrc": "858:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "858:18:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "newFreePtr",
                                            "nativeSrc": "881:10:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "881:10:19"
                                          },
                                          {
                                            "name": "memPtr",
                                            "nativeSrc": "893:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "893:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "878:2:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "878:2:19"
                                        },
                                        "nativeSrc": "878:22:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "878:22:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "855:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "855:2:19"
                                    },
                                    "nativeSrc": "855:46:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "855:46:19"
                                  },
                                  "nativeSrc": "852:72:19",
                                  "nodeType": "YulIf",
                                  "src": "852:72:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "940:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "940:2:19",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "944:10:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "944:10:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "933:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "933:6:19"
                                    },
                                    "nativeSrc": "933:22:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "933:22:19"
                                  },
                                  "nativeSrc": "933:22:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "933:22:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "971:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "971:6:19"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "979:2:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "979:2:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "964:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "964:6:19"
                                    },
                                    "nativeSrc": "964:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "964:18:19"
                                  },
                                  "nativeSrc": "964:18:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "964:18:19"
                                },
                                {
                                  "body": {
                                    "nativeSrc": "1030:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "1030:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1039:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "1039:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1042:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "1042:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "1032:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1032:6:19"
                                          },
                                          "nativeSrc": "1032:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1032:12:19"
                                        },
                                        "nativeSrc": "1032:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1032:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "offset",
                                                "nativeSrc": "1005:6:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "1005:6:19"
                                              },
                                              {
                                                "name": "_1",
                                                "nativeSrc": "1013:2:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "1013:2:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "1001:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "1001:3:19"
                                            },
                                            "nativeSrc": "1001:15:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1001:15:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1018:4:19",
                                            "nodeType": "YulLiteral",
                                            "src": "1018:4:19",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "997:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "997:3:19"
                                        },
                                        "nativeSrc": "997:26:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "997:26:19"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "1025:3:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1025:3:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "994:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "994:2:19"
                                    },
                                    "nativeSrc": "994:35:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "994:35:19"
                                  },
                                  "nativeSrc": "991:55:19",
                                  "nodeType": "YulIf",
                                  "src": "991:55:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nativeSrc": "1072:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1072:6:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1080:4:19",
                                            "nodeType": "YulLiteral",
                                            "src": "1080:4:19",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1068:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1068:3:19"
                                        },
                                        "nativeSrc": "1068:17:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1068:17:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "1091:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1091:6:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1099:4:19",
                                            "nodeType": "YulLiteral",
                                            "src": "1099:4:19",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1087:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1087:3:19"
                                        },
                                        "nativeSrc": "1087:17:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1087:17:19"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "1106:2:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1106:2:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldatacopy",
                                      "nativeSrc": "1055:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1055:12:19"
                                    },
                                    "nativeSrc": "1055:54:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1055:54:19"
                                  },
                                  "nativeSrc": "1055:54:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1055:54:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "memPtr",
                                                "nativeSrc": "1133:6:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "1133:6:19"
                                              },
                                              {
                                                "name": "_1",
                                                "nativeSrc": "1141:2:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "1141:2:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "1129:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "1129:3:19"
                                            },
                                            "nativeSrc": "1129:15:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1129:15:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1146:4:19",
                                            "nodeType": "YulLiteral",
                                            "src": "1146:4:19",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1125:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1125:3:19"
                                        },
                                        "nativeSrc": "1125:26:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1125:26:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1153:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "1153:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "1118:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1118:6:19"
                                    },
                                    "nativeSrc": "1118:37:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1118:37:19"
                                  },
                                  "nativeSrc": "1118:37:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1118:37:19"
                                },
                                {
                                  "nativeSrc": "1164:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "1164:15:19",
                                  "value": {
                                    "name": "memPtr",
                                    "nativeSrc": "1173:6:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "1173:6:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "array",
                                      "nativeSrc": "1164:5:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1164:5:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_bytes",
                            "nativeSrc": "467:718:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "offset",
                                "nativeSrc": "493:6:19",
                                "nodeType": "YulTypedName",
                                "src": "493:6:19",
                                "type": ""
                              },
                              {
                                "name": "end",
                                "nativeSrc": "501:3:19",
                                "nodeType": "YulTypedName",
                                "src": "501:3:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "array",
                                "nativeSrc": "509:5:19",
                                "nodeType": "YulTypedName",
                                "src": "509:5:19",
                                "type": ""
                              }
                            ],
                            "src": "467:718:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "1320:535:19",
                              "nodeType": "YulBlock",
                              "src": "1320:535:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "1367:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "1367:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1376:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "1376:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1379:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "1379:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "1369:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1369:6:19"
                                          },
                                          "nativeSrc": "1369:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1369:12:19"
                                        },
                                        "nativeSrc": "1369:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1369:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "1341:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1341:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "1350:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1350:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1337:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1337:3:19"
                                        },
                                        "nativeSrc": "1337:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1337:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1362:3:19",
                                        "nodeType": "YulLiteral",
                                        "src": "1362:3:19",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "1333:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1333:3:19"
                                    },
                                    "nativeSrc": "1333:33:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1333:33:19"
                                  },
                                  "nativeSrc": "1330:53:19",
                                  "nodeType": "YulIf",
                                  "src": "1330:53:19"
                                },
                                {
                                  "nativeSrc": "1392:36:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1392:36:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1418:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1418:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "1405:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1405:12:19"
                                    },
                                    "nativeSrc": "1405:23:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1405:23:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "1396:5:19",
                                      "nodeType": "YulTypedName",
                                      "src": "1396:5:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1462:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1462:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "1437:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1437:24:19"
                                    },
                                    "nativeSrc": "1437:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1437:31:19"
                                  },
                                  "nativeSrc": "1437:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1437:31:19"
                                },
                                {
                                  "nativeSrc": "1477:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "1477:15:19",
                                  "value": {
                                    "name": "value",
                                    "nativeSrc": "1487:5:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "1487:5:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "1477:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1477:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "1501:47:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1501:47:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "1533:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1533:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1544:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "1544:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1529:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1529:3:19"
                                        },
                                        "nativeSrc": "1529:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1529:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "1516:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1516:12:19"
                                    },
                                    "nativeSrc": "1516:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1516:32:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value_1",
                                      "nativeSrc": "1505:7:19",
                                      "nodeType": "YulTypedName",
                                      "src": "1505:7:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value_1",
                                        "nativeSrc": "1582:7:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1582:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "1557:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1557:24:19"
                                    },
                                    "nativeSrc": "1557:33:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1557:33:19"
                                  },
                                  "nativeSrc": "1557:33:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1557:33:19"
                                },
                                {
                                  "nativeSrc": "1599:17:19",
                                  "nodeType": "YulAssignment",
                                  "src": "1599:17:19",
                                  "value": {
                                    "name": "value_1",
                                    "nativeSrc": "1609:7:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "1609:7:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "1599:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1599:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "1625:42:19",
                                  "nodeType": "YulAssignment",
                                  "src": "1625:42:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "1652:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1652:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1663:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "1663:2:19",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1648:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1648:3:19"
                                        },
                                        "nativeSrc": "1648:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1648:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "1635:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1635:12:19"
                                    },
                                    "nativeSrc": "1635:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1635:32:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nativeSrc": "1625:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1625:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "1676:46:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1676:46:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "1707:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1707:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1718:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "1718:2:19",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1703:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1703:3:19"
                                        },
                                        "nativeSrc": "1703:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1703:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "1690:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1690:12:19"
                                    },
                                    "nativeSrc": "1690:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1690:32:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "1680:6:19",
                                      "nodeType": "YulTypedName",
                                      "src": "1680:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "1765:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "1765:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1774:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "1774:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1777:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "1777:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "1767:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1767:6:19"
                                          },
                                          "nativeSrc": "1767:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1767:12:19"
                                        },
                                        "nativeSrc": "1767:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1767:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1737:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1737:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1745:18:19",
                                        "nodeType": "YulLiteral",
                                        "src": "1745:18:19",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "1734:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1734:2:19"
                                    },
                                    "nativeSrc": "1734:30:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1734:30:19"
                                  },
                                  "nativeSrc": "1731:50:19",
                                  "nodeType": "YulIf",
                                  "src": "1731:50:19"
                                },
                                {
                                  "nativeSrc": "1790:59:19",
                                  "nodeType": "YulAssignment",
                                  "src": "1790:59:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "1821:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1821:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "1832:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "1832:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1817:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "1817:3:19"
                                        },
                                        "nativeSrc": "1817:22:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1817:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1841:7:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1841:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_bytes",
                                      "nativeSrc": "1800:16:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1800:16:19"
                                    },
                                    "nativeSrc": "1800:49:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1800:49:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nativeSrc": "1790:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1790:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                            "nativeSrc": "1190:665:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "1262:9:19",
                                "nodeType": "YulTypedName",
                                "src": "1262:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "1273:7:19",
                                "nodeType": "YulTypedName",
                                "src": "1273:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "1285:6:19",
                                "nodeType": "YulTypedName",
                                "src": "1285:6:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "1293:6:19",
                                "nodeType": "YulTypedName",
                                "src": "1293:6:19",
                                "type": ""
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "1301:6:19",
                                "nodeType": "YulTypedName",
                                "src": "1301:6:19",
                                "type": ""
                              },
                              {
                                "name": "value3",
                                "nativeSrc": "1309:6:19",
                                "nodeType": "YulTypedName",
                                "src": "1309:6:19",
                                "type": ""
                              }
                            ],
                            "src": "1190:665:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "1959:103:19",
                              "nodeType": "YulBlock",
                              "src": "1959:103:19",
                              "statements": [
                                {
                                  "nativeSrc": "1969:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "1969:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1981:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "1981:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1992:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "1992:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1977:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1977:3:19"
                                    },
                                    "nativeSrc": "1977:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1977:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "1969:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "1969:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2011:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2011:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "2026:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "2026:6:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2038:3:19",
                                                "nodeType": "YulLiteral",
                                                "src": "2038:3:19",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2043:10:19",
                                                "nodeType": "YulLiteral",
                                                "src": "2043:10:19",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2034:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "2034:3:19"
                                            },
                                            "nativeSrc": "2034:20:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2034:20:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "2022:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "2022:3:19"
                                        },
                                        "nativeSrc": "2022:33:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2022:33:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "2004:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2004:6:19"
                                    },
                                    "nativeSrc": "2004:52:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2004:52:19"
                                  },
                                  "nativeSrc": "2004:52:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2004:52:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                            "nativeSrc": "1860:202:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "1928:9:19",
                                "nodeType": "YulTypedName",
                                "src": "1928:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "1939:6:19",
                                "nodeType": "YulTypedName",
                                "src": "1939:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "1950:4:19",
                                "nodeType": "YulTypedName",
                                "src": "1950:4:19",
                                "type": ""
                              }
                            ],
                            "src": "1860:202:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "2168:102:19",
                              "nodeType": "YulBlock",
                              "src": "2168:102:19",
                              "statements": [
                                {
                                  "nativeSrc": "2178:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "2178:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2190:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2190:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2201:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "2201:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2186:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2186:3:19"
                                    },
                                    "nativeSrc": "2186:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2186:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "2178:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2178:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2220:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2220:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "2235:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "2235:6:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2251:3:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2251:3:19",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2256:1:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2256:1:19",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "2247:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2247:3:19"
                                                },
                                                "nativeSrc": "2247:11:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2247:11:19"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2260:1:19",
                                                "nodeType": "YulLiteral",
                                                "src": "2260:1:19",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "2243:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "2243:3:19"
                                            },
                                            "nativeSrc": "2243:19:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2243:19:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "2231:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "2231:3:19"
                                        },
                                        "nativeSrc": "2231:32:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2231:32:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "2213:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2213:6:19"
                                    },
                                    "nativeSrc": "2213:51:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2213:51:19"
                                  },
                                  "nativeSrc": "2213:51:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2213:51:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                            "nativeSrc": "2067:203:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "2137:9:19",
                                "nodeType": "YulTypedName",
                                "src": "2137:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "2148:6:19",
                                "nodeType": "YulTypedName",
                                "src": "2148:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "2159:4:19",
                                "nodeType": "YulTypedName",
                                "src": "2159:4:19",
                                "type": ""
                              }
                            ],
                            "src": "2067:203:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "2376:76:19",
                              "nodeType": "YulBlock",
                              "src": "2376:76:19",
                              "statements": [
                                {
                                  "nativeSrc": "2386:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "2386:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2398:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2398:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2409:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "2409:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2394:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2394:3:19"
                                    },
                                    "nativeSrc": "2394:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2394:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "2386:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2386:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2428:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2428:9:19"
                                      },
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2439:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2439:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "2421:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2421:6:19"
                                    },
                                    "nativeSrc": "2421:25:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2421:25:19"
                                  },
                                  "nativeSrc": "2421:25:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2421:25:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                            "nativeSrc": "2275:177:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "2345:9:19",
                                "nodeType": "YulTypedName",
                                "src": "2345:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "2356:6:19",
                                "nodeType": "YulTypedName",
                                "src": "2356:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "2367:4:19",
                                "nodeType": "YulTypedName",
                                "src": "2367:4:19",
                                "type": ""
                              }
                            ],
                            "src": "2275:177:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "2574:102:19",
                              "nodeType": "YulBlock",
                              "src": "2574:102:19",
                              "statements": [
                                {
                                  "nativeSrc": "2584:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "2584:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2596:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2596:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2607:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "2607:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2592:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2592:3:19"
                                    },
                                    "nativeSrc": "2592:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2592:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "2584:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2584:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2626:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2626:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "2641:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "2641:6:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2657:3:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2657:3:19",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2662:1:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2662:1:19",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "2653:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2653:3:19"
                                                },
                                                "nativeSrc": "2653:11:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2653:11:19"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2666:1:19",
                                                "nodeType": "YulLiteral",
                                                "src": "2666:1:19",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "2649:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "2649:3:19"
                                            },
                                            "nativeSrc": "2649:19:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2649:19:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "2637:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "2637:3:19"
                                        },
                                        "nativeSrc": "2637:32:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2637:32:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "2619:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2619:6:19"
                                    },
                                    "nativeSrc": "2619:51:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2619:51:19"
                                  },
                                  "nativeSrc": "2619:51:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2619:51:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_contract$_IERC721_$1739__to_t_address__fromStack_reversed",
                            "nativeSrc": "2457:219:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "2543:9:19",
                                "nodeType": "YulTypedName",
                                "src": "2543:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "2554:6:19",
                                "nodeType": "YulTypedName",
                                "src": "2554:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "2565:4:19",
                                "nodeType": "YulTypedName",
                                "src": "2565:4:19",
                                "type": ""
                              }
                            ],
                            "src": "2457:219:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "2777:359:19",
                              "nodeType": "YulBlock",
                              "src": "2777:359:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "2823:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "2823:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2832:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "2832:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2835:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "2835:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "2825:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "2825:6:19"
                                          },
                                          "nativeSrc": "2825:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2825:12:19"
                                        },
                                        "nativeSrc": "2825:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2825:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "2798:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "2798:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "2807:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "2807:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "2794:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "2794:3:19"
                                        },
                                        "nativeSrc": "2794:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2794:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2819:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "2819:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "2790:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2790:3:19"
                                    },
                                    "nativeSrc": "2790:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2790:32:19"
                                  },
                                  "nativeSrc": "2787:52:19",
                                  "nodeType": "YulIf",
                                  "src": "2787:52:19"
                                },
                                {
                                  "nativeSrc": "2848:36:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2848:36:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2874:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2874:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "2861:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2861:12:19"
                                    },
                                    "nativeSrc": "2861:23:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2861:23:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "2852:5:19",
                                      "nodeType": "YulTypedName",
                                      "src": "2852:5:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2918:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "2918:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "2893:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2893:24:19"
                                    },
                                    "nativeSrc": "2893:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2893:31:19"
                                  },
                                  "nativeSrc": "2893:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2893:31:19"
                                },
                                {
                                  "nativeSrc": "2933:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "2933:15:19",
                                  "value": {
                                    "name": "value",
                                    "nativeSrc": "2943:5:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "2943:5:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "2933:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2933:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "2957:46:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2957:46:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "2988:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "2988:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2999:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "2999:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2984:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "2984:3:19"
                                        },
                                        "nativeSrc": "2984:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2984:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "2971:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "2971:12:19"
                                    },
                                    "nativeSrc": "2971:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2971:32:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "2961:6:19",
                                      "nodeType": "YulTypedName",
                                      "src": "2961:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "3046:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "3046:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3055:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "3055:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3058:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "3058:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "3048:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3048:6:19"
                                          },
                                          "nativeSrc": "3048:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3048:12:19"
                                        },
                                        "nativeSrc": "3048:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3048:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "3018:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3018:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3026:18:19",
                                        "nodeType": "YulLiteral",
                                        "src": "3026:18:19",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "3015:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3015:2:19"
                                    },
                                    "nativeSrc": "3015:30:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3015:30:19"
                                  },
                                  "nativeSrc": "3012:50:19",
                                  "nodeType": "YulIf",
                                  "src": "3012:50:19"
                                },
                                {
                                  "nativeSrc": "3071:59:19",
                                  "nodeType": "YulAssignment",
                                  "src": "3071:59:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "3102:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3102:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "3113:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3113:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3098:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "3098:3:19"
                                        },
                                        "nativeSrc": "3098:22:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3098:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3122:7:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3122:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_bytes",
                                      "nativeSrc": "3081:16:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3081:16:19"
                                    },
                                    "nativeSrc": "3081:49:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3081:49:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "3071:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3071:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
                            "nativeSrc": "2681:455:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "2735:9:19",
                                "nodeType": "YulTypedName",
                                "src": "2735:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "2746:7:19",
                                "nodeType": "YulTypedName",
                                "src": "2746:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "2758:6:19",
                                "nodeType": "YulTypedName",
                                "src": "2758:6:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "2766:6:19",
                                "nodeType": "YulTypedName",
                                "src": "2766:6:19",
                                "type": ""
                              }
                            ],
                            "src": "2681:455:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "3242:76:19",
                              "nodeType": "YulBlock",
                              "src": "3242:76:19",
                              "statements": [
                                {
                                  "nativeSrc": "3252:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "3252:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3264:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3264:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3275:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "3275:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3260:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3260:3:19"
                                    },
                                    "nativeSrc": "3260:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3260:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "3252:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3252:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3294:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3294:9:19"
                                      },
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3305:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3305:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "3287:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3287:6:19"
                                    },
                                    "nativeSrc": "3287:25:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3287:25:19"
                                  },
                                  "nativeSrc": "3287:25:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3287:25:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                            "nativeSrc": "3141:177:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "3211:9:19",
                                "nodeType": "YulTypedName",
                                "src": "3211:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "3222:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3222:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "3233:4:19",
                                "nodeType": "YulTypedName",
                                "src": "3233:4:19",
                                "type": ""
                              }
                            ],
                            "src": "3141:177:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "3410:228:19",
                              "nodeType": "YulBlock",
                              "src": "3410:228:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "3456:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "3456:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3465:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "3465:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3468:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "3468:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "3458:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3458:6:19"
                                          },
                                          "nativeSrc": "3458:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3458:12:19"
                                        },
                                        "nativeSrc": "3458:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3458:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "3431:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3431:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "3440:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3440:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3427:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "3427:3:19"
                                        },
                                        "nativeSrc": "3427:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3427:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3452:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "3452:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "3423:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3423:3:19"
                                    },
                                    "nativeSrc": "3423:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3423:32:19"
                                  },
                                  "nativeSrc": "3420:52:19",
                                  "nodeType": "YulIf",
                                  "src": "3420:52:19"
                                },
                                {
                                  "nativeSrc": "3481:36:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3481:36:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3507:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3507:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "3494:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3494:12:19"
                                    },
                                    "nativeSrc": "3494:23:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3494:23:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "3485:5:19",
                                      "nodeType": "YulTypedName",
                                      "src": "3485:5:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "3551:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3551:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "3526:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3526:24:19"
                                    },
                                    "nativeSrc": "3526:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3526:31:19"
                                  },
                                  "nativeSrc": "3526:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3526:31:19"
                                },
                                {
                                  "nativeSrc": "3566:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "3566:15:19",
                                  "value": {
                                    "name": "value",
                                    "nativeSrc": "3576:5:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "3576:5:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "3566:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3566:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "3590:42:19",
                                  "nodeType": "YulAssignment",
                                  "src": "3590:42:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "3617:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3617:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3628:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "3628:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3613:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "3613:3:19"
                                        },
                                        "nativeSrc": "3613:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3613:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "3600:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3600:12:19"
                                    },
                                    "nativeSrc": "3600:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3600:32:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "3590:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3590:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_addresst_uint256",
                            "nativeSrc": "3323:315:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "3368:9:19",
                                "nodeType": "YulTypedName",
                                "src": "3368:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "3379:7:19",
                                "nodeType": "YulTypedName",
                                "src": "3379:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "3391:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3391:6:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "3399:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3399:6:19",
                                "type": ""
                              }
                            ],
                            "src": "3323:315:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "3850:266:19",
                              "nodeType": "YulBlock",
                              "src": "3850:266:19",
                              "statements": [
                                {
                                  "nativeSrc": "3860:27:19",
                                  "nodeType": "YulAssignment",
                                  "src": "3860:27:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3872:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3872:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3883:3:19",
                                        "nodeType": "YulLiteral",
                                        "src": "3883:3:19",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3868:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3868:3:19"
                                    },
                                    "nativeSrc": "3868:19:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3868:19:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "3860:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3860:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3903:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3903:9:19"
                                      },
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3914:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3914:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "3896:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3896:6:19"
                                    },
                                    "nativeSrc": "3896:25:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3896:25:19"
                                  },
                                  "nativeSrc": "3896:25:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3896:25:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "3941:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3941:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3952:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "3952:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3937:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "3937:3:19"
                                        },
                                        "nativeSrc": "3937:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3937:18:19"
                                      },
                                      {
                                        "name": "value1",
                                        "nativeSrc": "3957:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "3957:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "3930:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3930:6:19"
                                    },
                                    "nativeSrc": "3930:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3930:34:19"
                                  },
                                  "nativeSrc": "3930:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3930:34:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "3984:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "3984:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3995:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "3995:2:19",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3980:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "3980:3:19"
                                        },
                                        "nativeSrc": "3980:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3980:18:19"
                                      },
                                      {
                                        "name": "value2",
                                        "nativeSrc": "4000:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4000:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "3973:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "3973:6:19"
                                    },
                                    "nativeSrc": "3973:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3973:34:19"
                                  },
                                  "nativeSrc": "3973:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3973:34:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4027:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4027:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4038:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "4038:2:19",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4023:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4023:3:19"
                                        },
                                        "nativeSrc": "4023:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4023:18:19"
                                      },
                                      {
                                        "name": "value3",
                                        "nativeSrc": "4043:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4043:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "4016:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4016:6:19"
                                    },
                                    "nativeSrc": "4016:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4016:34:19"
                                  },
                                  "nativeSrc": "4016:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4016:34:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4070:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4070:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4081:3:19",
                                            "nodeType": "YulLiteral",
                                            "src": "4081:3:19",
                                            "type": "",
                                            "value": "128"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4066:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4066:3:19"
                                        },
                                        "nativeSrc": "4066:19:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4066:19:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value4",
                                                "nativeSrc": "4101:6:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "4101:6:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "4094:6:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "4094:6:19"
                                            },
                                            "nativeSrc": "4094:14:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4094:14:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4087:6:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4087:6:19"
                                        },
                                        "nativeSrc": "4087:22:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4087:22:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "4059:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4059:6:19"
                                    },
                                    "nativeSrc": "4059:51:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4059:51:19"
                                  },
                                  "nativeSrc": "4059:51:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4059:51:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                            "nativeSrc": "3643:473:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "3787:9:19",
                                "nodeType": "YulTypedName",
                                "src": "3787:9:19",
                                "type": ""
                              },
                              {
                                "name": "value4",
                                "nativeSrc": "3798:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3798:6:19",
                                "type": ""
                              },
                              {
                                "name": "value3",
                                "nativeSrc": "3806:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3806:6:19",
                                "type": ""
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "3814:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3814:6:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "3822:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3822:6:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "3830:6:19",
                                "nodeType": "YulTypedName",
                                "src": "3830:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "3841:4:19",
                                "nodeType": "YulTypedName",
                                "src": "3841:4:19",
                                "type": ""
                              }
                            ],
                            "src": "3643:473:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "4216:92:19",
                              "nodeType": "YulBlock",
                              "src": "4216:92:19",
                              "statements": [
                                {
                                  "nativeSrc": "4226:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "4226:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4238:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4238:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4249:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "4249:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4234:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4234:3:19"
                                    },
                                    "nativeSrc": "4234:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4234:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "4226:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4226:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4268:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4268:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value0",
                                                "nativeSrc": "4293:6:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "4293:6:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "4286:6:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "4286:6:19"
                                            },
                                            "nativeSrc": "4286:14:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4286:14:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4279:6:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4279:6:19"
                                        },
                                        "nativeSrc": "4279:22:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4279:22:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "4261:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4261:6:19"
                                    },
                                    "nativeSrc": "4261:41:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4261:41:19"
                                  },
                                  "nativeSrc": "4261:41:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4261:41:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                            "nativeSrc": "4121:187:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4185:9:19",
                                "nodeType": "YulTypedName",
                                "src": "4185:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "4196:6:19",
                                "nodeType": "YulTypedName",
                                "src": "4196:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "4207:4:19",
                                "nodeType": "YulTypedName",
                                "src": "4207:4:19",
                                "type": ""
                              }
                            ],
                            "src": "4121:187:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "4468:581:19",
                              "nodeType": "YulBlock",
                              "src": "4468:581:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "4515:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "4515:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4524:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "4524:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4527:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "4527:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "4517:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4517:6:19"
                                          },
                                          "nativeSrc": "4517:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4517:12:19"
                                        },
                                        "nativeSrc": "4517:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4517:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "4489:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4489:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4498:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4498:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4485:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4485:3:19"
                                        },
                                        "nativeSrc": "4485:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4485:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4510:3:19",
                                        "nodeType": "YulLiteral",
                                        "src": "4510:3:19",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "4481:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4481:3:19"
                                    },
                                    "nativeSrc": "4481:33:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4481:33:19"
                                  },
                                  "nativeSrc": "4478:53:19",
                                  "nodeType": "YulIf",
                                  "src": "4478:53:19"
                                },
                                {
                                  "nativeSrc": "4540:36:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4540:36:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4566:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4566:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "4553:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4553:12:19"
                                    },
                                    "nativeSrc": "4553:23:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4553:23:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "4544:5:19",
                                      "nodeType": "YulTypedName",
                                      "src": "4544:5:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "4610:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4610:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "4585:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4585:24:19"
                                    },
                                    "nativeSrc": "4585:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4585:31:19"
                                  },
                                  "nativeSrc": "4585:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4585:31:19"
                                },
                                {
                                  "nativeSrc": "4625:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "4625:15:19",
                                  "value": {
                                    "name": "value",
                                    "nativeSrc": "4635:5:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "4635:5:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "4625:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4625:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4649:47:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4649:47:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4681:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4681:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4692:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "4692:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4677:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4677:3:19"
                                        },
                                        "nativeSrc": "4677:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4677:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "4664:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4664:12:19"
                                    },
                                    "nativeSrc": "4664:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4664:32:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value_1",
                                      "nativeSrc": "4653:7:19",
                                      "nodeType": "YulTypedName",
                                      "src": "4653:7:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value_1",
                                        "nativeSrc": "4730:7:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4730:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "4705:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4705:24:19"
                                    },
                                    "nativeSrc": "4705:33:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4705:33:19"
                                  },
                                  "nativeSrc": "4705:33:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4705:33:19"
                                },
                                {
                                  "nativeSrc": "4747:17:19",
                                  "nodeType": "YulAssignment",
                                  "src": "4747:17:19",
                                  "value": {
                                    "name": "value_1",
                                    "nativeSrc": "4757:7:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "4757:7:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "4747:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4747:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4773:47:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4773:47:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4805:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4805:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4816:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "4816:2:19",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4801:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4801:3:19"
                                        },
                                        "nativeSrc": "4801:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4801:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "4788:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4788:12:19"
                                    },
                                    "nativeSrc": "4788:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4788:32:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value_2",
                                      "nativeSrc": "4777:7:19",
                                      "nodeType": "YulTypedName",
                                      "src": "4777:7:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value_2",
                                        "nativeSrc": "4854:7:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "4854:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "4829:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4829:24:19"
                                    },
                                    "nativeSrc": "4829:33:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4829:33:19"
                                  },
                                  "nativeSrc": "4829:33:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4829:33:19"
                                },
                                {
                                  "nativeSrc": "4871:17:19",
                                  "nodeType": "YulAssignment",
                                  "src": "4871:17:19",
                                  "value": {
                                    "name": "value_2",
                                    "nativeSrc": "4881:7:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "4881:7:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nativeSrc": "4871:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4871:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4897:42:19",
                                  "nodeType": "YulAssignment",
                                  "src": "4897:42:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4924:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4924:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4935:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "4935:2:19",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4920:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4920:3:19"
                                        },
                                        "nativeSrc": "4920:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4920:18:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "4907:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4907:12:19"
                                    },
                                    "nativeSrc": "4907:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4907:32:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nativeSrc": "4897:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4897:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4948:43:19",
                                  "nodeType": "YulAssignment",
                                  "src": "4948:43:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4975:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "4975:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4986:3:19",
                                            "nodeType": "YulLiteral",
                                            "src": "4986:3:19",
                                            "type": "",
                                            "value": "128"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4971:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "4971:3:19"
                                        },
                                        "nativeSrc": "4971:19:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4971:19:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "4958:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4958:12:19"
                                    },
                                    "nativeSrc": "4958:33:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4958:33:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nativeSrc": "4948:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "4948:6:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "5000:43:19",
                                  "nodeType": "YulAssignment",
                                  "src": "5000:43:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "5027:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5027:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5038:3:19",
                                            "nodeType": "YulLiteral",
                                            "src": "5038:3:19",
                                            "type": "",
                                            "value": "160"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5023:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "5023:3:19"
                                        },
                                        "nativeSrc": "5023:19:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5023:19:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "5010:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5010:12:19"
                                    },
                                    "nativeSrc": "5010:33:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5010:33:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nativeSrc": "5000:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5000:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256",
                            "nativeSrc": "4313:736:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4394:9:19",
                                "nodeType": "YulTypedName",
                                "src": "4394:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "4405:7:19",
                                "nodeType": "YulTypedName",
                                "src": "4405:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "4417:6:19",
                                "nodeType": "YulTypedName",
                                "src": "4417:6:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "4425:6:19",
                                "nodeType": "YulTypedName",
                                "src": "4425:6:19",
                                "type": ""
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "4433:6:19",
                                "nodeType": "YulTypedName",
                                "src": "4433:6:19",
                                "type": ""
                              },
                              {
                                "name": "value3",
                                "nativeSrc": "4441:6:19",
                                "nodeType": "YulTypedName",
                                "src": "4441:6:19",
                                "type": ""
                              },
                              {
                                "name": "value4",
                                "nativeSrc": "4449:6:19",
                                "nodeType": "YulTypedName",
                                "src": "4449:6:19",
                                "type": ""
                              },
                              {
                                "name": "value5",
                                "nativeSrc": "4457:6:19",
                                "nodeType": "YulTypedName",
                                "src": "4457:6:19",
                                "type": ""
                              }
                            ],
                            "src": "4313:736:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "5120:184:19",
                              "nodeType": "YulBlock",
                              "src": "5120:184:19",
                              "statements": [
                                {
                                  "nativeSrc": "5130:10:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5130:10:19",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "5139:1:19",
                                    "nodeType": "YulLiteral",
                                    "src": "5139:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "i",
                                      "nativeSrc": "5134:1:19",
                                      "nodeType": "YulTypedName",
                                      "src": "5134:1:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "5199:63:19",
                                    "nodeType": "YulBlock",
                                    "src": "5199:63:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "dst",
                                                  "nativeSrc": "5224:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5224:3:19"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "5229:1:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5229:1:19"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "5220:3:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "5220:3:19"
                                              },
                                              "nativeSrc": "5220:11:19",
                                              "nodeType": "YulFunctionCall",
                                              "src": "5220:11:19"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "src",
                                                      "nativeSrc": "5243:3:19",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5243:3:19"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "5248:1:19",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5248:1:19"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "5239:3:19",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5239:3:19"
                                                  },
                                                  "nativeSrc": "5239:11:19",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5239:11:19"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nativeSrc": "5233:5:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "5233:5:19"
                                              },
                                              "nativeSrc": "5233:18:19",
                                              "nodeType": "YulFunctionCall",
                                              "src": "5233:18:19"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nativeSrc": "5213:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5213:6:19"
                                          },
                                          "nativeSrc": "5213:39:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5213:39:19"
                                        },
                                        "nativeSrc": "5213:39:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "5213:39:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "5160:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5160:1:19"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "5163:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5163:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "5157:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5157:2:19"
                                    },
                                    "nativeSrc": "5157:13:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5157:13:19"
                                  },
                                  "nativeSrc": "5149:113:19",
                                  "nodeType": "YulForLoop",
                                  "post": {
                                    "nativeSrc": "5171:19:19",
                                    "nodeType": "YulBlock",
                                    "src": "5171:19:19",
                                    "statements": [
                                      {
                                        "nativeSrc": "5173:15:19",
                                        "nodeType": "YulAssignment",
                                        "src": "5173:15:19",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "5182:1:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "5182:1:19"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5185:2:19",
                                              "nodeType": "YulLiteral",
                                              "src": "5185:2:19",
                                              "type": "",
                                              "value": "32"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "5178:3:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5178:3:19"
                                          },
                                          "nativeSrc": "5178:10:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5178:10:19"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "5173:1:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5173:1:19"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "pre": {
                                    "nativeSrc": "5153:3:19",
                                    "nodeType": "YulBlock",
                                    "src": "5153:3:19",
                                    "statements": []
                                  },
                                  "src": "5149:113:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dst",
                                            "nativeSrc": "5282:3:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5282:3:19"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "5287:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5287:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5278:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "5278:3:19"
                                        },
                                        "nativeSrc": "5278:16:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5278:16:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5296:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "5296:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "5271:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5271:6:19"
                                    },
                                    "nativeSrc": "5271:27:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5271:27:19"
                                  },
                                  "nativeSrc": "5271:27:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5271:27:19"
                                }
                              ]
                            },
                            "name": "copy_memory_to_memory_with_cleanup",
                            "nativeSrc": "5054:250:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "src",
                                "nativeSrc": "5098:3:19",
                                "nodeType": "YulTypedName",
                                "src": "5098:3:19",
                                "type": ""
                              },
                              {
                                "name": "dst",
                                "nativeSrc": "5103:3:19",
                                "nodeType": "YulTypedName",
                                "src": "5103:3:19",
                                "type": ""
                              },
                              {
                                "name": "length",
                                "nativeSrc": "5108:6:19",
                                "nodeType": "YulTypedName",
                                "src": "5108:6:19",
                                "type": ""
                              }
                            ],
                            "src": "5054:250:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "5430:275:19",
                              "nodeType": "YulBlock",
                              "src": "5430:275:19",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5447:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5447:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5458:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "5458:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "5440:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5440:6:19"
                                    },
                                    "nativeSrc": "5440:21:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5440:21:19"
                                  },
                                  "nativeSrc": "5440:21:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5440:21:19"
                                },
                                {
                                  "nativeSrc": "5470:27:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5470:27:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5490:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5490:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "5484:5:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5484:5:19"
                                    },
                                    "nativeSrc": "5484:13:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5484:13:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "5474:6:19",
                                      "nodeType": "YulTypedName",
                                      "src": "5474:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "5517:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5517:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5528:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "5528:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5513:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "5513:3:19"
                                        },
                                        "nativeSrc": "5513:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5513:18:19"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "5533:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5533:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "5506:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5506:6:19"
                                    },
                                    "nativeSrc": "5506:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5506:34:19"
                                  },
                                  "nativeSrc": "5506:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5506:34:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "5588:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5588:6:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5596:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "5596:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5584:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "5584:3:19"
                                        },
                                        "nativeSrc": "5584:15:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5584:15:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "5605:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5605:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5616:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "5616:2:19",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5601:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "5601:3:19"
                                        },
                                        "nativeSrc": "5601:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5601:18:19"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "5621:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5621:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "copy_memory_to_memory_with_cleanup",
                                      "nativeSrc": "5549:34:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5549:34:19"
                                    },
                                    "nativeSrc": "5549:79:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5549:79:19"
                                  },
                                  "nativeSrc": "5549:79:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5549:79:19"
                                },
                                {
                                  "nativeSrc": "5637:62:19",
                                  "nodeType": "YulAssignment",
                                  "src": "5637:62:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "5653:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5653:9:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "length",
                                                    "nativeSrc": "5672:6:19",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5672:6:19"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "5680:2:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "5680:2:19",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "5668:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5668:3:19"
                                                },
                                                "nativeSrc": "5668:15:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "5668:15:19"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "5689:2:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "5689:2:19",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "5685:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5685:3:19"
                                                },
                                                "nativeSrc": "5685:7:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "5685:7:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nativeSrc": "5664:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "5664:3:19"
                                            },
                                            "nativeSrc": "5664:29:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5664:29:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5649:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "5649:3:19"
                                        },
                                        "nativeSrc": "5649:45:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5649:45:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5696:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "5696:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5645:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5645:3:19"
                                    },
                                    "nativeSrc": "5645:54:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5645:54:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "5637:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5637:4:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                            "nativeSrc": "5309:396:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "5399:9:19",
                                "nodeType": "YulTypedName",
                                "src": "5399:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "5410:6:19",
                                "nodeType": "YulTypedName",
                                "src": "5410:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "5421:4:19",
                                "nodeType": "YulTypedName",
                                "src": "5421:4:19",
                                "type": ""
                              }
                            ],
                            "src": "5309:396:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "5839:119:19",
                              "nodeType": "YulBlock",
                              "src": "5839:119:19",
                              "statements": [
                                {
                                  "nativeSrc": "5849:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "5849:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5861:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5861:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5872:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "5872:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5857:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5857:3:19"
                                    },
                                    "nativeSrc": "5857:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5857:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "5849:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5849:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5891:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5891:9:19"
                                      },
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5902:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5902:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "5884:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5884:6:19"
                                    },
                                    "nativeSrc": "5884:25:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5884:25:19"
                                  },
                                  "nativeSrc": "5884:25:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5884:25:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "5929:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "5929:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5940:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "5940:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5925:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "5925:3:19"
                                        },
                                        "nativeSrc": "5925:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5925:18:19"
                                      },
                                      {
                                        "name": "value1",
                                        "nativeSrc": "5945:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "5945:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "5918:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "5918:6:19"
                                    },
                                    "nativeSrc": "5918:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5918:34:19"
                                  },
                                  "nativeSrc": "5918:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5918:34:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                            "nativeSrc": "5710:248:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "5800:9:19",
                                "nodeType": "YulTypedName",
                                "src": "5800:9:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "5811:6:19",
                                "nodeType": "YulTypedName",
                                "src": "5811:6:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "5819:6:19",
                                "nodeType": "YulTypedName",
                                "src": "5819:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "5830:4:19",
                                "nodeType": "YulTypedName",
                                "src": "5830:4:19",
                                "type": ""
                              }
                            ],
                            "src": "5710:248:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "6033:177:19",
                              "nodeType": "YulBlock",
                              "src": "6033:177:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "6079:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "6079:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6088:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "6088:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6091:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "6091:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "6081:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6081:6:19"
                                          },
                                          "nativeSrc": "6081:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6081:12:19"
                                        },
                                        "nativeSrc": "6081:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "6081:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "6054:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6054:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "6063:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6063:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "6050:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "6050:3:19"
                                        },
                                        "nativeSrc": "6050:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6050:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6075:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6075:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "6046:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6046:3:19"
                                    },
                                    "nativeSrc": "6046:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6046:32:19"
                                  },
                                  "nativeSrc": "6043:52:19",
                                  "nodeType": "YulIf",
                                  "src": "6043:52:19"
                                },
                                {
                                  "nativeSrc": "6104:36:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6104:36:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6130:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6130:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "6117:12:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6117:12:19"
                                    },
                                    "nativeSrc": "6117:23:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6117:23:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "6108:5:19",
                                      "nodeType": "YulTypedName",
                                      "src": "6108:5:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "6174:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6174:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "6149:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6149:24:19"
                                    },
                                    "nativeSrc": "6149:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6149:31:19"
                                  },
                                  "nativeSrc": "6149:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6149:31:19"
                                },
                                {
                                  "nativeSrc": "6189:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "6189:15:19",
                                  "value": {
                                    "name": "value",
                                    "nativeSrc": "6199:5:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "6199:5:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "6189:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6189:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_address",
                            "nativeSrc": "5963:247:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "5999:9:19",
                                "nodeType": "YulTypedName",
                                "src": "5999:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "6010:7:19",
                                "nodeType": "YulTypedName",
                                "src": "6010:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "6022:6:19",
                                "nodeType": "YulTypedName",
                                "src": "6022:6:19",
                                "type": ""
                              }
                            ],
                            "src": "5963:247:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "6331:102:19",
                              "nodeType": "YulBlock",
                              "src": "6331:102:19",
                              "statements": [
                                {
                                  "nativeSrc": "6341:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "6341:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6353:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6353:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6364:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6364:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6349:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6349:3:19"
                                    },
                                    "nativeSrc": "6349:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6349:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "6341:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6341:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6383:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6383:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "6398:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6398:6:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "6414:3:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "6414:3:19",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "6419:1:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "6419:1:19",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "6410:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6410:3:19"
                                                },
                                                "nativeSrc": "6410:11:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "6410:11:19"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "6423:1:19",
                                                "nodeType": "YulLiteral",
                                                "src": "6423:1:19",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "6406:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "6406:3:19"
                                            },
                                            "nativeSrc": "6406:19:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6406:19:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "6394:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "6394:3:19"
                                        },
                                        "nativeSrc": "6394:32:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6394:32:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "6376:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6376:6:19"
                                    },
                                    "nativeSrc": "6376:51:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6376:51:19"
                                  },
                                  "nativeSrc": "6376:51:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6376:51:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_contract$_IERC20_$1296__to_t_address__fromStack_reversed",
                            "nativeSrc": "6215:218:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "6300:9:19",
                                "nodeType": "YulTypedName",
                                "src": "6300:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "6311:6:19",
                                "nodeType": "YulTypedName",
                                "src": "6311:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "6322:4:19",
                                "nodeType": "YulTypedName",
                                "src": "6322:4:19",
                                "type": ""
                              }
                            ],
                            "src": "6215:218:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "6470:95:19",
                              "nodeType": "YulBlock",
                              "src": "6470:95:19",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6487:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6487:1:19",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6494:3:19",
                                            "nodeType": "YulLiteral",
                                            "src": "6494:3:19",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6499:10:19",
                                            "nodeType": "YulLiteral",
                                            "src": "6499:10:19",
                                            "type": "",
                                            "value": "0x4e487b71"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "6490:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "6490:3:19"
                                        },
                                        "nativeSrc": "6490:20:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6490:20:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "6480:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6480:6:19"
                                    },
                                    "nativeSrc": "6480:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6480:31:19"
                                  },
                                  "nativeSrc": "6480:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6480:31:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6527:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6527:1:19",
                                        "type": "",
                                        "value": "4"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6530:4:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6530:4:19",
                                        "type": "",
                                        "value": "0x11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "6520:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6520:6:19"
                                    },
                                    "nativeSrc": "6520:15:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6520:15:19"
                                  },
                                  "nativeSrc": "6520:15:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6520:15:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6551:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6551:1:19",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6554:4:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6554:4:19",
                                        "type": "",
                                        "value": "0x24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "6544:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6544:6:19"
                                    },
                                    "nativeSrc": "6544:15:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6544:15:19"
                                  },
                                  "nativeSrc": "6544:15:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6544:15:19"
                                }
                              ]
                            },
                            "name": "panic_error_0x11",
                            "nativeSrc": "6438:127:19",
                            "nodeType": "YulFunctionDefinition",
                            "src": "6438:127:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "6618:77:19",
                              "nodeType": "YulBlock",
                              "src": "6618:77:19",
                              "statements": [
                                {
                                  "nativeSrc": "6628:16:19",
                                  "nodeType": "YulAssignment",
                                  "src": "6628:16:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nativeSrc": "6639:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6639:1:19"
                                      },
                                      {
                                        "name": "y",
                                        "nativeSrc": "6642:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6642:1:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6635:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6635:3:19"
                                    },
                                    "nativeSrc": "6635:9:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6635:9:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "sum",
                                      "nativeSrc": "6628:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6628:3:19"
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "6667:22:19",
                                    "nodeType": "YulBlock",
                                    "src": "6667:22:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "panic_error_0x11",
                                            "nativeSrc": "6669:16:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6669:16:19"
                                          },
                                          "nativeSrc": "6669:18:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6669:18:19"
                                        },
                                        "nativeSrc": "6669:18:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "6669:18:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nativeSrc": "6659:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6659:1:19"
                                      },
                                      {
                                        "name": "sum",
                                        "nativeSrc": "6662:3:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6662:3:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "6656:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6656:2:19"
                                    },
                                    "nativeSrc": "6656:10:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6656:10:19"
                                  },
                                  "nativeSrc": "6653:36:19",
                                  "nodeType": "YulIf",
                                  "src": "6653:36:19"
                                }
                              ]
                            },
                            "name": "checked_add_t_uint256",
                            "nativeSrc": "6570:125:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "x",
                                "nativeSrc": "6601:1:19",
                                "nodeType": "YulTypedName",
                                "src": "6601:1:19",
                                "type": ""
                              },
                              {
                                "name": "y",
                                "nativeSrc": "6604:1:19",
                                "nodeType": "YulTypedName",
                                "src": "6604:1:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "sum",
                                "nativeSrc": "6610:3:19",
                                "nodeType": "YulTypedName",
                                "src": "6610:3:19",
                                "type": ""
                              }
                            ],
                            "src": "6570:125:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "6857:218:19",
                              "nodeType": "YulBlock",
                              "src": "6857:218:19",
                              "statements": [
                                {
                                  "nativeSrc": "6867:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "6867:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6879:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6879:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6890:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6890:2:19",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6875:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6875:3:19"
                                    },
                                    "nativeSrc": "6875:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6875:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "6867:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6867:4:19"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "6902:29:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6902:29:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6920:3:19",
                                            "nodeType": "YulLiteral",
                                            "src": "6920:3:19",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6925:1:19",
                                            "nodeType": "YulLiteral",
                                            "src": "6925:1:19",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "6916:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "6916:3:19"
                                        },
                                        "nativeSrc": "6916:11:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6916:11:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6929:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "6929:1:19",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "6912:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6912:3:19"
                                    },
                                    "nativeSrc": "6912:19:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6912:19:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "_1",
                                      "nativeSrc": "6906:2:19",
                                      "nodeType": "YulTypedName",
                                      "src": "6906:2:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6947:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "6947:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "6962:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6962:6:19"
                                          },
                                          {
                                            "name": "_1",
                                            "nativeSrc": "6970:2:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6970:2:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "6958:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "6958:3:19"
                                        },
                                        "nativeSrc": "6958:15:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6958:15:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "6940:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6940:6:19"
                                    },
                                    "nativeSrc": "6940:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6940:34:19"
                                  },
                                  "nativeSrc": "6940:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6940:34:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "6994:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "6994:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7005:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "7005:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "6990:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "6990:3:19"
                                        },
                                        "nativeSrc": "6990:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6990:18:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value1",
                                            "nativeSrc": "7014:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7014:6:19"
                                          },
                                          {
                                            "name": "_1",
                                            "nativeSrc": "7022:2:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7022:2:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "7010:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "7010:3:19"
                                        },
                                        "nativeSrc": "7010:15:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7010:15:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "6983:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "6983:6:19"
                                    },
                                    "nativeSrc": "6983:43:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6983:43:19"
                                  },
                                  "nativeSrc": "6983:43:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6983:43:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "7046:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7046:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7057:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "7057:2:19",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "7042:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "7042:3:19"
                                        },
                                        "nativeSrc": "7042:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7042:18:19"
                                      },
                                      {
                                        "name": "value2",
                                        "nativeSrc": "7062:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7062:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "7035:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7035:6:19"
                                    },
                                    "nativeSrc": "7035:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7035:34:19"
                                  },
                                  "nativeSrc": "7035:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7035:34:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                            "nativeSrc": "6700:375:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "6810:9:19",
                                "nodeType": "YulTypedName",
                                "src": "6810:9:19",
                                "type": ""
                              },
                              {
                                "name": "value2",
                                "nativeSrc": "6821:6:19",
                                "nodeType": "YulTypedName",
                                "src": "6821:6:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "6829:6:19",
                                "nodeType": "YulTypedName",
                                "src": "6829:6:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "6837:6:19",
                                "nodeType": "YulTypedName",
                                "src": "6837:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "6848:4:19",
                                "nodeType": "YulTypedName",
                                "src": "6848:4:19",
                                "type": ""
                              }
                            ],
                            "src": "6700:375:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "7188:101:19",
                              "nodeType": "YulBlock",
                              "src": "7188:101:19",
                              "statements": [
                                {
                                  "nativeSrc": "7198:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "7198:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7210:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7210:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7221:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7221:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7206:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7206:3:19"
                                    },
                                    "nativeSrc": "7206:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7206:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "7198:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7198:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7240:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7240:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "7255:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7255:6:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7263:18:19",
                                            "nodeType": "YulLiteral",
                                            "src": "7263:18:19",
                                            "type": "",
                                            "value": "0xffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "7251:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "7251:3:19"
                                        },
                                        "nativeSrc": "7251:31:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7251:31:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "7233:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7233:6:19"
                                    },
                                    "nativeSrc": "7233:50:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7233:50:19"
                                  },
                                  "nativeSrc": "7233:50:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7233:50:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
                            "nativeSrc": "7080:209:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "7157:9:19",
                                "nodeType": "YulTypedName",
                                "src": "7157:9:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "7168:6:19",
                                "nodeType": "YulTypedName",
                                "src": "7168:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "7179:4:19",
                                "nodeType": "YulTypedName",
                                "src": "7179:4:19",
                                "type": ""
                              }
                            ],
                            "src": "7080:209:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "7375:170:19",
                              "nodeType": "YulBlock",
                              "src": "7375:170:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "7421:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "7421:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "7430:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "7430:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "7433:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "7433:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "7423:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7423:6:19"
                                          },
                                          "nativeSrc": "7423:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7423:12:19"
                                        },
                                        "nativeSrc": "7423:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "7423:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "7396:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7396:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "7405:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7405:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "7392:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "7392:3:19"
                                        },
                                        "nativeSrc": "7392:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7392:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7417:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7417:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "7388:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7388:3:19"
                                    },
                                    "nativeSrc": "7388:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7388:32:19"
                                  },
                                  "nativeSrc": "7385:52:19",
                                  "nodeType": "YulIf",
                                  "src": "7385:52:19"
                                },
                                {
                                  "nativeSrc": "7446:29:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7446:29:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7465:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7465:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "7459:5:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7459:5:19"
                                    },
                                    "nativeSrc": "7459:16:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7459:16:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "7450:5:19",
                                      "nodeType": "YulTypedName",
                                      "src": "7450:5:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "7509:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7509:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "validator_revert_address",
                                      "nativeSrc": "7484:24:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7484:24:19"
                                    },
                                    "nativeSrc": "7484:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7484:31:19"
                                  },
                                  "nativeSrc": "7484:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7484:31:19"
                                },
                                {
                                  "nativeSrc": "7524:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "7524:15:19",
                                  "value": {
                                    "name": "value",
                                    "nativeSrc": "7534:5:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "7534:5:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "7524:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7524:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_address_fromMemory",
                            "nativeSrc": "7294:251:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "7341:9:19",
                                "nodeType": "YulTypedName",
                                "src": "7341:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "7352:7:19",
                                "nodeType": "YulTypedName",
                                "src": "7352:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "7364:6:19",
                                "nodeType": "YulTypedName",
                                "src": "7364:6:19",
                                "type": ""
                              }
                            ],
                            "src": "7294:251:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "7631:103:19",
                              "nodeType": "YulBlock",
                              "src": "7631:103:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "7677:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "7677:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "7686:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "7686:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "7689:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "7689:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "7679:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7679:6:19"
                                          },
                                          "nativeSrc": "7679:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7679:12:19"
                                        },
                                        "nativeSrc": "7679:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "7679:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "7652:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7652:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "7661:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7661:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "7648:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "7648:3:19"
                                        },
                                        "nativeSrc": "7648:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7648:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7673:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7673:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "7644:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7644:3:19"
                                    },
                                    "nativeSrc": "7644:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7644:32:19"
                                  },
                                  "nativeSrc": "7641:52:19",
                                  "nodeType": "YulIf",
                                  "src": "7641:52:19"
                                },
                                {
                                  "nativeSrc": "7702:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "7702:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7718:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7718:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "7712:5:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7712:5:19"
                                    },
                                    "nativeSrc": "7712:16:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7712:16:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "7702:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7702:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_bytes32_fromMemory",
                            "nativeSrc": "7550:184:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "7597:9:19",
                                "nodeType": "YulTypedName",
                                "src": "7597:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "7608:7:19",
                                "nodeType": "YulTypedName",
                                "src": "7608:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "7620:6:19",
                                "nodeType": "YulTypedName",
                                "src": "7620:6:19",
                                "type": ""
                              }
                            ],
                            "src": "7550:184:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "7788:79:19",
                              "nodeType": "YulBlock",
                              "src": "7788:79:19",
                              "statements": [
                                {
                                  "nativeSrc": "7798:17:19",
                                  "nodeType": "YulAssignment",
                                  "src": "7798:17:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nativeSrc": "7810:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7810:1:19"
                                      },
                                      {
                                        "name": "y",
                                        "nativeSrc": "7813:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7813:1:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "7806:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7806:3:19"
                                    },
                                    "nativeSrc": "7806:9:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7806:9:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "diff",
                                      "nativeSrc": "7798:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7798:4:19"
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "7839:22:19",
                                    "nodeType": "YulBlock",
                                    "src": "7839:22:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "panic_error_0x11",
                                            "nativeSrc": "7841:16:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "7841:16:19"
                                          },
                                          "nativeSrc": "7841:18:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7841:18:19"
                                        },
                                        "nativeSrc": "7841:18:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "7841:18:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "diff",
                                        "nativeSrc": "7830:4:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7830:4:19"
                                      },
                                      {
                                        "name": "x",
                                        "nativeSrc": "7836:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "7836:1:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "7827:2:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7827:2:19"
                                    },
                                    "nativeSrc": "7827:11:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7827:11:19"
                                  },
                                  "nativeSrc": "7824:37:19",
                                  "nodeType": "YulIf",
                                  "src": "7824:37:19"
                                }
                              ]
                            },
                            "name": "checked_sub_t_uint256",
                            "nativeSrc": "7739:128:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "x",
                                "nativeSrc": "7770:1:19",
                                "nodeType": "YulTypedName",
                                "src": "7770:1:19",
                                "type": ""
                              },
                              {
                                "name": "y",
                                "nativeSrc": "7773:1:19",
                                "nodeType": "YulTypedName",
                                "src": "7773:1:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "diff",
                                "nativeSrc": "7779:4:19",
                                "nodeType": "YulTypedName",
                                "src": "7779:4:19",
                                "type": ""
                              }
                            ],
                            "src": "7739:128:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "7904:95:19",
                              "nodeType": "YulBlock",
                              "src": "7904:95:19",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7921:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7921:1:19",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7928:3:19",
                                            "nodeType": "YulLiteral",
                                            "src": "7928:3:19",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7933:10:19",
                                            "nodeType": "YulLiteral",
                                            "src": "7933:10:19",
                                            "type": "",
                                            "value": "0x4e487b71"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "7924:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "7924:3:19"
                                        },
                                        "nativeSrc": "7924:20:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7924:20:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "7914:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7914:6:19"
                                    },
                                    "nativeSrc": "7914:31:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7914:31:19"
                                  },
                                  "nativeSrc": "7914:31:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7914:31:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7961:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7961:1:19",
                                        "type": "",
                                        "value": "4"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7964:4:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7964:4:19",
                                        "type": "",
                                        "value": "0x32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "7954:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7954:6:19"
                                    },
                                    "nativeSrc": "7954:15:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7954:15:19"
                                  },
                                  "nativeSrc": "7954:15:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7954:15:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7985:1:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7985:1:19",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7988:4:19",
                                        "nodeType": "YulLiteral",
                                        "src": "7988:4:19",
                                        "type": "",
                                        "value": "0x24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "7978:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "7978:6:19"
                                    },
                                    "nativeSrc": "7978:15:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7978:15:19"
                                  },
                                  "nativeSrc": "7978:15:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7978:15:19"
                                }
                              ]
                            },
                            "name": "panic_error_0x32",
                            "nativeSrc": "7872:127:19",
                            "nodeType": "YulFunctionDefinition",
                            "src": "7872:127:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "8056:116:19",
                              "nodeType": "YulBlock",
                              "src": "8056:116:19",
                              "statements": [
                                {
                                  "nativeSrc": "8066:20:19",
                                  "nodeType": "YulAssignment",
                                  "src": "8066:20:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nativeSrc": "8081:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8081:1:19"
                                      },
                                      {
                                        "name": "y",
                                        "nativeSrc": "8084:1:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8084:1:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nativeSrc": "8077:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8077:3:19"
                                    },
                                    "nativeSrc": "8077:9:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8077:9:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "product",
                                      "nativeSrc": "8066:7:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8066:7:19"
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "8144:22:19",
                                    "nodeType": "YulBlock",
                                    "src": "8144:22:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "panic_error_0x11",
                                            "nativeSrc": "8146:16:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8146:16:19"
                                          },
                                          "nativeSrc": "8146:18:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8146:18:19"
                                        },
                                        "nativeSrc": "8146:18:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "8146:18:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "x",
                                                "nativeSrc": "8115:1:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "8115:1:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "8108:6:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "8108:6:19"
                                            },
                                            "nativeSrc": "8108:9:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "8108:9:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "y",
                                                "nativeSrc": "8122:1:19",
                                                "nodeType": "YulIdentifier",
                                                "src": "8122:1:19"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "product",
                                                    "nativeSrc": "8129:7:19",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8129:7:19"
                                                  },
                                                  {
                                                    "name": "x",
                                                    "nativeSrc": "8138:1:19",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8138:1:19"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "div",
                                                  "nativeSrc": "8125:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8125:3:19"
                                                },
                                                "nativeSrc": "8125:15:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "8125:15:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "eq",
                                              "nativeSrc": "8119:2:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "8119:2:19"
                                            },
                                            "nativeSrc": "8119:22:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "8119:22:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "or",
                                          "nativeSrc": "8105:2:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "8105:2:19"
                                        },
                                        "nativeSrc": "8105:37:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8105:37:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "8098:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8098:6:19"
                                    },
                                    "nativeSrc": "8098:45:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8098:45:19"
                                  },
                                  "nativeSrc": "8095:71:19",
                                  "nodeType": "YulIf",
                                  "src": "8095:71:19"
                                }
                              ]
                            },
                            "name": "checked_mul_t_uint256",
                            "nativeSrc": "8004:168:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "x",
                                "nativeSrc": "8035:1:19",
                                "nodeType": "YulTypedName",
                                "src": "8035:1:19",
                                "type": ""
                              },
                              {
                                "name": "y",
                                "nativeSrc": "8038:1:19",
                                "nodeType": "YulTypedName",
                                "src": "8038:1:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "product",
                                "nativeSrc": "8044:7:19",
                                "nodeType": "YulTypedName",
                                "src": "8044:7:19",
                                "type": ""
                              }
                            ],
                            "src": "8004:168:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "8224:89:19",
                              "nodeType": "YulBlock",
                              "src": "8224:89:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "8251:22:19",
                                    "nodeType": "YulBlock",
                                    "src": "8251:22:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "panic_error_0x11",
                                            "nativeSrc": "8253:16:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8253:16:19"
                                          },
                                          "nativeSrc": "8253:18:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8253:18:19"
                                        },
                                        "nativeSrc": "8253:18:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "8253:18:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "8244:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8244:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "8237:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8237:6:19"
                                    },
                                    "nativeSrc": "8237:13:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8237:13:19"
                                  },
                                  "nativeSrc": "8234:39:19",
                                  "nodeType": "YulIf",
                                  "src": "8234:39:19"
                                },
                                {
                                  "nativeSrc": "8282:25:19",
                                  "nodeType": "YulAssignment",
                                  "src": "8282:25:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "8293:5:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8293:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "8304:1:19",
                                            "nodeType": "YulLiteral",
                                            "src": "8304:1:19",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "8300:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "8300:3:19"
                                        },
                                        "nativeSrc": "8300:6:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8300:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8289:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8289:3:19"
                                    },
                                    "nativeSrc": "8289:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8289:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "ret",
                                      "nativeSrc": "8282:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8282:3:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "decrement_t_uint256",
                            "nativeSrc": "8177:136:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "value",
                                "nativeSrc": "8206:5:19",
                                "nodeType": "YulTypedName",
                                "src": "8206:5:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "ret",
                                "nativeSrc": "8216:3:19",
                                "nodeType": "YulTypedName",
                                "src": "8216:3:19",
                                "type": ""
                              }
                            ],
                            "src": "8177:136:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "8447:145:19",
                              "nodeType": "YulBlock",
                              "src": "8447:145:19",
                              "statements": [
                                {
                                  "nativeSrc": "8457:26:19",
                                  "nodeType": "YulAssignment",
                                  "src": "8457:26:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8469:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8469:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8480:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "8480:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8465:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8465:3:19"
                                    },
                                    "nativeSrc": "8465:18:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8465:18:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "8457:4:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8457:4:19"
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8499:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8499:9:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "8514:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8514:6:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "8530:3:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8530:3:19",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "8535:1:19",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8535:1:19",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "8526:3:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8526:3:19"
                                                },
                                                "nativeSrc": "8526:11:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "8526:11:19"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "8539:1:19",
                                                "nodeType": "YulLiteral",
                                                "src": "8539:1:19",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "8522:3:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "8522:3:19"
                                            },
                                            "nativeSrc": "8522:19:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "8522:19:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "8510:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "8510:3:19"
                                        },
                                        "nativeSrc": "8510:32:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8510:32:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "8492:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8492:6:19"
                                    },
                                    "nativeSrc": "8492:51:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8492:51:19"
                                  },
                                  "nativeSrc": "8492:51:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8492:51:19"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "8563:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8563:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "8574:2:19",
                                            "nodeType": "YulLiteral",
                                            "src": "8574:2:19",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "8559:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "8559:3:19"
                                        },
                                        "nativeSrc": "8559:18:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8559:18:19"
                                      },
                                      {
                                        "name": "value1",
                                        "nativeSrc": "8579:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8579:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "8552:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8552:6:19"
                                    },
                                    "nativeSrc": "8552:34:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8552:34:19"
                                  },
                                  "nativeSrc": "8552:34:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8552:34:19"
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                            "nativeSrc": "8318:274:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8408:9:19",
                                "nodeType": "YulTypedName",
                                "src": "8408:9:19",
                                "type": ""
                              },
                              {
                                "name": "value1",
                                "nativeSrc": "8419:6:19",
                                "nodeType": "YulTypedName",
                                "src": "8419:6:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "8427:6:19",
                                "nodeType": "YulTypedName",
                                "src": "8427:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "tail",
                                "nativeSrc": "8438:4:19",
                                "nodeType": "YulTypedName",
                                "src": "8438:4:19",
                                "type": ""
                              }
                            ],
                            "src": "8318:274:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "8675:199:19",
                              "nodeType": "YulBlock",
                              "src": "8675:199:19",
                              "statements": [
                                {
                                  "body": {
                                    "nativeSrc": "8721:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "8721:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "8730:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "8730:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "8733:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "8733:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "8723:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8723:6:19"
                                          },
                                          "nativeSrc": "8723:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8723:12:19"
                                        },
                                        "nativeSrc": "8723:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "8723:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataEnd",
                                            "nativeSrc": "8696:7:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8696:7:19"
                                          },
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "8705:9:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8705:9:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "8692:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "8692:3:19"
                                        },
                                        "nativeSrc": "8692:23:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8692:23:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8717:2:19",
                                        "nodeType": "YulLiteral",
                                        "src": "8717:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "8688:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8688:3:19"
                                    },
                                    "nativeSrc": "8688:32:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8688:32:19"
                                  },
                                  "nativeSrc": "8685:52:19",
                                  "nodeType": "YulIf",
                                  "src": "8685:52:19"
                                },
                                {
                                  "nativeSrc": "8746:29:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8746:29:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8765:9:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "8765:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "8759:5:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8759:5:19"
                                    },
                                    "nativeSrc": "8759:16:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8759:16:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "8750:5:19",
                                      "nodeType": "YulTypedName",
                                      "src": "8750:5:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "8828:16:19",
                                    "nodeType": "YulBlock",
                                    "src": "8828:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "8837:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "8837:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "8840:1:19",
                                              "nodeType": "YulLiteral",
                                              "src": "8840:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "8830:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8830:6:19"
                                          },
                                          "nativeSrc": "8830:12:19",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8830:12:19"
                                        },
                                        "nativeSrc": "8830:12:19",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "8830:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "8797:5:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "8797:5:19"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value",
                                                    "nativeSrc": "8818:5:19",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8818:5:19"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "iszero",
                                                  "nativeSrc": "8811:6:19",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8811:6:19"
                                                },
                                                "nativeSrc": "8811:13:19",
                                                "nodeType": "YulFunctionCall",
                                                "src": "8811:13:19"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "8804:6:19",
                                              "nodeType": "YulIdentifier",
                                              "src": "8804:6:19"
                                            },
                                            "nativeSrc": "8804:21:19",
                                            "nodeType": "YulFunctionCall",
                                            "src": "8804:21:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "8794:2:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "8794:2:19"
                                        },
                                        "nativeSrc": "8794:32:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8794:32:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "8787:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8787:6:19"
                                    },
                                    "nativeSrc": "8787:40:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8787:40:19"
                                  },
                                  "nativeSrc": "8784:60:19",
                                  "nodeType": "YulIf",
                                  "src": "8784:60:19"
                                },
                                {
                                  "nativeSrc": "8853:15:19",
                                  "nodeType": "YulAssignment",
                                  "src": "8853:15:19",
                                  "value": {
                                    "name": "value",
                                    "nativeSrc": "8863:5:19",
                                    "nodeType": "YulIdentifier",
                                    "src": "8863:5:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "8853:6:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "8853:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_decode_tuple_t_bool_fromMemory",
                            "nativeSrc": "8597:277:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "headStart",
                                "nativeSrc": "8641:9:19",
                                "nodeType": "YulTypedName",
                                "src": "8641:9:19",
                                "type": ""
                              },
                              {
                                "name": "dataEnd",
                                "nativeSrc": "8652:7:19",
                                "nodeType": "YulTypedName",
                                "src": "8652:7:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "value0",
                                "nativeSrc": "8664:6:19",
                                "nodeType": "YulTypedName",
                                "src": "8664:6:19",
                                "type": ""
                              }
                            ],
                            "src": "8597:277:19"
                          },
                          {
                            "body": {
                              "nativeSrc": "9016:150:19",
                              "nodeType": "YulBlock",
                              "src": "9016:150:19",
                              "statements": [
                                {
                                  "nativeSrc": "9026:27:19",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9026:27:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "9046:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "9046:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9040:5:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "9040:5:19"
                                    },
                                    "nativeSrc": "9040:13:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9040:13:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "9030:6:19",
                                      "nodeType": "YulTypedName",
                                      "src": "9030:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "9101:6:19",
                                            "nodeType": "YulIdentifier",
                                            "src": "9101:6:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "9109:4:19",
                                            "nodeType": "YulLiteral",
                                            "src": "9109:4:19",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "9097:3:19",
                                          "nodeType": "YulIdentifier",
                                          "src": "9097:3:19"
                                        },
                                        "nativeSrc": "9097:17:19",
                                        "nodeType": "YulFunctionCall",
                                        "src": "9097:17:19"
                                      },
                                      {
                                        "name": "pos",
                                        "nativeSrc": "9116:3:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "9116:3:19"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "9121:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "9121:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "copy_memory_to_memory_with_cleanup",
                                      "nativeSrc": "9062:34:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "9062:34:19"
                                    },
                                    "nativeSrc": "9062:66:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9062:66:19"
                                  },
                                  "nativeSrc": "9062:66:19",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9062:66:19"
                                },
                                {
                                  "nativeSrc": "9137:23:19",
                                  "nodeType": "YulAssignment",
                                  "src": "9137:23:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "9148:3:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "9148:3:19"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "9153:6:19",
                                        "nodeType": "YulIdentifier",
                                        "src": "9153:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9144:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "9144:3:19"
                                    },
                                    "nativeSrc": "9144:16:19",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9144:16:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "end",
                                      "nativeSrc": "9137:3:19",
                                      "nodeType": "YulIdentifier",
                                      "src": "9137:3:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                            "nativeSrc": "8879:287:19",
                            "nodeType": "YulFunctionDefinition",
                            "parameters": [
                              {
                                "name": "pos",
                                "nativeSrc": "8992:3:19",
                                "nodeType": "YulTypedName",
                                "src": "8992:3:19",
                                "type": ""
                              },
                              {
                                "name": "value0",
                                "nativeSrc": "8997:6:19",
                                "nodeType": "YulTypedName",
                                "src": "8997:6:19",
                                "type": ""
                              }
                            ],
                            "returnVariables": [
                              {
                                "name": "end",
                                "nativeSrc": "9008:3:19",
                                "nodeType": "YulTypedName",
                                "src": "9008:3:19",
                                "type": ""
                              }
                            ],
                            "src": "8879:287:19"
                          }
                        ]
                      },
                      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$1739__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1296__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
                      "id": 19,
                      "language": "Yul",
                      "name": "#utility.yul"
                    }
                  ],
                  "immutableReferences": {
                    "468": [
                      {
                        "length": 32,
                        "start": 4058
                      },
                      {
                        "length": 32,
                        "start": 4099
                      },
                      {
                        "length": 32,
                        "start": 4423
                      }
                    ]
                  },
                  "linkReferences": {},
                  "object": "608060405260043610610195575f3560e01c80635c975abb116100e75780639ef3a26111610087578063f2caeb1e11610062578063f2caeb1e1461051b578063f2fde38b1461054f578063f7c618c11461056e578063f851a4401461058d575f80fd5b80639ef3a261146104a0578063a694fc3a146104bf578063ad3cb1cc146104de575f80fd5b8063728cdbca116100c2578063728cdbca1461041e5780638456cb591461043d5780638da5cb5b146104515780638dd0cdf31461048d575f80fd5b80635c975abb146103c65780636cf6d675146103f5578063715018a61461040a575f80fd5b80632e1a7d4d1161015257806347ccca021161012d57806347ccca02146103015780634f1ef2861461031f57806352d1902d14610332578063584b62a114610346575f80fd5b80632e1a7d4d146102ab5780633f4ba83a146102ca57806346582583146102de575f80fd5b80630962ef7914610199578063114eaf55146101ba578063150b7a02146101d9578063197916b4146102215780631caaa487146102405780632e17de781461028c575b5f80fd5b3480156101a4575f80fd5b506101b86101b3366004611723565b6105ac565b005b3480156101c5575f80fd5b506101b86101d4366004611723565b61067a565b3480156101e4575f80fd5b506102036101f33660046117eb565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561022c575f80fd5b506101b861023b366004611723565b6106a7565b34801561024b575f80fd5b5061027461025a366004611723565b60076020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610218565b348015610297575f80fd5b506101b86102a6366004611723565b6106d4565b3480156102b6575f80fd5b506101b86102c5366004611723565b610785565b3480156102d5575f80fd5b506101b86108b7565b3480156102e9575f80fd5b506102f360055481565b604051908152602001610218565b34801561030c575f80fd5b505f54610274906001600160a01b031681565b6101b861032d366004611853565b6108c9565b34801561033d575f80fd5b506102f36108e8565b348015610351575f80fd5b5061039c6103603660046118a0565b600660209081525f9283526040808420909152908252902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610218565b3480156103d1575f80fd5b505f80516020611aa18339815191525460ff165b6040519015158152602001610218565b348015610400575f80fd5b506102f360045481565b348015610415575f80fd5b506101b8610903565b348015610429575f80fd5b506101b86104383660046118ca565b610914565b348015610448575f80fd5b506101b8610aef565b34801561045c575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610274565b348015610498575f80fd5b5060016103e5565b3480156104ab575f80fd5b506101b86104ba366004611723565b610aff565b3480156104ca575f80fd5b506101b86104d9366004611723565b610bda565b3480156104e9575f80fd5b5061050e604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610218919061194d565b348015610526575f80fd5b5061053a610535366004611723565b610dd7565b60408051928352602083019190915201610218565b34801561055a575f80fd5b506101b861056936600461197f565b610e03565b348015610579575f80fd5b50600154610274906001600160a01b031681565b348015610598575f80fd5b50600254610274906001600160a01b031681565b335f90815260066020908152604080832084845290915290206004015460ff166105e8576040516273e5c360e31b815260040160405180910390fd5b335f90815260066020908152604080832084845290915290206002015415610623576040516358ae518b60e11b815260040160405180910390fd5b600554335f90815260066020908152604080832085845290915290206003015461064d91906119ae565b42101561066d576040516358ae518b60e11b815260040160405180910390fd5b6106773382610e42565b50565b610682610eeb565b805f036106a25760405163027a6b4360e61b815260040160405180910390fd5b600455565b6106af610eeb565b805f036106cf57604051635958c64760e01b815260040160405180910390fd5b600555565b6106dc610f46565b335f90815260066020908152604080832084845290915290206004015460ff16610718576040516273e5c360e31b815260040160405180910390fd5b6107223382610e42565b60045461072f90436119ae565b335f818152600660209081526040808320868452825291829020600201939093555183815290917f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7591015b60405180910390a250565b335f90815260066020908152604080832084845290915290206004015460ff166107c1576040516273e5c360e31b815260040160405180910390fd5b335f9081526006602090815260408083208484529091529020600201544310156107fe57604051633878000d60e01b815260040160405180910390fd5b5f54604051632142170760e11b8152306004820152336024820152604481018390526001600160a01b03909116906342842e0e906064015f604051808303815f87803b15801561084c575f80fd5b505af115801561085e573d5f803e3d5ffd5b5050335f908152600660209081526040808320958352948152848220828155600181018390556002810183905560038101839055600401805460ff19169055600790529290922080546001600160a01b03191690555050565b6108bf610eeb565b6108c7610f76565b565b6108d1610fcf565b6108da82611073565b6108e4828261107b565b5050565b5f6108f161113c565b505f80516020611a8183398151915290565b61090b610eeb565b6108c75f611185565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156109595750825b90505f8267ffffffffffffffff1660011480156109755750303b155b905081158015610983575080155b156109a15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109cb57845460ff60401b1916600160401b1785555b6109d36111f5565b6109dc8b6111fd565b6109e461120e565b600280546001600160a01b03808e166001600160a01b03199283161783555f80548e831690841617815560018054928e169290931691909117825560408051808201909152438152602081018c815260038054948501815590925251919092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b81019190915590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c90910155600487905560058690558315610ae257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b610af7610eeb565b6108c761121e565b610b07610eeb565b805f03610b275760405163ae4fc7ab60e01b815260040160405180910390fd5b604080518082018252438082526020808301858152600380546001810182555f9190915293517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b600290950294850155517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c9093019290925582519081529081018390527fc390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee5091015b60405180910390a150565b610be2610f46565b335f90815260066020908152604080832084845290915290206004015460ff1615610c2057604051630ae3514d60e01b815260040160405180910390fd5b5f546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610c66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8a91906119c1565b6001600160a01b031614610cb1576040516359dc379f60e01b815260040160405180910390fd5b610cbb3382610e42565b5f54604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e906064015f604051808303815f87803b158015610d09575f80fd5b505af1158015610d1b573d5f803e3d5ffd5b50506040805160a0810182528481524360208083019182525f838501818152426060860190815260016080870181815233808652600687528986208d875287528986209851895596519188019190915591516002870155516003860155516004909401805460ff191694151594909417909355600781529183902080546001600160a01b0319168217905591518581529193507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d92500161077a565b60038181548110610de6575f80fd5b5f9182526020909120600290910201805460019091015490915082565b610e0b610eeb565b6001600160a01b038116610e3957604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61067781611185565b6001600160a01b0382165f90815260066020908152604080832084845290915281206001810154909190610e769043611266565b90508015610ee557600154610e95906001600160a01b03168583611353565b836001600160a01b03167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724182604051610ed091815260200190565b60405180910390a24360018301554260038301555b50505050565b33610f1d7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108c75760405163118cdaa760e01b8152336004820152602401610e30565b5f80516020611aa18339815191525460ff16156108c75760405163d93c066560e01b815260040160405180910390fd5b610f7e6113a5565b5f80516020611aa1833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610bcf565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061105557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110495f80516020611a81833981519152546001600160a01b031690565b6001600160a01b031614155b156108c75760405163703e46dd60e11b815260040160405180910390fd5b610677610eeb565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110d5575060408051601f3d908101601f191682019092526110d2918101906119dc565b60015b6110fd57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e30565b5f80516020611a81833981519152811461112d57604051632a87526960e21b815260048101829052602401610e30565b61113783836113d4565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108c75760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6108c7611429565b611205611429565b61067781611472565b611216611429565b6108c761147a565b611226610f46565b5f80516020611aa1833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610fb7565b6003545f90816112776001836119f3565b90505b5f6003828154811061128e5761128e611a06565b905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250509050805f01518511156113385780515f906112d390876119f3565b90508160200151816112e59190611a1a565b6112ef90866119ae565b82519650945086861161132857602082015161130b88886119f3565b6113159190611a1a565b61131f90866119ae565b9450505061134b565b825f0361133657505061134b565b505b508061134381611a31565b91505061127a565b505092915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261113790849061149a565b5f80516020611aa18339815191525460ff166108c757604051638dfc202b60e01b815260040160405180910390fd5b6113dd826114fb565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561142157611137828261155e565b6108e46115d2565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108c757604051631afcd79f60e31b815260040160405180910390fd5b610e0b611429565b611482611429565b5f80516020611aa1833981519152805460ff19169055565b5f6114ae6001600160a01b038416836115f1565b905080515f141580156114d25750808060200190518101906114d09190611a46565b155b1561113757604051635274afe760e01b81526001600160a01b0384166004820152602401610e30565b806001600160a01b03163b5f0361153057604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e30565b5f80516020611a8183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161157a9190611a65565b5f60405180830381855af49150503d805f81146115b2576040519150601f19603f3d011682016040523d82523d5f602084013e6115b7565b606091505b50915091506115c7858383611605565b925050505b92915050565b34156108c75760405163b398979f60e01b815260040160405180910390fd5b60606115fe83835f611661565b9392505050565b60608261161a57611615826116fa565b6115fe565b815115801561163157506001600160a01b0384163b155b1561165a57604051639996b31560e01b81526001600160a01b0385166004820152602401610e30565b5092915050565b6060814710156116865760405163cd78605960e01b8152306004820152602401610e30565b5f80856001600160a01b031684866040516116a19190611a65565b5f6040518083038185875af1925050503d805f81146116db576040519150601f19603f3d011682016040523d82523d5f602084013e6116e0565b606091505b50915091506116f0868383611605565b9695505050505050565b80511561170a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611733575f80fd5b5035919050565b6001600160a01b0381168114610677575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611771575f80fd5b813567ffffffffffffffff8082111561178c5761178c61174e565b604051601f8301601f19908116603f011681019082821181831017156117b4576117b461174e565b816040528381528660208588010111156117cc575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f80608085870312156117fe575f80fd5b84356118098161173a565b935060208501356118198161173a565b925060408501359150606085013567ffffffffffffffff81111561183b575f80fd5b61184787828801611762565b91505092959194509250565b5f8060408385031215611864575f80fd5b823561186f8161173a565b9150602083013567ffffffffffffffff81111561188a575f80fd5b61189685828601611762565b9150509250929050565b5f80604083850312156118b1575f80fd5b82356118bc8161173a565b946020939093013593505050565b5f805f805f8060c087890312156118df575f80fd5b86356118ea8161173a565b955060208701356118fa8161173a565b9450604087013561190a8161173a565b959894975094956060810135955060808101359460a0909101359350915050565b5f5b8381101561194557818101518382015260200161192d565b50505f910152565b602081525f825180602084015261196b81604085016020870161192b565b601f01601f19169190910160400192915050565b5f6020828403121561198f575f80fd5b81356115fe8161173a565b634e487b7160e01b5f52601160045260245ffd5b808201808211156115cc576115cc61199a565b5f602082840312156119d1575f80fd5b81516115fe8161173a565b5f602082840312156119ec575f80fd5b5051919050565b818103818111156115cc576115cc61199a565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176115cc576115cc61199a565b5f81611a3f57611a3f61199a565b505f190190565b5f60208284031215611a56575f80fd5b815180151581146115fe575f80fd5b5f8251611a7681846020870161192b565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220effd0e601bcb0da7a00d76d99402ab04035980320c9e53be9c549146857546e064736f6c63430008180033",
                  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x195 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9EF3A261 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF2CAEB1E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF2CAEB1E EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x728CDBCA GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x728CDBCA EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x8DD0CDF3 EQ PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x6CF6D675 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x46582583 EQ PUSH2 0x2DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x962EF79 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x114EAF55 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x197916B4 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x1CAAA487 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x28C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EB JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x8B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x8E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x903 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x274 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x3E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x50E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53A PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x73E5C3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58AE518B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH4 0x58AE518B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 CALLER DUP3 PUSH2 0xE42 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x682 PUSH2 0xEEB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27A6B43 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x6AF PUSH2 0xEEB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5958C647 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x6DC PUSH2 0xF46 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x73E5C3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x722 CALLER DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x72F SWAP1 NUMBER PUSH2 0x19AE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE SWAP1 SWAP2 PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x73E5C3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD NUMBER LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x3878000D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x85E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x7 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8BF PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0xF76 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0x8E4 DUP3 DUP3 PUSH2 0x107B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F1 PUSH2 0x113C JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x90B PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x8C7 PUSH0 PUSH2 0x1185 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x959 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x975 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9CB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9D3 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x9DC DUP12 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x9E4 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH0 DUP1 SLOAD DUP15 DUP4 AND SWAP1 DUP5 AND OR DUP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP15 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE SWAP1 SWAP3 MSTORE MLOAD SWAP2 SWAP1 SWAP3 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C SWAP1 SWAP2 ADD SSTORE PUSH1 0x4 DUP8 SWAP1 SSTORE PUSH1 0x5 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xAE2 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x121E JUMP JUMPDEST PUSH2 0xB07 PUSH2 0xEEB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0xB27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAE4FC7AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE NUMBER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE SWAP4 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x2 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD SSTORE MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xC390A98ACE15A7BB6BAB611EEDFDBB2685043B241A869420043CDFB23CCFEE50 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xBE2 PUSH2 0xF46 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAE3514D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x59DC379F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBB CALLER DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE NUMBER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH0 DUP4 DUP6 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE CALLER DUP1 DUP7 MSTORE PUSH1 0x6 DUP8 MSTORE DUP10 DUP7 KECCAK256 DUP14 DUP8 MSTORE DUP8 MSTORE DUP10 DUP7 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP7 MLOAD SWAP2 DUP9 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD PUSH1 0x3 DUP7 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP2 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE SWAP2 MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP4 POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP3 POP ADD PUSH2 0x77A JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0xE0B PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 DUP2 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xE76 SWAP1 NUMBER PUSH2 0x1266 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEE5 JUMPI PUSH1 0x1 SLOAD PUSH2 0xE95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 PUSH2 0x1353 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 NUMBER PUSH1 0x1 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xF1D PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7E PUSH2 0x13A5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBCF JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1055 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1049 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 PUSH2 0xEEB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x10D2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x112D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x1137 DUP4 DUP4 PUSH2 0x13D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x677 DUP2 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1216 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1226 PUSH2 0xF46 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SWAP1 DUP2 PUSH2 0x1277 PUSH1 0x1 DUP4 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x128E JUMPI PUSH2 0x128E PUSH2 0x1A06 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP6 GT ISZERO PUSH2 0x1338 JUMPI DUP1 MLOAD PUSH0 SWAP1 PUSH2 0x12D3 SWAP1 DUP8 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x12EF SWAP1 DUP7 PUSH2 0x19AE JUMP JUMPDEST DUP3 MLOAD SWAP7 POP SWAP5 POP DUP7 DUP7 GT PUSH2 0x1328 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x130B DUP9 DUP9 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x131F SWAP1 DUP7 PUSH2 0x19AE JUMP JUMPDEST SWAP5 POP POP POP PUSH2 0x134B JUMP JUMPDEST DUP3 PUSH0 SUB PUSH2 0x1336 JUMPI POP POP PUSH2 0x134B JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x1343 DUP2 PUSH2 0x1A31 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x127A JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1137 SWAP1 DUP5 SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13DD DUP3 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1421 JUMPI PUSH2 0x1137 DUP3 DUP3 PUSH2 0x155E JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0x15D2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0B PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1482 PUSH2 0x1429 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x14AE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x14D2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1530 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x15C7 DUP6 DUP4 DUP4 PUSH2 0x1605 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x15FE DUP4 DUP4 PUSH0 PUSH2 0x1661 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x161A JUMPI PUSH2 0x1615 DUP3 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x15FE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1631 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x16A1 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16F0 DUP7 DUP4 DUP4 PUSH2 0x1605 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x170A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1771 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x178C JUMPI PUSH2 0x178C PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x17B4 JUMPI PUSH2 0x17B4 PUSH2 0x174E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x17CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1809 DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1819 DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1847 DUP8 DUP3 DUP9 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x186F DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x188A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1896 DUP6 DUP3 DUP7 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18BC DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x18EA DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x18FA DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x190A DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP5 SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1945 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x192D JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x196B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15FE DUP2 PUSH2 0x173A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CC PUSH2 0x199A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15FE DUP2 PUSH2 0x173A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CC PUSH2 0x199A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x15CC JUMPI PUSH2 0x15CC PUSH2 0x199A JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x1A3F JUMPI PUSH2 0x1A3F PUSH2 0x199A JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A56 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1A76 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCCD5ED15C6E187E77E9AEE8 DUP2 DUP5 0xC2 0x1F 0x4F 0x21 DUP3 0xAB PC 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220EFFD0E601BCB0DA7A00D76D994 MUL 0xAB DIV SUB MSIZE DUP1 ORIGIN 0xC SWAP15 MSTORE8 0xBE SWAP13 SLOAD SWAP2 CHAINID DUP6 PUSH22 0x46E064736F6C63430008180033000000000000000000 ",
                  "sourceMap": "862:8567:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5654:383;;;;;;;;;;-1:-1:-1;5654:383:18;;;;;:::i;:::-;;:::i;:::-;;8407:192;;;;;;;;;;-1:-1:-1;8407:192:18;;;;;:::i;:::-;;:::i;918:153:3:-;;;;;;;;;;-1:-1:-1;918:153:3;;;;;:::i;:::-;-1:-1:-1;;;918:153:3;;;;;;;;;;-1:-1:-1;;;;;;2022:33:19;;;2004:52;;1992:2;1977:18;918:153:3;;;;;;;;8781:198:18;;;;;;;;;;-1:-1:-1;8781:198:18;;;;;:::i;:::-;;:::i;1558:45::-;;;;;;;;;;-1:-1:-1;1558:45:18;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1558:45:18;;;;;;-1:-1:-1;;;;;2231:32:19;;;2213:51;;2201:2;2186:18;1558:45:18;2067:203:19;4571:307:18;;;;;;;;;;-1:-1:-1;4571:307:18;;;;;:::i;:::-;;:::i;5101:372::-;;;;;;;;;;-1:-1:-1;5101:372:18;;;;;:::i;:::-;;:::i;9270:65::-;;;;;;;;;;;;;:::i;1293:31::-;;;;;;;;;;;;;;;;;;;2421:25:19;;;2409:2;2394:18;1293:31:18;2275:177:19;1045:18:18;;;;;;;;;;-1:-1:-1;1045:18:18;;;;-1:-1:-1;;;;;1045:18:18;;;4158:214:2;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;1493:59:18:-;;;;;;;;;;-1:-1:-1;1493:59:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3896:25:19;;;3952:2;3937:18;;3930:34;;;;3980:18;;;3973:34;;;;4038:2;4023:18;;4016:34;4094:14;4087:22;4081:3;4066:19;;4059:51;3883:3;3868:19;1493:59:18;3643:473:19;2692:145:5;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:5;;;2692:145;;;4286:14:19;;4279:22;4261:41;;4249:2;4234:18;2692:145:5;4121:187:19;1257:30:18;;;;;;;;;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;2775:580:18:-;;;;;;;;;;-1:-1:-1;2775:580:18;;;;;:::i;:::-;;:::i;9093:61::-;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;9342:85:18;;;;;;;;;;-1:-1:-1;9416:4:18;9342:85;;7955:276;;;;;;;;;;-1:-1:-1;7955:276:18;;;;;:::i;:::-;;:::i;3778:629::-;;;;;;;;;;-1:-1:-1;3778:629:18;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;1219:31:18:-;;;;;;;;;;-1:-1:-1;1219:31:18;;;;;:::i;:::-;;:::i;:::-;;;;5884:25:19;;;5940:2;5925:18;;5918:34;;;;5857:18;1219:31:18;5710:248:19;3405:215:0;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;1069:25:18:-;;;;;;;;;;-1:-1:-1;1069:25:18;;;;-1:-1:-1;;;;;1069:25:18;;;1100:20;;;;;;;;;;-1:-1:-1;1100:20:18;;;;-1:-1:-1;;;;;1100:20:18;;;5654:383;5724:10;5717:18;;;;:6;:18;;;;;;;;:27;;;;;;;;:36;;;;;5712:61;;5762:11;;-1:-1:-1;;;5762:11:18;;;;;;;;;;;5712:61;5794:10;5787:18;;;;:6;:18;;;;;;;;:27;;;;;;;;:39;;;:44;5783:78;;5840:21;;-1:-1:-1;;;5840:21:18;;;;;;;;;;;5783:78;5939:16;;5900:10;5893:18;;;;:6;:18;;;;;;;;:27;;;;;;;;:43;;;:62;;5939:16;5893:62;:::i;:::-;5875:15;:80;5871:114;;;5964:21;;-1:-1:-1;;;5964:21:18;;;;;;;;;;;5871:114;5996:34;6010:10;6022:7;5996:13;:34::i;:::-;5654:383;:::o;8407:192::-;2334:13:0;:11;:13::i;:::-;8494:16:18::1;8514:1;8494:21:::0;8490:58:::1;;8524:24;;-1:-1:-1::0;;;8524:24:18::1;;;;;;;;;;;8490:58;8558:15;:34:::0;8407:192::o;8781:198::-;2334:13:0;:11;:13::i;:::-;8870:17:18::1;8891:1;8870:22:::0;8866:60:::1;;8901:25;;-1:-1:-1::0;;;8901:25:18::1;;;;;;;;;;;8866:60;8936:16;:36:::0;8781:198::o;4571:307::-;2316:19:5;:17;:19::i;:::-;4650:10:18::1;4643:18;::::0;;;:6:::1;:18;::::0;;;;;;;:27;;;;;;;;:36:::1;;::::0;::::1;;4638:61;;4688:11;;-1:-1:-1::0;;;4688:11:18::1;;;;;;;;;;;4638:61;4710:34;4724:10;4736:7;4710:13;:34::i;:::-;4812:15;::::0;4797:30:::1;::::0;:12:::1;:30;:::i;:::-;4762:10;4755:18;::::0;;;:6:::1;:18;::::0;;;;;;;:27;;;;;;;;;:39:::1;;:72:::0;;;;4842:29;2421:25:19;;;4762:10:18;;4842:29:::1;::::0;2394:18:19;4842:29:18::1;;;;;;;;4571:307:::0;:::o;5101:372::-;5167:10;5160:18;;;;:6;:18;;;;;;;;:27;;;;;;;;:36;;;;;5155:61;;5205:11;;-1:-1:-1;;;5205:11:18;;;;;;;;;;;5155:61;5252:10;5245:18;;;;:6;:18;;;;;;;;:27;;;;;;;;:39;;;5230:12;:54;5226:93;;;5293:26;;-1:-1:-1;;;5293:26:18;;;;;;;;;;;5226:93;5330:3;;:56;;-1:-1:-1;;;5330:56:18;;5359:4;5330:56;;;6940:34:19;5366:10:18;6990:18:19;;;6983:43;7042:18;;;7035:34;;;-1:-1:-1;;;;;5330:3:18;;;;:20;;6875:18:19;;5330:56:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5410:10:18;5403:18;;;;:6;:18;;;;;;;;:27;;;;;;;;;5396:34;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5396:34:18;;;5447:10;:19;;;;;;5440:26;;-1:-1:-1;;;;;;5440:26:18;;;-1:-1:-1;;5101:372:18:o;9270:65::-;2334:13:0;:11;:13::i;:::-;9318:10:18::1;:8;:10::i;:::-;9270:65::o:0;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;2775:580:18:-:0;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;3008:24:18::1;:22;:24::i;:::-;3042:22;3057:6;3042:14;:22::i;:::-;3074:17;:15;:17::i;:::-;3102:5;:14:::0;;-1:-1:-1;;;;;3102:14:18;;::::1;-1:-1:-1::0;;;;;;3102:14:18;;::::1;;::::0;;:5:::1;3126:19:::0;;;;::::1;::::0;;::::1;;::::0;;3102:14;3155:34;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3216:41:::1;::::0;;;;::::1;::::0;;;3227:12:::1;3216:41:::0;;::::1;::::0;::::1;::::0;;;3199:11:::1;:59:::0;;;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;3268:15:::1;:34:::0;;;3312:16:::1;:36:::0;;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;7233:50:19;;5142:14:1;;7221:2:19;7206:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2775:580:18;;;;;;:::o;9093:61::-;2334:13:0;:11;:13::i;:::-;9139:8:18::1;:6;:8::i;7955:276::-:0;2334:13:0;:11;:13::i;:::-;8039:15:18::1;8058:1;8039:20:::0;8035:56:::1;;8068:23;;-1:-1:-1::0;;;8068:23:18::1;;;;;;;;;;;8035:56;8119:41;::::0;;;;::::1;::::0;;8130:12:::1;8119:41:::0;;;::::1;::::0;;::::1;::::0;;;8102:11:::1;:59:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;8102:59:18;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;8176:48;;5884:25:19;;;5925:18;;;5918:34;;;8176:48:18::1;::::0;5857:18:19;8176:48:18::1;;;;;;;;7955:276:::0;:::o;3778:629::-;2316:19:5;:17;:19::i;:::-;3854:10:18::1;3847:18;::::0;;;:6:::1;:18;::::0;;;;;;;:27;;;;;;;;:36:::1;;::::0;::::1;;3843:64;;;3892:15;;-1:-1:-1::0;;;3892:15:18::1;;;;;;;;;;;3843:64;3921:3;::::0;:20:::1;::::0;-1:-1:-1;;;3921:20:18;;::::1;::::0;::::1;2421:25:19::0;;;3945:10:18::1;::::0;-1:-1:-1;;;;;3921:3:18::1;::::0;:11:::1;::::0;2394:18:19;;3921:20:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3921:34:18::1;;3917:62;;3964:15;;-1:-1:-1::0;;;3964:15:18::1;;;;;;;;;;;3917:62;3990:34;4004:10;4016:7;3990:13;:34::i;:::-;4035:3;::::0;:56:::1;::::0;-1:-1:-1;;;4035:56:18;;4056:10:::1;4035:56;::::0;::::1;6940:34:19::0;4076:4:18::1;6990:18:19::0;;;6983:43;7042:18;;;7035:34;;;-1:-1:-1;;;;;4035:3:18;;::::1;::::0;:20:::1;::::0;6875:18:19;;4035:56:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4131:185:18::1;::::0;;::::1;::::0;::::1;::::0;;;;;4191:12:::1;4131:185;::::0;;::::1;::::0;;;-1:-1:-1;4131:185:18;;;;;;4262:15:::1;4131:185:::0;;;;;;4301:4:::1;4131:185:::0;;;;;;4108:10:::1;4101:18:::0;;;:6:::1;:18:::0;;;;;:27;;;;;;;;:215;;;;;;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;4101:215:18::1;::::0;::::1;;::::0;;;::::1;::::0;;;4326:10:::1;:19:::0;;;;;;:32;;-1:-1:-1;;;;;;4326:32:18::1;::::0;::::1;::::0;;4373:27;;2421:25:19;;;4108:10:18;;-1:-1:-1;4373:27:18::1;::::0;-1:-1:-1;2394:18:19;4373:27:18::1;2275:177:19::0;1219:31:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1219:31:18;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;2213:51:19::0;2186:18;;3534:31:0::1;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;6217:447:18:-:0;-1:-1:-1;;;;;6316:12:18;;6290:23;6316:12;;;:6;:12;;;;;;;;:21;;;;;;;;6383:18;;;;6316:21;;6290:23;6365:51;;6403:12;6365:17;:51::i;:::-;6347:69;-1:-1:-1;6430:11:18;;6426:232;;6457:11;;:39;;-1:-1:-1;;;;;6457:11:18;6482:4;6488:7;6457:24;:39::i;:::-;6529:4;-1:-1:-1;;;;;6515:28:18;;6535:7;6515:28;;;;2421:25:19;;2409:2;2394:18;;2275:177;6515:28:18;;;;;;;;6578:12;6557:18;;;:33;6632:15;6604:25;;;:43;6426:232;6280:384;;6217:447;;:::o;2658:162:0:-;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:4;2763:40:0;;;2213:51:19;2186:18;;2763:40:0;2067:203:19;2905:128:5;-1:-1:-1;;;;;;;;;;;2821:9:5;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:5;;;;;;;;;;;3674:178;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:5;;-1:-1:-1;;3791:17:5::1;::::0;;3823:22:::1;966:10:4::0;3832:12:5::1;3823:22;::::0;-1:-1:-1;;;;;2231:32:19;;;2213:51;;2201:2;2186:18;3823:22:5::1;2067:203:19::0;4599:312:2;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:7;-1:-1:-1;;;;;2035:53:7;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;3513:84:18;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;2231:32:19;;6513:60:2;;;2213:51:19;2186:18;;6513:60:2;2067:203:19;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;2421:25:19;;;2394:18;;6312:34:2;2275:177:19;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2968:67:2:-;6931:20:1;:18;:20::i;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;1836:97:5:-:0;6931:20:1;:18;:20::i;:::-;1899:27:5::1;:25;:27::i;3366:176::-:0;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:5;;-1:-1:-1;;3484:16:5::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:4::0;3522:12:5::1;887:96:4::0;7009:710:18;7143:11;:18;7097:20;;;7188:7;7194:1;7143:18;7188:7;:::i;:::-;7176:19;;7171:542;7224:22;7249:11;7261:1;7249:14;;;;;;;;:::i;:::-;;;;;;;;;;;7224:39;;;;;;;;;;;;;;;;;;;;;;;;;;;7292:4;:16;;;7281:8;:27;7277:426;;;7356:16;;7328:14;;7345:27;;:8;:27;:::i;:::-;7328:44;;7415:4;:19;;;7406:6;:28;;;;:::i;:::-;7390:44;;;;:::i;:::-;7463:16;;;-1:-1:-1;7390:44:18;-1:-1:-1;7501:22:18;;;7497:157;;7589:19;;;;7564:21;7575:10;7564:8;:21;:::i;:::-;7563:45;;;;:::i;:::-;7547:61;;;;:::i;:::-;;;7630:5;;;;7497:157;7675:1;7680;7675:6;7671:17;;7683:5;;;;7671:17;7310:393;7277:426;-1:-1:-1;7205:3:18;;;;:::i;:::-;;;;7171:542;;;;7119:600;7009:710;;;;:::o;1303:160:11:-;1412:43;;;-1:-1:-1;;;;;8510:32:19;;1412:43:11;;;8492:51:19;8559:18;;;;8552:34;;;1412:43:11;;;;;;;;;;8465:18:19;;;;1412:43:11;;;;;;;;-1:-1:-1;;;;;1412:43:11;-1:-1:-1;;;1412:43:11;;;1385:71;;1405:5;;1385:19;:71::i;3105:126:5:-;-1:-1:-1;;;;;;;;;;;2821:9:5;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:5;;;;;;;;;;;2779:335:7;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:7;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;1939:156:5:-;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:5;;-1:-1:-1;;2071:17:5::1;::::0;;1939:156::o;4059:629:11:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:11;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:11;;-1:-1:-1;;;;;2231:32:19;;4631:40:11;;;2213:51:19;2186:18;;4631:40:11;2067:203:19;2186:281:7;2263:17;-1:-1:-1;;;;;2263:29:7;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:7;;-1:-1:-1;;;;;2231:32:19;;2320:47:7;;;2213:51:19;2186:18;;2320:47:7;2067:203:19;2259:119:7;-1:-1:-1;;;;;;;;;;;2387:73:7;;-1:-1:-1;;;;;;2387:73:7;-1:-1:-1;;;;;2387:73:7;;;;;;;;;;2186:281::o;4106:253:14:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:14;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;;:::o;6598:122:7:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:7;;;;;;;;;;;2705:151:14;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;2705:151;-1:-1:-1;;;2705:151:14:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:14;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:14;;-1:-1:-1;;;;;2231:32:19;;5121:24:14;;;2213:51:19;2186:18;;5121:24:14;2067:203:19;5041:119:14;-1:-1:-1;5180:10:14;4625:582;-1:-1:-1;;4625:582:14:o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:14;;3394:4;3359:41;;;2213:51:19;2186:18;;3359:41:14;2067:203:19;3303:108:14;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:14;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:14:o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:14;;;;;;;;;;;14:180:19;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:19;;14:180;-1:-1:-1;14:180:19:o;199:131::-;-1:-1:-1;;;;;274:31:19;;264:42;;254:70;;320:1;317;310:12;335:127;396:10;391:3;387:20;384:1;377:31;427:4;424:1;417:15;451:4;448:1;441:15;467:718;509:5;562:3;555:4;547:6;543:17;539:27;529:55;;580:1;577;570:12;529:55;616:6;603:20;642:18;679:2;675;672:10;669:36;;;685:18;;:::i;:::-;760:2;754:9;728:2;814:13;;-1:-1:-1;;810:22:19;;;834:2;806:31;802:40;790:53;;;858:18;;;878:22;;;855:46;852:72;;;904:18;;:::i;:::-;944:10;940:2;933:22;979:2;971:6;964:18;1025:3;1018:4;1013:2;1005:6;1001:15;997:26;994:35;991:55;;;1042:1;1039;1032:12;991:55;1106:2;1099:4;1091:6;1087:17;1080:4;1072:6;1068:17;1055:54;1153:1;1146:4;1141:2;1133:6;1129:15;1125:26;1118:37;1173:6;1164:15;;;;;;467:718;;;;:::o;1190:665::-;1285:6;1293;1301;1309;1362:3;1350:9;1341:7;1337:23;1333:33;1330:53;;;1379:1;1376;1369:12;1330:53;1418:9;1405:23;1437:31;1462:5;1437:31;:::i;:::-;1487:5;-1:-1:-1;1544:2:19;1529:18;;1516:32;1557:33;1516:32;1557:33;:::i;:::-;1609:7;-1:-1:-1;1663:2:19;1648:18;;1635:32;;-1:-1:-1;1718:2:19;1703:18;;1690:32;1745:18;1734:30;;1731:50;;;1777:1;1774;1767:12;1731:50;1800:49;1841:7;1832:6;1821:9;1817:22;1800:49;:::i;:::-;1790:59;;;1190:665;;;;;;;:::o;2681:455::-;2758:6;2766;2819:2;2807:9;2798:7;2794:23;2790:32;2787:52;;;2835:1;2832;2825:12;2787:52;2874:9;2861:23;2893:31;2918:5;2893:31;:::i;:::-;2943:5;-1:-1:-1;2999:2:19;2984:18;;2971:32;3026:18;3015:30;;3012:50;;;3058:1;3055;3048:12;3012:50;3081:49;3122:7;3113:6;3102:9;3098:22;3081:49;:::i;:::-;3071:59;;;2681:455;;;;;:::o;3323:315::-;3391:6;3399;3452:2;3440:9;3431:7;3427:23;3423:32;3420:52;;;3468:1;3465;3458:12;3420:52;3507:9;3494:23;3526:31;3551:5;3526:31;:::i;:::-;3576:5;3628:2;3613:18;;;;3600:32;;-1:-1:-1;;;3323:315:19:o;4313:736::-;4417:6;4425;4433;4441;4449;4457;4510:3;4498:9;4489:7;4485:23;4481:33;4478:53;;;4527:1;4524;4517:12;4478:53;4566:9;4553:23;4585:31;4610:5;4585:31;:::i;:::-;4635:5;-1:-1:-1;4692:2:19;4677:18;;4664:32;4705:33;4664:32;4705:33;:::i;:::-;4757:7;-1:-1:-1;4816:2:19;4801:18;;4788:32;4829:33;4788:32;4829:33;:::i;:::-;4313:736;;;;-1:-1:-1;4881:7:19;;4935:2;4920:18;;4907:32;;-1:-1:-1;4986:3:19;4971:19;;4958:33;;5038:3;5023:19;;;5010:33;;-1:-1:-1;4313:736:19;-1:-1:-1;;4313:736:19:o;5054:250::-;5139:1;5149:113;5163:6;5160:1;5157:13;5149:113;;;5239:11;;;5233:18;5220:11;;;5213:39;5185:2;5178:10;5149:113;;;-1:-1:-1;;5296:1:19;5278:16;;5271:27;5054:250::o;5309:396::-;5458:2;5447:9;5440:21;5421:4;5490:6;5484:13;5533:6;5528:2;5517:9;5513:18;5506:34;5549:79;5621:6;5616:2;5605:9;5601:18;5596:2;5588:6;5584:15;5549:79;:::i;:::-;5689:2;5668:15;-1:-1:-1;;5664:29:19;5649:45;;;;5696:2;5645:54;;5309:396;-1:-1:-1;;5309:396:19:o;5963:247::-;6022:6;6075:2;6063:9;6054:7;6050:23;6046:32;6043:52;;;6091:1;6088;6081:12;6043:52;6130:9;6117:23;6149:31;6174:5;6149:31;:::i;6438:127::-;6499:10;6494:3;6490:20;6487:1;6480:31;6530:4;6527:1;6520:15;6554:4;6551:1;6544:15;6570:125;6635:9;;;6656:10;;;6653:36;;;6669:18;;:::i;7294:251::-;7364:6;7417:2;7405:9;7396:7;7392:23;7388:32;7385:52;;;7433:1;7430;7423:12;7385:52;7465:9;7459:16;7484:31;7509:5;7484:31;:::i;7550:184::-;7620:6;7673:2;7661:9;7652:7;7648:23;7644:32;7641:52;;;7689:1;7686;7679:12;7641:52;-1:-1:-1;7712:16:19;;7550:184;-1:-1:-1;7550:184:19:o;7739:128::-;7806:9;;;7827:11;;;7824:37;;;7841:18;;:::i;7872:127::-;7933:10;7928:3;7924:20;7921:1;7914:31;7964:4;7961:1;7954:15;7988:4;7985:1;7978:15;8004:168;8077:9;;;8108;;8125:15;;;8119:22;;8105:37;8095:71;;8146:18;;:::i;8177:136::-;8216:3;8244:5;8234:39;;8253:18;;:::i;:::-;-1:-1:-1;;;8289:18:19;;8177:136::o;8597:277::-;8664:6;8717:2;8705:9;8696:7;8692:23;8688:32;8685:52;;;8733:1;8730;8723:12;8685:52;8765:9;8759:16;8818:5;8811:13;8804:21;8797:5;8794:32;8784:60;;8840:1;8837;8830:12;8879:287;9008:3;9046:6;9040:13;9062:66;9121:6;9116:3;9109:4;9101:6;9097:17;9062:66;:::i;:::-;9144:16;;;;;8879:287;-1:-1:-1;;8879:287:19:o"
                },
                "gasEstimates": {
                  "creation": {
                    "codeDepositCost": "1380400",
                    "executionCost": "infinite",
                    "totalCost": "infinite"
                  },
                  "external": {
                    "UPGRADE_INTERFACE_VERSION()": "infinite",
                    "admin()": "2446",
                    "checkUpgradebility()": "308",
                    "claimRewards(uint256)": "infinite",
                    "initialize(address,address,address,uint256,uint256,uint256)": "infinite",
                    "nft()": "2380",
                    "onERC721Received(address,address,uint256,bytes)": "infinite",
                    "owner()": "2419",
                    "pause()": "infinite",
                    "paused()": "infinite",
                    "proxiableUUID()": "infinite",
                    "renounceOwnership()": "infinite",
                    "rewardClaimDelay()": "2384",
                    "rewardRates(uint256)": "6772",
                    "rewardToken()": "2424",
                    "setRewardClaimDelay(uint256)": "24631",
                    "setUnbondingPeriod(uint256)": "24587",
                    "stake(uint256)": "infinite",
                    "stakes(address,uint256)": "11270",
                    "tokenOwner(uint256)": "2586",
                    "transferOwnership(address)": "infinite",
                    "unbondingPeriod()": "2362",
                    "unpause()": "infinite",
                    "unstake(uint256)": "infinite",
                    "updateRewardRate(uint256)": "72367",
                    "upgradeToAndCall(address,bytes)": "infinite",
                    "withdraw(uint256)": "infinite"
                  },
                  "internal": {
                    "_authorizeUpgrade(address)": "infinite",
                    "_calculateRewards(uint256,uint256)": "infinite",
                    "_claimRewards(address,uint256)": "infinite"
                  }
                },
                "legacyAssembly": {
                  ".code": [
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH",
                      "source": 18,
                      "value": "A0"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH",
                      "source": 18,
                      "value": "40"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "MSTORE",
                      "source": 18
                    },
                    {
                      "begin": 1171,
                      "end": 1175,
                      "name": "ADDRESS",
                      "source": 2
                    },
                    {
                      "begin": 1128,
                      "end": 1176,
                      "name": "PUSH",
                      "source": 2,
                      "value": "80"
                    },
                    {
                      "begin": 1128,
                      "end": 1176,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "CALLVALUE",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "DUP1",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "ISZERO",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH [tag]",
                      "source": 18,
                      "value": "1"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "JUMPI",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH",
                      "source": 18,
                      "value": "0"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "DUP1",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "REVERT",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "tag",
                      "source": 18,
                      "value": "1"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "JUMPDEST",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "POP",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH",
                      "source": 18,
                      "value": "80"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "MLOAD",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH #[$]",
                      "source": 18,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH [$]",
                      "source": 18,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH",
                      "source": 18,
                      "value": "0"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "CODECOPY",
                      "source": 18
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH",
                      "source": 18,
                      "value": "0"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "ASSIGNIMMUTABLE",
                      "source": 18,
                      "value": "468"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH #[$]",
                      "source": 18,
                      "value": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "PUSH",
                      "source": 18,
                      "value": "0"
                    },
                    {
                      "begin": 862,
                      "end": 9429,
                      "name": "RETURN",
                      "source": 18
                    }
                  ],
                  ".data": {
                    "0": {
                      ".auxdata": "a2646970667358221220effd0e601bcb0da7a00d76d99402ab04035980320c9e53be9c549146857546e064736f6c63430008180033",
                      ".code": [
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "80"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "LT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "CALLDATALOAD",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "E0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "SHR",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "5C975ABB"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "29"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "9EF3A261"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "30"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "F2CAEB1E"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "31"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "F2CAEB1E"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "25"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "F2FDE38B"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "26"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "F7C618C1"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "27"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "F851A440"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "28"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "tag",
                          "source": 18,
                          "value": "31"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "9EF3A261"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "22"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "A694FC3A"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "23"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "AD3CB1CC"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "24"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "tag",
                          "source": 18,
                          "value": "30"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "728CDBCA"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "32"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "728CDBCA"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "18"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "8456CB59"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "19"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "8DA5CB5B"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "8DD0CDF3"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "21"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "tag",
                          "source": 18,
                          "value": "32"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "5C975ABB"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "15"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6CF6D675"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "16"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "715018A6"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "17"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "tag",
                          "source": 18,
                          "value": "29"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2E1A7D4D"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "33"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "47CCCA02"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "34"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "47CCCA02"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "11"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4F1EF286"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "12"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "52D1902D"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "13"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "584B62A1"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "14"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "tag",
                          "source": 18,
                          "value": "34"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2E1A7D4D"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "8"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3F4BA83A"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "9"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "46582583"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "10"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "tag",
                          "source": 18,
                          "value": "33"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "962EF79"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "114EAF55"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "150B7A02"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "197916B4"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "5"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1CAAA487"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2E17DE78"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "7"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "tag",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 862,
                          "end": 9429,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "tag",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "35"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "tag",
                          "source": 18,
                          "value": "35"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "37"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "tag",
                          "source": 18,
                          "value": "37"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "39"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "tag",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "STOP",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "tag",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "tag",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "42"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "tag",
                          "source": 18,
                          "value": "42"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "43"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "tag",
                          "source": 3,
                          "value": "4"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "JUMPDEST",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "CALLVALUE",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "DUP1",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "ISZERO",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH [tag]",
                          "source": 3,
                          "value": "44"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "JUMPI",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH",
                          "source": 3,
                          "value": "0"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "DUP1",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "REVERT",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "tag",
                          "source": 3,
                          "value": "44"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "JUMPDEST",
                          "source": 3
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH [tag]",
                          "source": 3,
                          "value": "45"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH [tag]",
                          "source": 3,
                          "value": "46"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "CALLDATASIZE",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH",
                          "source": 3,
                          "value": "4"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH [tag]",
                          "source": 3,
                          "value": "47"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "tag",
                          "source": 3,
                          "value": "46"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "JUMPDEST",
                          "source": 3
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A85BD01"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "SWAP5",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "SWAP4",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "POP",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "POP",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "POP",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "POP",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "JUMP",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "tag",
                          "source": 3,
                          "value": "45"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "JUMPDEST",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH",
                          "source": 3,
                          "value": "40"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "MLOAD",
                          "source": 3
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 2022,
                          "end": 2055,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2022,
                          "end": 2055,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 2022,
                          "end": 2055,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 2004,
                          "end": 2056,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2004,
                          "end": 2056,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 1992,
                          "end": 1994,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 1977,
                          "end": 1995,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "tag",
                          "source": 3,
                          "value": "49"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "JUMPDEST",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "PUSH",
                          "source": 3,
                          "value": "40"
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "MLOAD",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "DUP1",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "SWAP2",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "SUB",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "SWAP1",
                          "source": 3
                        },
                        {
                          "begin": 918,
                          "end": 1071,
                          "name": "RETURN",
                          "source": 3
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "tag",
                          "source": 18,
                          "value": "5"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "51"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "tag",
                          "source": 18,
                          "value": "51"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "53"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "tag",
                          "source": 18,
                          "value": "53"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "54"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "tag",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "55"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "tag",
                          "source": 18,
                          "value": "55"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "56"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "57"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "tag",
                          "source": 18,
                          "value": "57"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH",
                          "source": 18,
                          "value": "7"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "tag",
                          "source": 18,
                          "value": "56"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2201,
                          "end": 2203,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1558,
                          "end": 1603,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "49"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "tag",
                          "source": 18,
                          "value": "7"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "61"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "tag",
                          "source": 18,
                          "value": "61"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "63"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "tag",
                          "source": 18,
                          "value": "63"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "64"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "tag",
                          "source": 18,
                          "value": "8"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "65"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "tag",
                          "source": 18,
                          "value": "65"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "67"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "tag",
                          "source": 18,
                          "value": "67"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "68"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "tag",
                          "source": 18,
                          "value": "9"
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "69"
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "tag",
                          "source": 18,
                          "value": "69"
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "71"
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "tag",
                          "source": 18,
                          "value": "10"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "72"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "tag",
                          "source": 18,
                          "value": "72"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "73"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "PUSH",
                          "source": 18,
                          "value": "5"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "tag",
                          "source": 18,
                          "value": "73"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2409,
                          "end": 2411,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1293,
                          "end": 1324,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "49"
                        },
                        {
                          "begin": 2275,
                          "end": 2452,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "tag",
                          "source": 18,
                          "value": "11"
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "77"
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "tag",
                          "source": 18,
                          "value": "77"
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "56"
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1045,
                          "end": 1063,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "tag",
                          "source": 2,
                          "value": "12"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "36"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "83"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "CALLDATASIZE",
                          "source": 2
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "PUSH",
                          "source": 2,
                          "value": "4"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "84"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "tag",
                          "source": 2,
                          "value": "83"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "85"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "tag",
                          "source": 2,
                          "value": "13"
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "CALLVALUE",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "ISZERO",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "86"
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "PUSH",
                          "source": 2,
                          "value": "0"
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "REVERT",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "tag",
                          "source": 2,
                          "value": "86"
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "73"
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "88"
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "tag",
                          "source": 18,
                          "value": "14"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "91"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "tag",
                          "source": 18,
                          "value": "91"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "92"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "93"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "94"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "tag",
                          "source": 18,
                          "value": "93"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "FF"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "tag",
                          "source": 18,
                          "value": "92"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3896,
                          "end": 3921,
                          "name": "SWAP6",
                          "source": 19
                        },
                        {
                          "begin": 3896,
                          "end": 3921,
                          "name": "DUP7",
                          "source": 19
                        },
                        {
                          "begin": 3896,
                          "end": 3921,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 3952,
                          "end": 3954,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 3937,
                          "end": 3955,
                          "name": "DUP7",
                          "source": 19
                        },
                        {
                          "begin": 3937,
                          "end": 3955,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3930,
                          "end": 3964,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 3930,
                          "end": 3964,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 3930,
                          "end": 3964,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 3930,
                          "end": 3964,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 3980,
                          "end": 3998,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 3980,
                          "end": 3998,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 3980,
                          "end": 3998,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3973,
                          "end": 4007,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 3973,
                          "end": 4007,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 3973,
                          "end": 4007,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 3973,
                          "end": 4007,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 4038,
                          "end": 4040,
                          "name": "PUSH",
                          "source": 19,
                          "value": "60"
                        },
                        {
                          "begin": 4023,
                          "end": 4041,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 4023,
                          "end": 4041,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4016,
                          "end": 4050,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 4094,
                          "end": 4108,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 4087,
                          "end": 4109,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 4081,
                          "end": 4084,
                          "name": "PUSH",
                          "source": 19,
                          "value": "80"
                        },
                        {
                          "begin": 4066,
                          "end": 4085,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 4066,
                          "end": 4085,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4059,
                          "end": 4110,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 3883,
                          "end": 3886,
                          "name": "PUSH",
                          "source": 19,
                          "value": "A0"
                        },
                        {
                          "begin": 3868,
                          "end": 3887,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1493,
                          "end": 1552,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "49"
                        },
                        {
                          "begin": 3643,
                          "end": 4116,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "tag",
                          "source": 5,
                          "value": "15"
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "CALLVALUE",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "DUP1",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "ISZERO",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "98"
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "JUMPI",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "PUSH",
                          "source": 5,
                          "value": "0"
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "DUP1",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "REVERT",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "tag",
                          "source": 5,
                          "value": "98"
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "SLOAD",
                          "source": 5
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "PUSH",
                          "source": 5,
                          "value": "FF"
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "AND",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "tag",
                          "source": 5,
                          "value": "99"
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "PUSH",
                          "source": 5,
                          "value": "40"
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "MLOAD",
                          "source": 5
                        },
                        {
                          "begin": 4286,
                          "end": 4300,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 4286,
                          "end": 4300,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 4279,
                          "end": 4301,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 4261,
                          "end": 4302,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 4261,
                          "end": 4302,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 4249,
                          "end": 4251,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 4234,
                          "end": 4252,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 2692,
                          "end": 2837,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "49"
                        },
                        {
                          "begin": 4121,
                          "end": 4308,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "tag",
                          "source": 18,
                          "value": "16"
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "103"
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "tag",
                          "source": 18,
                          "value": "103"
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "73"
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1257,
                          "end": 1287,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "tag",
                          "source": 0,
                          "value": "17"
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "CALLVALUE",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "ISZERO",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "107"
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "JUMPI",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "PUSH",
                          "source": 0,
                          "value": "0"
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "REVERT",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "tag",
                          "source": 0,
                          "value": "107"
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "POP",
                          "source": 0
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "36"
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "109"
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "tag",
                          "source": 18,
                          "value": "18"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "110"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "tag",
                          "source": 18,
                          "value": "110"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "112"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "113"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "tag",
                          "source": 18,
                          "value": "112"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "114"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "tag",
                          "source": 18,
                          "value": "19"
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "115"
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "tag",
                          "source": 18,
                          "value": "115"
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "117"
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "tag",
                          "source": 0,
                          "value": "20"
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "CALLVALUE",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "ISZERO",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "118"
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "JUMPI",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "PUSH",
                          "source": 0,
                          "value": "0"
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "REVERT",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "tag",
                          "source": 0,
                          "value": "118"
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1313,
                          "end": 1335,
                          "name": "PUSH",
                          "source": 0,
                          "value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
                        },
                        {
                          "begin": 2570,
                          "end": 2578,
                          "name": "SLOAD",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2570,
                          "end": 2578,
                          "name": "AND",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "56"
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "tag",
                          "source": 18,
                          "value": "21"
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "122"
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "tag",
                          "source": 18,
                          "value": "122"
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 9416,
                          "end": 9420,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "99"
                        },
                        {
                          "begin": 9342,
                          "end": 9427,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "tag",
                          "source": 18,
                          "value": "22"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "126"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "tag",
                          "source": 18,
                          "value": "126"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "128"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "tag",
                          "source": 18,
                          "value": "128"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "129"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "tag",
                          "source": 18,
                          "value": "23"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "130"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "tag",
                          "source": 18,
                          "value": "130"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "36"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "132"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "tag",
                          "source": 18,
                          "value": "132"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "133"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "tag",
                          "source": 2,
                          "value": "24"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "CALLVALUE",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "ISZERO",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "134"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH",
                          "source": 2,
                          "value": "0"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "REVERT",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "tag",
                          "source": 2,
                          "value": "134"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "135"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH",
                          "source": 2,
                          "value": "5"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH",
                          "source": 2,
                          "value": "20"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "352E302E3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "DC"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "tag",
                          "source": 2,
                          "value": "135"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "49"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "SWAP2",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "SWAP1",
                          "source": 2
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "138"
                        },
                        {
                          "begin": 1819,
                          "end": 1877,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "tag",
                          "source": 18,
                          "value": "25"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "139"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "tag",
                          "source": 18,
                          "value": "139"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "140"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "141"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "CALLDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "38"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "tag",
                          "source": 18,
                          "value": "141"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "142"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "tag",
                          "source": 18,
                          "value": "140"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5884,
                          "end": 5909,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 5884,
                          "end": 5909,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 5884,
                          "end": 5909,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5940,
                          "end": 5942,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 5925,
                          "end": 5943,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 5925,
                          "end": 5943,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5918,
                          "end": 5952,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 5918,
                          "end": 5952,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 5918,
                          "end": 5952,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 5918,
                          "end": 5952,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5857,
                          "end": 5875,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "49"
                        },
                        {
                          "begin": 5710,
                          "end": 5958,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "tag",
                          "source": 0,
                          "value": "26"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "CALLVALUE",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "ISZERO",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "145"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "JUMPI",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "PUSH",
                          "source": 0,
                          "value": "0"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "REVERT",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "tag",
                          "source": 0,
                          "value": "145"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "36"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "147"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "CALLDATASIZE",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "PUSH",
                          "source": 0,
                          "value": "4"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "148"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "tag",
                          "source": 0,
                          "value": "147"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "149"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "tag",
                          "source": 18,
                          "value": "27"
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "150"
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "tag",
                          "source": 18,
                          "value": "150"
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "56"
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1069,
                          "end": 1094,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "tag",
                          "source": 18,
                          "value": "28"
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "CALLVALUE",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "155"
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "tag",
                          "source": 18,
                          "value": "155"
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "56"
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1100,
                          "end": 1120,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "tag",
                          "source": 18,
                          "value": "39"
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5724,
                          "end": 5734,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5723,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5735,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5744,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5753,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5717,
                          "end": 5753,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5753,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5717,
                          "end": 5753,
                          "name": "PUSH",
                          "source": 18,
                          "value": "FF"
                        },
                        {
                          "begin": 5717,
                          "end": 5753,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 5712,
                          "end": 5773,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "160"
                        },
                        {
                          "begin": 5712,
                          "end": 5773,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "73E5C3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5762,
                          "end": 5773,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5712,
                          "end": 5773,
                          "name": "tag",
                          "source": 18,
                          "value": "160"
                        },
                        {
                          "begin": 5712,
                          "end": 5773,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5794,
                          "end": 5804,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5793,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5805,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5814,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5826,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 5787,
                          "end": 5826,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5826,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5787,
                          "end": 5831,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5783,
                          "end": 5861,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "161"
                        },
                        {
                          "begin": 5783,
                          "end": 5861,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "58AE518B"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5840,
                          "end": 5861,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5783,
                          "end": 5861,
                          "name": "tag",
                          "source": 18,
                          "value": "161"
                        },
                        {
                          "begin": 5783,
                          "end": 5861,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5939,
                          "end": 5955,
                          "name": "PUSH",
                          "source": 18,
                          "value": "5"
                        },
                        {
                          "begin": 5939,
                          "end": 5955,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5900,
                          "end": 5910,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5899,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5911,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5920,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5936,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 5893,
                          "end": 5936,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5936,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5955,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "162"
                        },
                        {
                          "begin": 5893,
                          "end": 5955,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5939,
                          "end": 5955,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5955,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "163"
                        },
                        {
                          "begin": 5893,
                          "end": 5955,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5893,
                          "end": 5955,
                          "name": "tag",
                          "source": 18,
                          "value": "162"
                        },
                        {
                          "begin": 5893,
                          "end": 5955,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5875,
                          "end": 5890,
                          "name": "TIMESTAMP",
                          "source": 18
                        },
                        {
                          "begin": 5875,
                          "end": 5955,
                          "name": "LT",
                          "source": 18
                        },
                        {
                          "begin": 5871,
                          "end": 5985,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5871,
                          "end": 5985,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "164"
                        },
                        {
                          "begin": 5871,
                          "end": 5985,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "58AE518B"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5964,
                          "end": 5985,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5871,
                          "end": 5985,
                          "name": "tag",
                          "source": 18,
                          "value": "164"
                        },
                        {
                          "begin": 5871,
                          "end": 5985,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5996,
                          "end": 6030,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "165"
                        },
                        {
                          "begin": 6010,
                          "end": 6020,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 6022,
                          "end": 6029,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 5996,
                          "end": 6009,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "166"
                        },
                        {
                          "begin": 5996,
                          "end": 6030,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5996,
                          "end": 6030,
                          "name": "tag",
                          "source": 18,
                          "value": "165"
                        },
                        {
                          "begin": 5996,
                          "end": 6030,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 5654,
                          "end": 6037,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "tag",
                          "source": 18,
                          "value": "43"
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "168"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "tag",
                          "source": 0,
                          "value": "168"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 8494,
                          "end": 8510,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8514,
                          "end": 8515,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 8494,
                          "end": 8515,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 8490,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "171"
                        },
                        {
                          "begin": 8490,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "27A6B43"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E6"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8524,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 8490,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "171"
                        },
                        {
                          "begin": 8490,
                          "end": 8548,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8558,
                          "end": 8573,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 8558,
                          "end": 8592,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8407,
                          "end": 8599,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "tag",
                          "source": 18,
                          "value": "54"
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "174"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "tag",
                          "source": 0,
                          "value": "174"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 8870,
                          "end": 8887,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8891,
                          "end": 8892,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 8870,
                          "end": 8892,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 8866,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "176"
                        },
                        {
                          "begin": 8866,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "5958C647"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8901,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 8866,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "176"
                        },
                        {
                          "begin": 8866,
                          "end": 8926,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8936,
                          "end": 8952,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "5"
                        },
                        {
                          "begin": 8936,
                          "end": 8972,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8781,
                          "end": 8979,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "tag",
                          "source": 18,
                          "value": "64"
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "178"
                        },
                        {
                          "begin": 2316,
                          "end": 2333,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "179"
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 5
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "tag",
                          "source": 5,
                          "value": "178"
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 4650,
                          "end": 4660,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4649,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4661,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4670,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4679,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 4643,
                          "end": 4679,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4679,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4643,
                          "end": 4679,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "FF"
                        },
                        {
                          "begin": 4643,
                          "end": 4679,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 4638,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "181"
                        },
                        {
                          "begin": 4638,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "73E5C3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4688,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 4638,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "181"
                        },
                        {
                          "begin": 4638,
                          "end": 4699,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4710,
                          "end": 4744,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "182"
                        },
                        {
                          "begin": 4724,
                          "end": 4734,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 4736,
                          "end": 4743,
                          "modifierDepth": 1,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 4710,
                          "end": 4723,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "166"
                        },
                        {
                          "begin": 4710,
                          "end": 4744,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 4710,
                          "end": 4744,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "182"
                        },
                        {
                          "begin": 4710,
                          "end": 4744,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4812,
                          "end": 4827,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 4812,
                          "end": 4827,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4797,
                          "end": 4827,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "183"
                        },
                        {
                          "begin": 4797,
                          "end": 4827,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4797,
                          "end": 4809,
                          "modifierDepth": 1,
                          "name": "NUMBER",
                          "source": 18
                        },
                        {
                          "begin": 4797,
                          "end": 4827,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "163"
                        },
                        {
                          "begin": 4797,
                          "end": 4827,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 4797,
                          "end": 4827,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "183"
                        },
                        {
                          "begin": 4797,
                          "end": 4827,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4762,
                          "end": 4772,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4761,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4773,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4782,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4794,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 4755,
                          "end": 4794,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4827,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4827,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4827,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": 4755,
                          "end": 4827,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 4762,
                          "end": 4772,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4762,
                          "end": 4772,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "184"
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4842,
                          "end": 4871,
                          "modifierDepth": 1,
                          "name": "LOG2",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 4571,
                          "end": 4878,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "tag",
                          "source": 18,
                          "value": "68"
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5167,
                          "end": 5177,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5166,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5178,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5187,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5196,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5160,
                          "end": 5196,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5196,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5160,
                          "end": 5196,
                          "name": "PUSH",
                          "source": 18,
                          "value": "FF"
                        },
                        {
                          "begin": 5160,
                          "end": 5196,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 5155,
                          "end": 5216,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "186"
                        },
                        {
                          "begin": 5155,
                          "end": 5216,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "73E5C3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5205,
                          "end": 5216,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5155,
                          "end": 5216,
                          "name": "tag",
                          "source": 18,
                          "value": "186"
                        },
                        {
                          "begin": 5155,
                          "end": 5216,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5252,
                          "end": 5262,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5251,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5263,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5272,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5284,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 5245,
                          "end": 5284,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5245,
                          "end": 5284,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5230,
                          "end": 5242,
                          "name": "NUMBER",
                          "source": 18
                        },
                        {
                          "begin": 5230,
                          "end": 5284,
                          "name": "LT",
                          "source": 18
                        },
                        {
                          "begin": 5226,
                          "end": 5319,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5226,
                          "end": 5319,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "187"
                        },
                        {
                          "begin": 5226,
                          "end": 5319,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "3878000D"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5293,
                          "end": 5319,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5226,
                          "end": 5319,
                          "name": "tag",
                          "source": 18,
                          "value": "187"
                        },
                        {
                          "begin": 5226,
                          "end": 5319,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5333,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5330,
                          "end": 5333,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "21421707"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5359,
                          "end": 5363,
                          "name": "ADDRESS",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 6940,
                          "end": 6974,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5366,
                          "end": 5376,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 6990,
                          "end": 7008,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 6990,
                          "end": 7008,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 6990,
                          "end": 7008,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 6983,
                          "end": 7026,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 7042,
                          "end": 7060,
                          "name": "PUSH",
                          "source": 19,
                          "value": "44"
                        },
                        {
                          "begin": 7042,
                          "end": 7060,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7042,
                          "end": 7060,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 7035,
                          "end": 7069,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 7035,
                          "end": 7069,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 7035,
                          "end": 7069,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 5330,
                          "end": 5333,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5333,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5333,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5333,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5350,
                          "name": "PUSH",
                          "source": 18,
                          "value": "42842E0E"
                        },
                        {
                          "begin": 5330,
                          "end": 5350,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6875,
                          "end": 6893,
                          "name": "PUSH",
                          "source": 19,
                          "value": "64"
                        },
                        {
                          "begin": 6875,
                          "end": 6893,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "EXTCODESIZE",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "190"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "tag",
                          "source": 18,
                          "value": "190"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "GAS",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "CALL",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "192"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "RETURNDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "RETURNDATACOPY",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "RETURNDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "tag",
                          "source": 18,
                          "value": "192"
                        },
                        {
                          "begin": 5330,
                          "end": 5386,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 5410,
                          "end": 5420,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5409,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5421,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "SWAP6",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 5403,
                          "end": 5430,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5396,
                          "end": 5430,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5447,
                          "end": 5457,
                          "name": "PUSH",
                          "source": 18,
                          "value": "7"
                        },
                        {
                          "begin": 5447,
                          "end": 5466,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5447,
                          "end": 5466,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5447,
                          "end": 5466,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 5447,
                          "end": 5466,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5447,
                          "end": 5466,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 5447,
                          "end": 5466,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 5440,
                          "end": 5466,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 5440,
                          "end": 5466,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 5440,
                          "end": 5466,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 5440,
                          "end": 5466,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 5440,
                          "end": 5466,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 5101,
                          "end": 5473,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "tag",
                          "source": 18,
                          "value": "71"
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "194"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "tag",
                          "source": 0,
                          "value": "194"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 9318,
                          "end": 9328,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "196"
                        },
                        {
                          "begin": 9318,
                          "end": 9326,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "197"
                        },
                        {
                          "begin": 9318,
                          "end": 9328,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 9318,
                          "end": 9328,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "196"
                        },
                        {
                          "begin": 9318,
                          "end": 9328,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 9270,
                          "end": 9335,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "tag",
                          "source": 2,
                          "value": "85"
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 2653,
                          "end": 2666,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "199"
                        },
                        {
                          "begin": 2653,
                          "end": 2664,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "200"
                        },
                        {
                          "begin": 2653,
                          "end": 2666,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 2653,
                          "end": 2666,
                          "name": "tag",
                          "source": 2,
                          "value": "199"
                        },
                        {
                          "begin": 2653,
                          "end": 2666,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 4273,
                          "end": 4309,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "202"
                        },
                        {
                          "begin": 4291,
                          "end": 4308,
                          "modifierDepth": 1,
                          "name": "DUP3",
                          "source": 2
                        },
                        {
                          "begin": 4273,
                          "end": 4290,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "203"
                        },
                        {
                          "begin": 4273,
                          "end": 4309,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 4273,
                          "end": 4309,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 2,
                          "value": "202"
                        },
                        {
                          "begin": 4273,
                          "end": 4309,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 4319,
                          "end": 4365,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "204"
                        },
                        {
                          "begin": 4341,
                          "end": 4358,
                          "modifierDepth": 1,
                          "name": "DUP3",
                          "source": 2
                        },
                        {
                          "begin": 4360,
                          "end": 4364,
                          "modifierDepth": 1,
                          "name": "DUP3",
                          "source": 2
                        },
                        {
                          "begin": 4319,
                          "end": 4340,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "205"
                        },
                        {
                          "begin": 4319,
                          "end": 4365,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 4319,
                          "end": 4365,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 2,
                          "value": "204"
                        },
                        {
                          "begin": 4319,
                          "end": 4365,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 4158,
                          "end": 4372,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "tag",
                          "source": 2,
                          "value": "88"
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 3774,
                          "end": 3781,
                          "name": "PUSH",
                          "source": 2,
                          "value": "0"
                        },
                        {
                          "begin": 2924,
                          "end": 2944,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "207"
                        },
                        {
                          "begin": 2924,
                          "end": 2942,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "208"
                        },
                        {
                          "begin": 2924,
                          "end": 2944,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 2924,
                          "end": 2944,
                          "name": "tag",
                          "source": 2,
                          "value": "207"
                        },
                        {
                          "begin": 2924,
                          "end": 2944,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "name": "SWAP1",
                          "source": 2
                        },
                        {
                          "begin": 3705,
                          "end": 3839,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "tag",
                          "source": 0,
                          "value": "109"
                        },
                        {
                          "begin": 3155,
                          "end": 3256,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "214"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "tag",
                          "source": 0,
                          "value": "214"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 3219,
                          "end": 3249,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "196"
                        },
                        {
                          "begin": 3246,
                          "end": 3247,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 0,
                          "value": "0"
                        },
                        {
                          "begin": 3219,
                          "end": 3237,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "217"
                        },
                        {
                          "begin": 3219,
                          "end": 3249,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "tag",
                          "source": 18,
                          "value": "114"
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8870,
                          "end": 8891,
                          "name": "PUSH",
                          "source": 1,
                          "value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
                        },
                        {
                          "begin": 4302,
                          "end": 4317,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 4302,
                          "end": 4317,
                          "name": "SLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "40"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 4302,
                          "end": 4317,
                          "name": "DUP2",
                          "source": 1
                        },
                        {
                          "begin": 4302,
                          "end": 4317,
                          "name": "DIV",
                          "source": 1
                        },
                        {
                          "begin": 4302,
                          "end": 4317,
                          "name": "PUSH",
                          "source": 1,
                          "value": "FF"
                        },
                        {
                          "begin": 4302,
                          "end": 4317,
                          "name": "AND",
                          "source": 1
                        },
                        {
                          "begin": 4301,
                          "end": 4317,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4301,
                          "end": 4317,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 4348,
                          "end": 4362,
                          "name": "PUSH",
                          "source": 1,
                          "value": "FFFFFFFFFFFFFFFF"
                        },
                        {
                          "begin": 4348,
                          "end": 4362,
                          "name": "AND",
                          "source": 1
                        },
                        {
                          "begin": 4158,
                          "end": 4188,
                          "name": "PUSH",
                          "source": 1,
                          "value": "0"
                        },
                        {
                          "begin": 4726,
                          "end": 4742,
                          "name": "DUP2",
                          "source": 1
                        },
                        {
                          "begin": 4726,
                          "end": 4742,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4726,
                          "end": 4760,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 4726,
                          "end": 4760,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4726,
                          "end": 4760,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "221"
                        },
                        {
                          "begin": 4726,
                          "end": 4760,
                          "name": "JUMPI",
                          "source": 1
                        },
                        {
                          "begin": 4726,
                          "end": 4760,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4746,
                          "end": 4760,
                          "name": "DUP3",
                          "source": 1
                        },
                        {
                          "begin": 4726,
                          "end": 4760,
                          "name": "tag",
                          "source": 1,
                          "value": "221"
                        },
                        {
                          "begin": 4726,
                          "end": 4760,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 4706,
                          "end": 4760,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 4706,
                          "end": 4760,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4770,
                          "end": 4787,
                          "name": "PUSH",
                          "source": 1,
                          "value": "0"
                        },
                        {
                          "begin": 4790,
                          "end": 4801,
                          "name": "DUP3",
                          "source": 1
                        },
                        {
                          "begin": 4790,
                          "end": 4806,
                          "name": "PUSH",
                          "source": 1,
                          "value": "FFFFFFFFFFFFFFFF"
                        },
                        {
                          "begin": 4790,
                          "end": 4806,
                          "name": "AND",
                          "source": 1
                        },
                        {
                          "begin": 4805,
                          "end": 4806,
                          "name": "PUSH",
                          "source": 1,
                          "value": "1"
                        },
                        {
                          "begin": 4790,
                          "end": 4806,
                          "name": "EQ",
                          "source": 1
                        },
                        {
                          "begin": 4790,
                          "end": 4840,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 4790,
                          "end": 4840,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4790,
                          "end": 4840,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "222"
                        },
                        {
                          "begin": 4790,
                          "end": 4840,
                          "name": "JUMPI",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4818,
                          "end": 4822,
                          "name": "ADDRESS",
                          "source": 1
                        },
                        {
                          "begin": 4810,
                          "end": 4835,
                          "name": "EXTCODESIZE",
                          "source": 1
                        },
                        {
                          "begin": 4810,
                          "end": 4840,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4790,
                          "end": 4840,
                          "name": "tag",
                          "source": 1,
                          "value": "222"
                        },
                        {
                          "begin": 4790,
                          "end": 4840,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 4770,
                          "end": 4840,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 4770,
                          "end": 4840,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4856,
                          "end": 4868,
                          "name": "DUP2",
                          "source": 1
                        },
                        {
                          "begin": 4855,
                          "end": 4868,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4855,
                          "end": 4885,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 4855,
                          "end": 4885,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4855,
                          "end": 4885,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "223"
                        },
                        {
                          "begin": 4855,
                          "end": 4885,
                          "name": "JUMPI",
                          "source": 1
                        },
                        {
                          "begin": 4855,
                          "end": 4885,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4873,
                          "end": 4885,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 4872,
                          "end": 4885,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4855,
                          "end": 4885,
                          "name": "tag",
                          "source": 1,
                          "value": "223"
                        },
                        {
                          "begin": 4855,
                          "end": 4885,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 4851,
                          "end": 4942,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4851,
                          "end": 4942,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "224"
                        },
                        {
                          "begin": 4851,
                          "end": 4942,
                          "name": "JUMPI",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "PUSH",
                          "source": 1,
                          "value": "40"
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "MLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "F92EE8A9"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "DUP2",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "MSTORE",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "PUSH",
                          "source": 1,
                          "value": "4"
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "ADD",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "PUSH",
                          "source": 1,
                          "value": "40"
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "MLOAD",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "SWAP2",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "SUB",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 4908,
                          "end": 4931,
                          "name": "REVERT",
                          "source": 1
                        },
                        {
                          "begin": 4851,
                          "end": 4942,
                          "name": "tag",
                          "source": 1,
                          "value": "224"
                        },
                        {
                          "begin": 4851,
                          "end": 4942,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 4951,
                          "end": 4969,
                          "name": "DUP5",
                          "source": 1
                        },
                        {
                          "begin": 4951,
                          "end": 4969,
                          "name": "SLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FFFFFFFFFFFFFFFF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 4951,
                          "end": 4969,
                          "name": "AND",
                          "source": 1
                        },
                        {
                          "begin": 4968,
                          "end": 4969,
                          "name": "PUSH",
                          "source": 1,
                          "value": "1"
                        },
                        {
                          "begin": 4951,
                          "end": 4969,
                          "name": "OR",
                          "source": 1
                        },
                        {
                          "begin": 4951,
                          "end": 4969,
                          "name": "DUP6",
                          "source": 1
                        },
                        {
                          "begin": 4951,
                          "end": 4969,
                          "name": "SSTORE",
                          "source": 1
                        },
                        {
                          "begin": 4979,
                          "end": 5046,
                          "name": "DUP4",
                          "source": 1
                        },
                        {
                          "begin": 4979,
                          "end": 5046,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 4979,
                          "end": 5046,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "225"
                        },
                        {
                          "begin": 4979,
                          "end": 5046,
                          "name": "JUMPI",
                          "source": 1
                        },
                        {
                          "begin": 5013,
                          "end": 5035,
                          "name": "DUP5",
                          "source": 1
                        },
                        {
                          "begin": 5013,
                          "end": 5035,
                          "name": "SLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "40"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 5013,
                          "end": 5035,
                          "name": "AND",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "40"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5013,
                          "end": 5035,
                          "name": "OR",
                          "source": 1
                        },
                        {
                          "begin": 5013,
                          "end": 5035,
                          "name": "DUP6",
                          "source": 1
                        },
                        {
                          "begin": 5013,
                          "end": 5035,
                          "name": "SSTORE",
                          "source": 1
                        },
                        {
                          "begin": 4979,
                          "end": 5046,
                          "name": "tag",
                          "source": 1,
                          "value": "225"
                        },
                        {
                          "begin": 4979,
                          "end": 5046,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 3008,
                          "end": 3032,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "227"
                        },
                        {
                          "begin": 3008,
                          "end": 3030,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "228"
                        },
                        {
                          "begin": 3008,
                          "end": 3032,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3008,
                          "end": 3032,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "227"
                        },
                        {
                          "begin": 3008,
                          "end": 3032,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3042,
                          "end": 3064,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "229"
                        },
                        {
                          "begin": 3057,
                          "end": 3063,
                          "modifierDepth": 1,
                          "name": "DUP12",
                          "source": 18
                        },
                        {
                          "begin": 3042,
                          "end": 3056,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "230"
                        },
                        {
                          "begin": 3042,
                          "end": 3064,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3042,
                          "end": 3064,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "229"
                        },
                        {
                          "begin": 3042,
                          "end": 3064,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3074,
                          "end": 3091,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "231"
                        },
                        {
                          "begin": 3074,
                          "end": 3089,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "232"
                        },
                        {
                          "begin": 3074,
                          "end": 3091,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3074,
                          "end": 3091,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "231"
                        },
                        {
                          "begin": 3074,
                          "end": 3091,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3107,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "DUP15",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "modifierDepth": 1,
                          "name": "OR",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3107,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "DUP15",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "modifierDepth": 1,
                          "name": "OR",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3126,
                          "end": 3145,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3102,
                          "end": 3116,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "DUP15",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "modifierDepth": 1,
                          "name": "OR",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 3155,
                          "end": 3189,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3227,
                          "end": 3239,
                          "modifierDepth": 1,
                          "name": "NUMBER",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "DUP13",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3216,
                          "end": 3257,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3210,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "modifierDepth": 1,
                          "name": "MUL",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "PUSH",
                          "source": 18,
                          "value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "PUSH",
                          "source": 18,
                          "value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C"
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3199,
                          "end": 3258,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3268,
                          "end": 3283,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 3268,
                          "end": 3302,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 3268,
                          "end": 3302,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3268,
                          "end": 3302,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3312,
                          "end": 3328,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "5"
                        },
                        {
                          "begin": 3312,
                          "end": 3348,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 3312,
                          "end": 3348,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3312,
                          "end": 3348,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 5066,
                          "end": 5167,
                          "name": "DUP4",
                          "source": 1
                        },
                        {
                          "begin": 5066,
                          "end": 5167,
                          "name": "ISZERO",
                          "source": 1
                        },
                        {
                          "begin": 5066,
                          "end": 5167,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "234"
                        },
                        {
                          "begin": 5066,
                          "end": 5167,
                          "name": "JUMPI",
                          "source": 1
                        },
                        {
                          "begin": 5100,
                          "end": 5123,
                          "name": "DUP5",
                          "source": 1
                        },
                        {
                          "begin": 5100,
                          "end": 5123,
                          "name": "SLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "40"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 5100,
                          "end": 5123,
                          "name": "AND",
                          "source": 1
                        },
                        {
                          "begin": 5100,
                          "end": 5123,
                          "name": "DUP6",
                          "source": 1
                        },
                        {
                          "begin": 5100,
                          "end": 5123,
                          "name": "SSTORE",
                          "source": 1
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "PUSH",
                          "source": 1,
                          "value": "40"
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "MLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": 7233,
                          "end": 7283,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7233,
                          "end": 7283,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "PUSH",
                          "source": 1,
                          "value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 7221,
                          "end": 7223,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 7206,
                          "end": 7224,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "PUSH",
                          "source": 1,
                          "value": "40"
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "MLOAD",
                          "source": 1
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "SWAP2",
                          "source": 1
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "SUB",
                          "source": 1
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 5142,
                          "end": 5156,
                          "name": "LOG1",
                          "source": 1
                        },
                        {
                          "begin": 5066,
                          "end": 5167,
                          "name": "tag",
                          "source": 1,
                          "value": "234"
                        },
                        {
                          "begin": 5066,
                          "end": 5167,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 4092,
                          "end": 5173,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4092,
                          "end": 5173,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4092,
                          "end": 5173,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4092,
                          "end": 5173,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 4092,
                          "end": 5173,
                          "name": "POP",
                          "source": 1
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 2775,
                          "end": 3355,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "tag",
                          "source": 18,
                          "value": "117"
                        },
                        {
                          "begin": 9093,
                          "end": 9154,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "238"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "tag",
                          "source": 0,
                          "value": "238"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 9139,
                          "end": 9147,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "196"
                        },
                        {
                          "begin": 9139,
                          "end": 9145,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "241"
                        },
                        {
                          "begin": 9139,
                          "end": 9147,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "tag",
                          "source": 18,
                          "value": "129"
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "247"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "tag",
                          "source": 0,
                          "value": "247"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 8039,
                          "end": 8054,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8058,
                          "end": 8059,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 8039,
                          "end": 8059,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 8035,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "249"
                        },
                        {
                          "begin": 8035,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "AE4FC7AB"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8068,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 8035,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "249"
                        },
                        {
                          "begin": 8035,
                          "end": 8091,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8130,
                          "end": 8142,
                          "modifierDepth": 1,
                          "name": "NUMBER",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 8119,
                          "end": 8160,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8113,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "PUSH",
                          "source": 18,
                          "value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP6",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "modifierDepth": 1,
                          "name": "MUL",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "PUSH",
                          "source": 18,
                          "value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C"
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 8102,
                          "end": 8161,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 5884,
                          "end": 5909,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 5884,
                          "end": 5909,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 5884,
                          "end": 5909,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5925,
                          "end": 5943,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 5925,
                          "end": 5943,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 5925,
                          "end": 5943,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5918,
                          "end": 5952,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 5918,
                          "end": 5952,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 5918,
                          "end": 5952,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "C390A98ACE15A7BB6BAB611EEDFDBB2685043B241A869420043CDFB23CCFEE50"
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 5857,
                          "end": 5875,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "251"
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 8176,
                          "end": 8224,
                          "modifierDepth": 1,
                          "name": "LOG1",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7955,
                          "end": 8231,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "tag",
                          "source": 18,
                          "value": "133"
                        },
                        {
                          "begin": 3778,
                          "end": 4407,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "253"
                        },
                        {
                          "begin": 2316,
                          "end": 2333,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "179"
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 5
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "tag",
                          "source": 5,
                          "value": "253"
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 3854,
                          "end": 3864,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3853,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3865,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3874,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3883,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 3847,
                          "end": 3883,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3883,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3847,
                          "end": 3883,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "FF"
                        },
                        {
                          "begin": 3847,
                          "end": 3883,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3843,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 3843,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "255"
                        },
                        {
                          "begin": 3843,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "AE3514D"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3892,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 3843,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "255"
                        },
                        {
                          "begin": 3843,
                          "end": 3907,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3924,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 3921,
                          "end": 3924,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "31A9108F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 3945,
                          "end": 3955,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 3945,
                          "end": 3955,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 3921,
                          "end": 3924,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3924,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3932,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6352211E"
                        },
                        {
                          "begin": 3921,
                          "end": 3932,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "GAS",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "STATICCALL",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "258"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "RETURNDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "RETURNDATACOPY",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "RETURNDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "258"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "RETURNDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1F"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "NOT",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1F"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "259"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "260"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "259"
                        },
                        {
                          "begin": 3921,
                          "end": 3941,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 3921,
                          "end": 3955,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 3921,
                          "end": 3955,
                          "modifierDepth": 1,
                          "name": "EQ",
                          "source": 18
                        },
                        {
                          "begin": 3917,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "261"
                        },
                        {
                          "begin": 3917,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "59DC379F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 3964,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 3917,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "261"
                        },
                        {
                          "begin": 3917,
                          "end": 3979,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 3990,
                          "end": 4024,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "262"
                        },
                        {
                          "begin": 4004,
                          "end": 4014,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 4016,
                          "end": 4023,
                          "modifierDepth": 1,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 3990,
                          "end": 4003,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "166"
                        },
                        {
                          "begin": 3990,
                          "end": 4024,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3990,
                          "end": 4024,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "262"
                        },
                        {
                          "begin": 3990,
                          "end": 4024,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4038,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4035,
                          "end": 4038,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "21421707"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4056,
                          "end": 4066,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 6940,
                          "end": 6974,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 4076,
                          "end": 4080,
                          "modifierDepth": 1,
                          "name": "ADDRESS",
                          "source": 18
                        },
                        {
                          "begin": 6990,
                          "end": 7008,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 6990,
                          "end": 7008,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 6990,
                          "end": 7008,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 6983,
                          "end": 7026,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 7042,
                          "end": 7060,
                          "name": "PUSH",
                          "source": 19,
                          "value": "44"
                        },
                        {
                          "begin": 7042,
                          "end": 7060,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7042,
                          "end": 7060,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 7035,
                          "end": 7069,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 7035,
                          "end": 7069,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 7035,
                          "end": 7069,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 4035,
                          "end": 4038,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4038,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4038,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4038,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4055,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "42842E0E"
                        },
                        {
                          "begin": 4035,
                          "end": 4055,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6875,
                          "end": 6893,
                          "name": "PUSH",
                          "source": 19,
                          "value": "64"
                        },
                        {
                          "begin": 6875,
                          "end": 6893,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "EXTCODESIZE",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "264"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "264"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "GAS",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "CALL",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "266"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "RETURNDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "RETURNDATACOPY",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "RETURNDATASIZE",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 18,
                          "value": "266"
                        },
                        {
                          "begin": 4035,
                          "end": 4091,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "A0"
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4191,
                          "end": 4203,
                          "modifierDepth": 1,
                          "name": "NUMBER",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4262,
                          "end": 4277,
                          "modifierDepth": 1,
                          "name": "TIMESTAMP",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "PUSH",
                          "source": 18,
                          "value": "60"
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4301,
                          "end": 4305,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "PUSH",
                          "source": 18,
                          "value": "80"
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4131,
                          "end": 4316,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4108,
                          "end": 4118,
                          "modifierDepth": 1,
                          "name": "CALLER",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4107,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "DUP10",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4119,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "DUP14",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "DUP10",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4128,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP9",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "DUP10",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP7",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "DUP9",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "4"
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "modifierDepth": 1,
                          "name": "OR",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": 4101,
                          "end": 4316,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4336,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "7"
                        },
                        {
                          "begin": 4326,
                          "end": 4345,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4345,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4345,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4345,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4345,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4345,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4358,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4358,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 4326,
                          "end": 4358,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4358,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4358,
                          "modifierDepth": 1,
                          "name": "OR",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4358,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 4326,
                          "end": 4358,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 4373,
                          "end": 4400,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4373,
                          "end": 4400,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 4108,
                          "end": 4118,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 4108,
                          "end": 4118,
                          "name": "SWAP4",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4373,
                          "end": 4400,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 18,
                          "value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
                        },
                        {
                          "begin": 4373,
                          "end": 4400,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4373,
                          "end": 4400,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "184"
                        },
                        {
                          "begin": 2275,
                          "end": 2452,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "tag",
                          "source": 18,
                          "value": "142"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "LT",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "268"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "REVERT",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "tag",
                          "source": 18,
                          "value": "268"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "MUL",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 1219,
                          "end": 1250,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "tag",
                          "source": 0,
                          "value": "149"
                        },
                        {
                          "begin": 3405,
                          "end": 3620,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "271"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "tag",
                          "source": 0,
                          "value": "271"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 3489,
                          "end": 3511,
                          "name": "DUP2",
                          "source": 0
                        },
                        {
                          "begin": 3489,
                          "end": 3511,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 0
                        },
                        {
                          "begin": 3485,
                          "end": 3576,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "273"
                        },
                        {
                          "begin": 3485,
                          "end": 3576,
                          "modifierDepth": 1,
                          "name": "JUMPI",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 0,
                          "value": "40"
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "name": "MLOAD",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1E4FBDF7"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "name": "DUP2",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "name": "MSTORE",
                          "source": 0
                        },
                        {
                          "begin": 3562,
                          "end": 3563,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 0,
                          "value": "0"
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 0,
                          "value": "4"
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "name": "DUP3",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "ADD",
                          "source": 0
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 0,
                          "value": "274"
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 0,
                          "value": "40"
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "MLOAD",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "SWAP2",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "SUB",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "SWAP1",
                          "source": 0
                        },
                        {
                          "begin": 3534,
                          "end": 3565,
                          "modifierDepth": 1,
                          "name": "REVERT",
                          "source": 0
                        },
                        {
                          "begin": 3485,
                          "end": 3576,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 0,
                          "value": "273"
                        },
                        {
                          "begin": 3485,
                          "end": 3576,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 3585,
                          "end": 3613,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "165"
                        },
                        {
                          "begin": 3604,
                          "end": 3612,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 0
                        },
                        {
                          "begin": 3585,
                          "end": 3603,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "217"
                        },
                        {
                          "begin": 3585,
                          "end": 3613,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 6217,
                          "end": 6664,
                          "name": "tag",
                          "source": 18,
                          "value": "166"
                        },
                        {
                          "begin": 6217,
                          "end": 6664,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 6290,
                          "end": 6313,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6322,
                          "name": "PUSH",
                          "source": 18,
                          "value": "6"
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6328,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "DUP5",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 6383,
                          "end": 6401,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 6383,
                          "end": 6401,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 6383,
                          "end": 6401,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 6383,
                          "end": 6401,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6316,
                          "end": 6337,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 6290,
                          "end": 6313,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6365,
                          "end": 6416,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "277"
                        },
                        {
                          "begin": 6365,
                          "end": 6416,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6403,
                          "end": 6415,
                          "name": "NUMBER",
                          "source": 18
                        },
                        {
                          "begin": 6365,
                          "end": 6382,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "278"
                        },
                        {
                          "begin": 6365,
                          "end": 6416,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 6365,
                          "end": 6416,
                          "name": "tag",
                          "source": 18,
                          "value": "277"
                        },
                        {
                          "begin": 6365,
                          "end": 6416,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 6347,
                          "end": 6416,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 6430,
                          "end": 6441,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 6430,
                          "end": 6441,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 6426,
                          "end": 6658,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "279"
                        },
                        {
                          "begin": 6426,
                          "end": 6658,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 6457,
                          "end": 6468,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 6457,
                          "end": 6468,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 6457,
                          "end": 6496,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "280"
                        },
                        {
                          "begin": 6457,
                          "end": 6496,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 6457,
                          "end": 6468,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 6482,
                          "end": 6486,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 6488,
                          "end": 6495,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 6457,
                          "end": 6481,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "281"
                        },
                        {
                          "begin": 6457,
                          "end": 6496,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 6457,
                          "end": 6496,
                          "name": "tag",
                          "source": 18,
                          "value": "280"
                        },
                        {
                          "begin": 6457,
                          "end": 6496,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 6529,
                          "end": 6533,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "AND",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "PUSH",
                          "source": 18,
                          "value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
                        },
                        {
                          "begin": 6535,
                          "end": 6542,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "282"
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2409,
                          "end": 2411,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2275,
                          "end": 2452,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "tag",
                          "source": 18,
                          "value": "282"
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 6515,
                          "end": 6543,
                          "name": "LOG2",
                          "source": 18
                        },
                        {
                          "begin": 6578,
                          "end": 6590,
                          "name": "NUMBER",
                          "source": 18
                        },
                        {
                          "begin": 6557,
                          "end": 6575,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 6557,
                          "end": 6575,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 6557,
                          "end": 6575,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 6557,
                          "end": 6590,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 6632,
                          "end": 6647,
                          "name": "TIMESTAMP",
                          "source": 18
                        },
                        {
                          "begin": 6604,
                          "end": 6629,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 6604,
                          "end": 6629,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 6604,
                          "end": 6629,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 6604,
                          "end": 6647,
                          "name": "SSTORE",
                          "source": 18
                        },
                        {
                          "begin": 6426,
                          "end": 6658,
                          "name": "tag",
                          "source": 18,
                          "value": "279"
                        },
                        {
                          "begin": 6426,
                          "end": 6658,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 6280,
                          "end": 6664,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 6280,
                          "end": 6664,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 6217,
                          "end": 6664,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 6217,
                          "end": 6664,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 6217,
                          "end": 6664,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 2658,
                          "end": 2820,
                          "name": "tag",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2658,
                          "end": 2820,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 966,
                          "end": 976,
                          "name": "CALLER",
                          "source": 4
                        },
                        {
                          "begin": 2717,
                          "end": 2724,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "286"
                        },
                        {
                          "begin": 1313,
                          "end": 1335,
                          "name": "PUSH",
                          "source": 0,
                          "value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
                        },
                        {
                          "begin": 2570,
                          "end": 2578,
                          "name": "SLOAD",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2570,
                          "end": 2578,
                          "name": "AND",
                          "source": 0
                        },
                        {
                          "begin": 2570,
                          "end": 2578,
                          "name": "SWAP1",
                          "source": 0
                        },
                        {
                          "begin": 2441,
                          "end": 2585,
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2717,
                          "end": 2724,
                          "name": "tag",
                          "source": 0,
                          "value": "286"
                        },
                        {
                          "begin": 2717,
                          "end": 2724,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2717,
                          "end": 2740,
                          "name": "AND",
                          "source": 0
                        },
                        {
                          "begin": 2717,
                          "end": 2740,
                          "name": "EQ",
                          "source": 0
                        },
                        {
                          "begin": 2713,
                          "end": 2814,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "196"
                        },
                        {
                          "begin": 2713,
                          "end": 2814,
                          "name": "JUMPI",
                          "source": 0
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "PUSH",
                          "source": 0,
                          "value": "40"
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "MLOAD",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "118CDAA7"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "DUP2",
                          "source": 0
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "MSTORE",
                          "source": 0
                        },
                        {
                          "begin": 966,
                          "end": 976,
                          "name": "CALLER",
                          "source": 4
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "PUSH",
                          "source": 0,
                          "value": "4"
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "DUP3",
                          "source": 0
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "ADD",
                          "source": 0
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 2763,
                          "end": 2803,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "274"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 2905,
                          "end": 3033,
                          "name": "tag",
                          "source": 5,
                          "value": "179"
                        },
                        {
                          "begin": 2905,
                          "end": 3033,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "SLOAD",
                          "source": 5
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "PUSH",
                          "source": 5,
                          "value": "FF"
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "AND",
                          "source": 5
                        },
                        {
                          "begin": 2966,
                          "end": 3027,
                          "name": "ISZERO",
                          "source": 5
                        },
                        {
                          "begin": 2966,
                          "end": 3027,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "196"
                        },
                        {
                          "begin": 2966,
                          "end": 3027,
                          "name": "JUMPI",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "PUSH",
                          "source": 5,
                          "value": "40"
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "MLOAD",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "D93C0665"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "DUP2",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "MSTORE",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "PUSH",
                          "source": 5,
                          "value": "4"
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "ADD",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "PUSH",
                          "source": 5,
                          "value": "40"
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "MLOAD",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "DUP1",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "SWAP2",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "SUB",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "SWAP1",
                          "source": 5
                        },
                        {
                          "begin": 3001,
                          "end": 3016,
                          "name": "REVERT",
                          "source": 5
                        },
                        {
                          "begin": 3674,
                          "end": 3852,
                          "name": "tag",
                          "source": 5,
                          "value": "197"
                        },
                        {
                          "begin": 3674,
                          "end": 3852,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 2563,
                          "end": 2579,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "294"
                        },
                        {
                          "begin": 2563,
                          "end": 2577,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "295"
                        },
                        {
                          "begin": 2563,
                          "end": 2579,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 5
                        },
                        {
                          "begin": 2563,
                          "end": 2579,
                          "name": "tag",
                          "source": 5,
                          "value": "294"
                        },
                        {
                          "begin": 2563,
                          "end": 2579,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 3791,
                          "end": 3808,
                          "name": "DUP1",
                          "source": 5
                        },
                        {
                          "begin": 3791,
                          "end": 3808,
                          "name": "SLOAD",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 3791,
                          "end": 3808,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 5
                        },
                        {
                          "begin": 3791,
                          "end": 3808,
                          "name": "DUP2",
                          "source": 5
                        },
                        {
                          "begin": 3791,
                          "end": 3808,
                          "name": "SSTORE",
                          "source": 5
                        },
                        {
                          "begin": 3823,
                          "end": 3845,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 5,
                          "value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
                        },
                        {
                          "begin": 966,
                          "end": 976,
                          "name": "CALLER",
                          "source": 4
                        },
                        {
                          "begin": 3832,
                          "end": 3844,
                          "modifierDepth": 1,
                          "name": "tag",
                          "source": 5,
                          "value": "298"
                        },
                        {
                          "begin": 3832,
                          "end": 3844,
                          "modifierDepth": 1,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 3823,
                          "end": 3845,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 5,
                          "value": "40"
                        },
                        {
                          "begin": 3823,
                          "end": 3845,
                          "name": "MLOAD",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2201,
                          "end": 2203,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3823,
                          "end": 3845,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "251"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 4599,
                          "end": 4911,
                          "name": "tag",
                          "source": 2,
                          "value": "200"
                        },
                        {
                          "begin": 4599,
                          "end": 4911,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 4679,
                          "end": 4683,
                          "name": "ADDRESS",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 4688,
                          "end": 4694,
                          "name": "PUSHIMMUTABLE",
                          "source": 2,
                          "value": "468"
                        },
                        {
                          "begin": 4671,
                          "end": 4694,
                          "name": "AND",
                          "source": 2
                        },
                        {
                          "begin": 4671,
                          "end": 4694,
                          "name": "EQ",
                          "source": 2
                        },
                        {
                          "begin": 4671,
                          "end": 4694,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 4671,
                          "end": 4791,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "301"
                        },
                        {
                          "begin": 4671,
                          "end": 4791,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": 4671,
                          "end": 4791,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 4785,
                          "end": 4791,
                          "name": "PUSHIMMUTABLE",
                          "source": 2,
                          "value": "468"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 4749,
                          "end": 4791,
                          "name": "AND",
                          "source": 2
                        },
                        {
                          "begin": 4749,
                          "end": 4781,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "302"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 2035,
                          "end": 2088,
                          "name": "SLOAD",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2035,
                          "end": 2088,
                          "name": "AND",
                          "source": 7
                        },
                        {
                          "begin": 2035,
                          "end": 2088,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 1957,
                          "end": 2095,
                          "name": "JUMP",
                          "source": 7
                        },
                        {
                          "begin": 4749,
                          "end": 4781,
                          "name": "tag",
                          "source": 2,
                          "value": "302"
                        },
                        {
                          "begin": 4749,
                          "end": 4781,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 4749,
                          "end": 4791,
                          "name": "AND",
                          "source": 2
                        },
                        {
                          "begin": 4749,
                          "end": 4791,
                          "name": "EQ",
                          "source": 2
                        },
                        {
                          "begin": 4749,
                          "end": 4791,
                          "name": "ISZERO",
                          "source": 2
                        },
                        {
                          "begin": 4671,
                          "end": 4791,
                          "name": "tag",
                          "source": 2,
                          "value": "301"
                        },
                        {
                          "begin": 4671,
                          "end": 4791,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 4654,
                          "end": 4905,
                          "name": "ISZERO",
                          "source": 2
                        },
                        {
                          "begin": 4654,
                          "end": 4905,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "196"
                        },
                        {
                          "begin": 4654,
                          "end": 4905,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "703E46DD"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "PUSH",
                          "source": 2,
                          "value": "4"
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "SWAP2",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "SUB",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "SWAP1",
                          "source": 2
                        },
                        {
                          "begin": 4865,
                          "end": 4894,
                          "name": "REVERT",
                          "source": 2
                        },
                        {
                          "begin": 3513,
                          "end": 3597,
                          "name": "tag",
                          "source": 18,
                          "value": "203"
                        },
                        {
                          "begin": 3513,
                          "end": 3597,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "165"
                        },
                        {
                          "begin": 2334,
                          "end": 2345,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "169"
                        },
                        {
                          "begin": 2334,
                          "end": 2347,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 6052,
                          "end": 6590,
                          "name": "tag",
                          "source": 2,
                          "value": "205"
                        },
                        {
                          "begin": 6052,
                          "end": 6590,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 6169,
                          "end": 6186,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 6151,
                          "end": 6201,
                          "name": "AND",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6201,
                          "name": "PUSH",
                          "source": 2,
                          "value": "52D1902D"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "FFFFFFFF"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "AND",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "E0"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SHL",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "4"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "20"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP4",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SUB",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP7",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "GAS",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "STATICCALL",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SWAP3",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "ISZERO",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "309"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "1F"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "RETURNDATASIZE",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SWAP1",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "AND",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP3",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SWAP1",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SWAP3",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "310"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SWAP2",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "SWAP1",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "311"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "tag",
                          "source": 2,
                          "value": "310"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "PUSH",
                          "source": 2,
                          "value": "1"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "tag",
                          "source": 2,
                          "value": "309"
                        },
                        {
                          "begin": 6151,
                          "end": 6203,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 6147,
                          "end": 6584,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "312"
                        },
                        {
                          "begin": 6147,
                          "end": 6584,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "4C9C8CE3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "PUSH",
                          "source": 2,
                          "value": "4"
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "DUP3",
                          "source": 2
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 6513,
                          "end": 6573,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "274"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 6147,
                          "end": 6584,
                          "name": "tag",
                          "source": 2,
                          "value": "312"
                        },
                        {
                          "begin": 6147,
                          "end": 6584,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 6245,
                          "end": 6285,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6245,
                          "end": 6285,
                          "name": "EQ",
                          "source": 2
                        },
                        {
                          "begin": 6241,
                          "end": 6361,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "318"
                        },
                        {
                          "begin": 6241,
                          "end": 6361,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "2A875269"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E2"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "PUSH",
                          "source": 2,
                          "value": "4"
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2421,
                          "end": 2446,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2394,
                          "end": 2412,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 6312,
                          "end": 6346,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "274"
                        },
                        {
                          "begin": 2275,
                          "end": 2452,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 6241,
                          "end": 6361,
                          "name": "tag",
                          "source": 2,
                          "value": "318"
                        },
                        {
                          "begin": 6241,
                          "end": 6361,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 6374,
                          "end": 6428,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "320"
                        },
                        {
                          "begin": 6404,
                          "end": 6421,
                          "name": "DUP4",
                          "source": 2
                        },
                        {
                          "begin": 6423,
                          "end": 6427,
                          "name": "DUP4",
                          "source": 2
                        },
                        {
                          "begin": 6374,
                          "end": 6403,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "321"
                        },
                        {
                          "begin": 6374,
                          "end": 6428,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 6374,
                          "end": 6428,
                          "name": "tag",
                          "source": 2,
                          "value": "320"
                        },
                        {
                          "begin": 6374,
                          "end": 6428,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 6204,
                          "end": 6439,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 6052,
                          "end": 6590,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 6052,
                          "end": 6590,
                          "name": "POP",
                          "source": 2
                        },
                        {
                          "begin": 6052,
                          "end": 6590,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 2
                        },
                        {
                          "begin": 5028,
                          "end": 5241,
                          "name": "tag",
                          "source": 2,
                          "value": "208"
                        },
                        {
                          "begin": 5028,
                          "end": 5241,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 5102,
                          "end": 5106,
                          "name": "ADDRESS",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 5111,
                          "end": 5117,
                          "name": "PUSHIMMUTABLE",
                          "source": 2,
                          "value": "468"
                        },
                        {
                          "begin": 5094,
                          "end": 5117,
                          "name": "AND",
                          "source": 2
                        },
                        {
                          "begin": 5094,
                          "end": 5117,
                          "name": "EQ",
                          "source": 2
                        },
                        {
                          "begin": 5090,
                          "end": 5235,
                          "name": "PUSH [tag]",
                          "source": 2,
                          "value": "196"
                        },
                        {
                          "begin": 5090,
                          "end": 5235,
                          "name": "JUMPI",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "703E46DD"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "DUP2",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "MSTORE",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "PUSH",
                          "source": 2,
                          "value": "4"
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "ADD",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "PUSH",
                          "source": 2,
                          "value": "40"
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "MLOAD",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "DUP1",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "SWAP2",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "SUB",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "SWAP1",
                          "source": 2
                        },
                        {
                          "begin": 5195,
                          "end": 5224,
                          "name": "REVERT",
                          "source": 2
                        },
                        {
                          "begin": 3774,
                          "end": 4022,
                          "name": "tag",
                          "source": 0,
                          "value": "217"
                        },
                        {
                          "begin": 3774,
                          "end": 4022,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 1313,
                          "end": 1335,
                          "name": "PUSH",
                          "source": 0,
                          "value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
                        },
                        {
                          "begin": 3923,
                          "end": 3931,
                          "name": "DUP1",
                          "source": 0
                        },
                        {
                          "begin": 3923,
                          "end": 3931,
                          "name": "SLOAD",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "DUP2",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "AND",
                          "source": 0
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "DUP5",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "DUP2",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "AND",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "SWAP2",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "DUP3",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "OR",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "DUP5",
                          "source": 0
                        },
                        {
                          "begin": 3941,
                          "end": 3960,
                          "name": "SSTORE",
                          "source": 0
                        },
                        {
                          "begin": 3975,
                          "end": 4015,
                          "name": "PUSH",
                          "source": 0,
                          "value": "40"
                        },
                        {
                          "begin": 3975,
                          "end": 4015,
                          "name": "MLOAD",
                          "source": 0
                        },
                        {
                          "begin": 3923,
                          "end": 3931,
                          "name": "SWAP3",
                          "source": 0
                        },
                        {
                          "begin": 3923,
                          "end": 3931,
                          "name": "AND",
                          "source": 0
                        },
                        {
                          "begin": 3923,
                          "end": 3931,
                          "name": "SWAP2",
                          "source": 0
                        },
                        {
                          "begin": 3923,
                          "end": 3931,
                          "name": "DUP3",
                          "source": 0
                        },
                        {
                          "begin": 3923,
                          "end": 3931,
                          "name": "SWAP1",
                          "source": 0
                        },
                        {
                          "begin": 3975,
                          "end": 4015,
                          "name": "PUSH",
                          "source": 0,
                          "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                        },
                        {
                          "begin": 3975,
                          "end": 4015,
                          "name": "SWAP1",
                          "source": 0
                        },
                        {
                          "begin": 3847,
                          "end": 3871,
                          "name": "PUSH",
                          "source": 0,
                          "value": "0"
                        },
                        {
                          "begin": 3847,
                          "end": 3871,
                          "name": "SWAP1",
                          "source": 0
                        },
                        {
                          "begin": 3975,
                          "end": 4015,
                          "name": "LOG3",
                          "source": 0
                        },
                        {
                          "begin": 3837,
                          "end": 4022,
                          "name": "POP",
                          "source": 0
                        },
                        {
                          "begin": 3837,
                          "end": 4022,
                          "name": "POP",
                          "source": 0
                        },
                        {
                          "begin": 3774,
                          "end": 4022,
                          "name": "POP",
                          "source": 0
                        },
                        {
                          "begin": 3774,
                          "end": 4022,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 2968,
                          "end": 3035,
                          "name": "tag",
                          "source": 2,
                          "value": "228"
                        },
                        {
                          "begin": 2968,
                          "end": 3035,
                          "name": "JUMPDEST",
                          "source": 2
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "196"
                        },
                        {
                          "begin": 6931,
                          "end": 6949,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "330"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 1
                        },
                        {
                          "begin": 1847,
                          "end": 1974,
                          "name": "tag",
                          "source": 0,
                          "value": "230"
                        },
                        {
                          "begin": 1847,
                          "end": 1974,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "333"
                        },
                        {
                          "begin": 6931,
                          "end": 6949,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "330"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 1
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "tag",
                          "source": 1,
                          "value": "333"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 1929,
                          "end": 1967,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "165"
                        },
                        {
                          "begin": 1954,
                          "end": 1966,
                          "modifierDepth": 1,
                          "name": "DUP2",
                          "source": 0
                        },
                        {
                          "begin": 1929,
                          "end": 1953,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 0,
                          "value": "336"
                        },
                        {
                          "begin": 1929,
                          "end": 1967,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 0
                        },
                        {
                          "begin": 1836,
                          "end": 1933,
                          "name": "tag",
                          "source": 5,
                          "value": "232"
                        },
                        {
                          "begin": 1836,
                          "end": 1933,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "338"
                        },
                        {
                          "begin": 6931,
                          "end": 6949,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "330"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 1
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "tag",
                          "source": 1,
                          "value": "338"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 1899,
                          "end": 1926,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "196"
                        },
                        {
                          "begin": 1899,
                          "end": 1924,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "341"
                        },
                        {
                          "begin": 1899,
                          "end": 1926,
                          "jumpType": "[in]",
                          "modifierDepth": 1,
                          "name": "JUMP",
                          "source": 5
                        },
                        {
                          "begin": 3366,
                          "end": 3542,
                          "name": "tag",
                          "source": 5,
                          "value": "241"
                        },
                        {
                          "begin": 3366,
                          "end": 3542,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "343"
                        },
                        {
                          "begin": 2316,
                          "end": 2333,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "179"
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 5
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "tag",
                          "source": 5,
                          "value": "343"
                        },
                        {
                          "begin": 2316,
                          "end": 2335,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 3484,
                          "end": 3500,
                          "name": "DUP1",
                          "source": 5
                        },
                        {
                          "begin": 3484,
                          "end": 3500,
                          "name": "SLOAD",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 3484,
                          "end": 3500,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 5
                        },
                        {
                          "begin": 3496,
                          "end": 3500,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 5,
                          "value": "1"
                        },
                        {
                          "begin": 3484,
                          "end": 3500,
                          "modifierDepth": 1,
                          "name": "OR",
                          "source": 5
                        },
                        {
                          "begin": 3484,
                          "end": 3500,
                          "name": "DUP2",
                          "source": 5
                        },
                        {
                          "begin": 3484,
                          "end": 3500,
                          "name": "SSTORE",
                          "source": 5
                        },
                        {
                          "begin": 3515,
                          "end": 3535,
                          "modifierDepth": 1,
                          "name": "PUSH",
                          "source": 5,
                          "value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
                        },
                        {
                          "begin": 966,
                          "end": 976,
                          "name": "CALLER",
                          "source": 4
                        },
                        {
                          "begin": 3522,
                          "end": 3534,
                          "modifierDepth": 1,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "298"
                        },
                        {
                          "begin": 887,
                          "end": 983,
                          "name": "JUMP",
                          "source": 4
                        },
                        {
                          "begin": 7009,
                          "end": 7719,
                          "name": "tag",
                          "source": 18,
                          "value": "278"
                        },
                        {
                          "begin": 7009,
                          "end": 7719,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7143,
                          "end": 7154,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 7143,
                          "end": 7161,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7097,
                          "end": 7117,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7097,
                          "end": 7117,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7097,
                          "end": 7117,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7188,
                          "end": 7195,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "353"
                        },
                        {
                          "begin": 7194,
                          "end": 7195,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 7143,
                          "end": 7161,
                          "name": "DUP4",
                          "source": 18
                        },
                        {
                          "begin": 7188,
                          "end": 7195,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "354"
                        },
                        {
                          "begin": 7188,
                          "end": 7195,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7188,
                          "end": 7195,
                          "name": "tag",
                          "source": 18,
                          "value": "353"
                        },
                        {
                          "begin": 7188,
                          "end": 7195,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7176,
                          "end": 7195,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7176,
                          "end": 7195,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7171,
                          "end": 7713,
                          "name": "tag",
                          "source": 18,
                          "value": "350"
                        },
                        {
                          "begin": 7171,
                          "end": 7713,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7246,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7249,
                          "end": 7260,
                          "name": "PUSH",
                          "source": 18,
                          "value": "3"
                        },
                        {
                          "begin": 7261,
                          "end": 7262,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "LT",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "356"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "356"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "357"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "tag",
                          "source": 18,
                          "value": "356"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "KECCAK256",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "2"
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "MUL",
                          "source": 18
                        },
                        {
                          "begin": 7249,
                          "end": 7263,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "40"
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "PUSH",
                          "source": 18,
                          "value": "1"
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "SLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "MSTORE",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7224,
                          "end": 7263,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7292,
                          "end": 7296,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 7292,
                          "end": 7308,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7292,
                          "end": 7308,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7292,
                          "end": 7308,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7281,
                          "end": 7289,
                          "name": "DUP6",
                          "source": 18
                        },
                        {
                          "begin": 7281,
                          "end": 7308,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 7277,
                          "end": 7703,
                          "name": "ISZERO",
                          "source": 18
                        },
                        {
                          "begin": 7277,
                          "end": 7703,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "359"
                        },
                        {
                          "begin": 7277,
                          "end": 7703,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 7356,
                          "end": 7372,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 7356,
                          "end": 7372,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7328,
                          "end": 7342,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7328,
                          "end": 7342,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7345,
                          "end": 7372,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "360"
                        },
                        {
                          "begin": 7345,
                          "end": 7372,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7345,
                          "end": 7353,
                          "name": "DUP8",
                          "source": 18
                        },
                        {
                          "begin": 7345,
                          "end": 7372,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "354"
                        },
                        {
                          "begin": 7345,
                          "end": 7372,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7345,
                          "end": 7372,
                          "name": "tag",
                          "source": 18,
                          "value": "360"
                        },
                        {
                          "begin": 7345,
                          "end": 7372,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7328,
                          "end": 7372,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7328,
                          "end": 7372,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7415,
                          "end": 7419,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7415,
                          "end": 7434,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 7415,
                          "end": 7434,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7415,
                          "end": 7434,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7406,
                          "end": 7412,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7406,
                          "end": 7434,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "361"
                        },
                        {
                          "begin": 7406,
                          "end": 7434,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 7406,
                          "end": 7434,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7406,
                          "end": 7434,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "362"
                        },
                        {
                          "begin": 7406,
                          "end": 7434,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7406,
                          "end": 7434,
                          "name": "tag",
                          "source": 18,
                          "value": "361"
                        },
                        {
                          "begin": 7406,
                          "end": 7434,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "363"
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "163"
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "name": "tag",
                          "source": 18,
                          "value": "363"
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7463,
                          "end": 7479,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 7463,
                          "end": 7479,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7463,
                          "end": 7479,
                          "name": "SWAP7",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 7390,
                          "end": 7434,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 7501,
                          "end": 7523,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 7501,
                          "end": 7523,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 7501,
                          "end": 7523,
                          "name": "GT",
                          "source": 18
                        },
                        {
                          "begin": 7497,
                          "end": 7654,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "364"
                        },
                        {
                          "begin": 7497,
                          "end": 7654,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 7589,
                          "end": 7608,
                          "name": "PUSH",
                          "source": 18,
                          "value": "20"
                        },
                        {
                          "begin": 7589,
                          "end": 7608,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 7589,
                          "end": 7608,
                          "name": "ADD",
                          "source": 18
                        },
                        {
                          "begin": 7589,
                          "end": 7608,
                          "name": "MLOAD",
                          "source": 18
                        },
                        {
                          "begin": 7564,
                          "end": 7585,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "365"
                        },
                        {
                          "begin": 7575,
                          "end": 7585,
                          "name": "DUP9",
                          "source": 18
                        },
                        {
                          "begin": 7564,
                          "end": 7572,
                          "name": "DUP9",
                          "source": 18
                        },
                        {
                          "begin": 7564,
                          "end": 7585,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "354"
                        },
                        {
                          "begin": 7564,
                          "end": 7585,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7564,
                          "end": 7585,
                          "name": "tag",
                          "source": 18,
                          "value": "365"
                        },
                        {
                          "begin": 7564,
                          "end": 7585,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7563,
                          "end": 7608,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "366"
                        },
                        {
                          "begin": 7563,
                          "end": 7608,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 7563,
                          "end": 7608,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7563,
                          "end": 7608,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "362"
                        },
                        {
                          "begin": 7563,
                          "end": 7608,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7563,
                          "end": 7608,
                          "name": "tag",
                          "source": 18,
                          "value": "366"
                        },
                        {
                          "begin": 7563,
                          "end": 7608,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "367"
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "SWAP1",
                          "source": 18
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "DUP7",
                          "source": 18
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "163"
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "tag",
                          "source": 18,
                          "value": "367"
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "SWAP5",
                          "source": 18
                        },
                        {
                          "begin": 7547,
                          "end": 7608,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7630,
                          "end": 7635,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7630,
                          "end": 7635,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7630,
                          "end": 7635,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "351"
                        },
                        {
                          "begin": 7630,
                          "end": 7635,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7497,
                          "end": 7654,
                          "name": "tag",
                          "source": 18,
                          "value": "364"
                        },
                        {
                          "begin": 7497,
                          "end": 7654,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7675,
                          "end": 7676,
                          "name": "DUP3",
                          "source": 18
                        },
                        {
                          "begin": 7680,
                          "end": 7681,
                          "name": "PUSH",
                          "source": 18,
                          "value": "0"
                        },
                        {
                          "begin": 7675,
                          "end": 7681,
                          "name": "SUB",
                          "source": 18
                        },
                        {
                          "begin": 7671,
                          "end": 7688,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "368"
                        },
                        {
                          "begin": 7671,
                          "end": 7688,
                          "name": "JUMPI",
                          "source": 18
                        },
                        {
                          "begin": 7683,
                          "end": 7688,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7683,
                          "end": 7688,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7683,
                          "end": 7688,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "351"
                        },
                        {
                          "begin": 7683,
                          "end": 7688,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7671,
                          "end": 7688,
                          "name": "tag",
                          "source": 18,
                          "value": "368"
                        },
                        {
                          "begin": 7671,
                          "end": 7688,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7310,
                          "end": 7703,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7277,
                          "end": 7703,
                          "name": "tag",
                          "source": 18,
                          "value": "359"
                        },
                        {
                          "begin": 7277,
                          "end": 7703,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "DUP1",
                          "source": 18
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "369"
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "DUP2",
                          "source": 18
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "370"
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "tag",
                          "source": 18,
                          "value": "369"
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7205,
                          "end": 7208,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7171,
                          "end": 7713,
                          "name": "PUSH [tag]",
                          "source": 18,
                          "value": "350"
                        },
                        {
                          "begin": 7171,
                          "end": 7713,
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 7171,
                          "end": 7713,
                          "name": "tag",
                          "source": 18,
                          "value": "351"
                        },
                        {
                          "begin": 7171,
                          "end": 7713,
                          "name": "JUMPDEST",
                          "source": 18
                        },
                        {
                          "begin": 7171,
                          "end": 7713,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7119,
                          "end": 7719,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7009,
                          "end": 7719,
                          "name": "SWAP3",
                          "source": 18
                        },
                        {
                          "begin": 7009,
                          "end": 7719,
                          "name": "SWAP2",
                          "source": 18
                        },
                        {
                          "begin": 7009,
                          "end": 7719,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7009,
                          "end": 7719,
                          "name": "POP",
                          "source": 18
                        },
                        {
                          "begin": 7009,
                          "end": 7719,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 18
                        },
                        {
                          "begin": 1303,
                          "end": 1463,
                          "name": "tag",
                          "source": 11,
                          "value": "281"
                        },
                        {
                          "begin": 1303,
                          "end": 1463,
                          "name": "JUMPDEST",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "PUSH",
                          "source": 11,
                          "value": "40"
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "MLOAD",
                          "source": 11
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 8510,
                          "end": 8542,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 8510,
                          "end": 8542,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "PUSH",
                          "source": 11,
                          "value": "24"
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP3",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "ADD",
                          "source": 11
                        },
                        {
                          "begin": 8492,
                          "end": 8543,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 8559,
                          "end": 8577,
                          "name": "PUSH",
                          "source": 19,
                          "value": "44"
                        },
                        {
                          "begin": 8559,
                          "end": 8577,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 8559,
                          "end": 8577,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 8559,
                          "end": 8577,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 8552,
                          "end": 8586,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 8552,
                          "end": 8586,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 8552,
                          "end": 8586,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP3",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "MLOAD",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP4",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "SUB",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "SWAP2",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "ADD",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP2",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "MSTORE",
                          "source": 11
                        },
                        {
                          "begin": 8465,
                          "end": 8483,
                          "name": "PUSH",
                          "source": 19,
                          "value": "64"
                        },
                        {
                          "begin": 8465,
                          "end": 8483,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 8465,
                          "end": 8483,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 8465,
                          "end": 8483,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "SWAP2",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "MSTORE",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "PUSH",
                          "source": 11,
                          "value": "20"
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP2",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "ADD",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "MLOAD",
                          "source": 11
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "AND",
                          "source": 11
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A9059CBB"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "OR",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 1412,
                          "end": 1455,
                          "name": "MSTORE",
                          "source": 11
                        },
                        {
                          "begin": 1385,
                          "end": 1456,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "320"
                        },
                        {
                          "begin": 1385,
                          "end": 1456,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 1405,
                          "end": 1410,
                          "name": "DUP5",
                          "source": 11
                        },
                        {
                          "begin": 1405,
                          "end": 1410,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 1385,
                          "end": 1404,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "375"
                        },
                        {
                          "begin": 1385,
                          "end": 1456,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 11
                        },
                        {
                          "begin": 3105,
                          "end": 3231,
                          "name": "tag",
                          "source": 5,
                          "value": "295"
                        },
                        {
                          "begin": 3105,
                          "end": 3231,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "SLOAD",
                          "source": 5
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "PUSH",
                          "source": 5,
                          "value": "FF"
                        },
                        {
                          "begin": 2821,
                          "end": 2830,
                          "name": "AND",
                          "source": 5
                        },
                        {
                          "begin": 3163,
                          "end": 3225,
                          "name": "PUSH [tag]",
                          "source": 5,
                          "value": "196"
                        },
                        {
                          "begin": 3163,
                          "end": 3225,
                          "name": "JUMPI",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "PUSH",
                          "source": 5,
                          "value": "40"
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "MLOAD",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "8DFC202B"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "DUP2",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "MSTORE",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "PUSH",
                          "source": 5,
                          "value": "4"
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "ADD",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "PUSH",
                          "source": 5,
                          "value": "40"
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "MLOAD",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "DUP1",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "SWAP2",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "SUB",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "SWAP1",
                          "source": 5
                        },
                        {
                          "begin": 3199,
                          "end": 3214,
                          "name": "REVERT",
                          "source": 5
                        },
                        {
                          "begin": 2779,
                          "end": 3114,
                          "name": "tag",
                          "source": 7,
                          "value": "321"
                        },
                        {
                          "begin": 2779,
                          "end": 3114,
                          "name": "JUMPDEST",
                          "source": 7
                        },
                        {
                          "begin": 2870,
                          "end": 2907,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "384"
                        },
                        {
                          "begin": 2889,
                          "end": 2906,
                          "name": "DUP3",
                          "source": 7
                        },
                        {
                          "begin": 2870,
                          "end": 2888,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "385"
                        },
                        {
                          "begin": 2870,
                          "end": 2907,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 7
                        },
                        {
                          "begin": 2870,
                          "end": 2907,
                          "name": "tag",
                          "source": 7,
                          "value": "384"
                        },
                        {
                          "begin": 2870,
                          "end": 2907,
                          "name": "JUMPDEST",
                          "source": 7
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "PUSH",
                          "source": 7,
                          "value": "40"
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "MLOAD",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "DUP4",
                          "source": 7
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "AND",
                          "source": 7
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "PUSH",
                          "source": 7,
                          "value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "PUSH",
                          "source": 7,
                          "value": "0"
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 2922,
                          "end": 2949,
                          "name": "LOG2",
                          "source": 7
                        },
                        {
                          "begin": 2964,
                          "end": 2975,
                          "name": "DUP1",
                          "source": 7
                        },
                        {
                          "begin": 2964,
                          "end": 2975,
                          "name": "MLOAD",
                          "source": 7
                        },
                        {
                          "begin": 2964,
                          "end": 2979,
                          "name": "ISZERO",
                          "source": 7
                        },
                        {
                          "begin": 2960,
                          "end": 3108,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "386"
                        },
                        {
                          "begin": 2960,
                          "end": 3108,
                          "name": "JUMPI",
                          "source": 7
                        },
                        {
                          "begin": 2995,
                          "end": 3048,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "320"
                        },
                        {
                          "begin": 3024,
                          "end": 3041,
                          "name": "DUP3",
                          "source": 7
                        },
                        {
                          "begin": 3043,
                          "end": 3047,
                          "name": "DUP3",
                          "source": 7
                        },
                        {
                          "begin": 2995,
                          "end": 3023,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "388"
                        },
                        {
                          "begin": 2995,
                          "end": 3048,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 7
                        },
                        {
                          "begin": 2960,
                          "end": 3108,
                          "name": "tag",
                          "source": 7,
                          "value": "386"
                        },
                        {
                          "begin": 2960,
                          "end": 3108,
                          "name": "JUMPDEST",
                          "source": 7
                        },
                        {
                          "begin": 3079,
                          "end": 3097,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "204"
                        },
                        {
                          "begin": 3079,
                          "end": 3095,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "391"
                        },
                        {
                          "begin": 3079,
                          "end": 3097,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 7
                        },
                        {
                          "begin": 7084,
                          "end": 7225,
                          "name": "tag",
                          "source": 1,
                          "value": "330"
                        },
                        {
                          "begin": 7084,
                          "end": 7225,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": 8870,
                          "end": 8891,
                          "name": "PUSH",
                          "source": 1,
                          "value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
                        },
                        {
                          "begin": 8560,
                          "end": 8600,
                          "name": "SLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "40"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 8560,
                          "end": 8600,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 8560,
                          "end": 8600,
                          "name": "DIV",
                          "source": 1
                        },
                        {
                          "begin": 8560,
                          "end": 8600,
                          "name": "PUSH",
                          "source": 1,
                          "value": "FF"
                        },
                        {
                          "begin": 8560,
                          "end": 8600,
                          "name": "AND",
                          "source": 1
                        },
                        {
                          "begin": 7146,
                          "end": 7219,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "196"
                        },
                        {
                          "begin": 7146,
                          "end": 7219,
                          "name": "JUMPI",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "PUSH",
                          "source": 1,
                          "value": "40"
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "MLOAD",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1AFCD79F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "DUP2",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "MSTORE",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "PUSH",
                          "source": 1,
                          "value": "4"
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "ADD",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "PUSH",
                          "source": 1,
                          "value": "40"
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "MLOAD",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "DUP1",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "SWAP2",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "SUB",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "SWAP1",
                          "source": 1
                        },
                        {
                          "begin": 7191,
                          "end": 7208,
                          "name": "REVERT",
                          "source": 1
                        },
                        {
                          "begin": 1980,
                          "end": 2215,
                          "name": "tag",
                          "source": 0,
                          "value": "336"
                        },
                        {
                          "begin": 1980,
                          "end": 2215,
                          "name": "JUMPDEST",
                          "source": 0
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "271"
                        },
                        {
                          "begin": 6931,
                          "end": 6949,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "330"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 1
                        },
                        {
                          "begin": 1939,
                          "end": 2095,
                          "name": "tag",
                          "source": 5,
                          "value": "341"
                        },
                        {
                          "begin": 1939,
                          "end": 2095,
                          "name": "JUMPDEST",
                          "source": 5
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "403"
                        },
                        {
                          "begin": 6931,
                          "end": 6949,
                          "name": "PUSH [tag]",
                          "source": 1,
                          "value": "330"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 1
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "tag",
                          "source": 1,
                          "value": "403"
                        },
                        {
                          "begin": 6931,
                          "end": 6951,
                          "name": "JUMPDEST",
                          "source": 1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 2071,
                          "end": 2088,
                          "name": "DUP1",
                          "source": 5
                        },
                        {
                          "begin": 2071,
                          "end": 2088,
                          "name": "SLOAD",
                          "source": 5
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "FF"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 2071,
                          "end": 2088,
                          "modifierDepth": 1,
                          "name": "AND",
                          "source": 5
                        },
                        {
                          "begin": 2071,
                          "end": 2088,
                          "name": "SWAP1",
                          "source": 5
                        },
                        {
                          "begin": 2071,
                          "end": 2088,
                          "name": "SSTORE",
                          "source": 5
                        },
                        {
                          "begin": 1939,
                          "end": 2095,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 5
                        },
                        {
                          "begin": 4059,
                          "end": 4688,
                          "name": "tag",
                          "source": 11,
                          "value": "375"
                        },
                        {
                          "begin": 4059,
                          "end": 4688,
                          "name": "JUMPDEST",
                          "source": 11
                        },
                        {
                          "begin": 4478,
                          "end": 4501,
                          "name": "PUSH",
                          "source": 11,
                          "value": "0"
                        },
                        {
                          "begin": 4504,
                          "end": 4537,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "407"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 4504,
                          "end": 4531,
                          "name": "DUP5",
                          "source": 11
                        },
                        {
                          "begin": 4504,
                          "end": 4531,
                          "name": "AND",
                          "source": 11
                        },
                        {
                          "begin": 4532,
                          "end": 4536,
                          "name": "DUP4",
                          "source": 11
                        },
                        {
                          "begin": 4504,
                          "end": 4531,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "408"
                        },
                        {
                          "begin": 4504,
                          "end": 4537,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 11
                        },
                        {
                          "begin": 4504,
                          "end": 4537,
                          "name": "tag",
                          "source": 11,
                          "value": "407"
                        },
                        {
                          "begin": 4504,
                          "end": 4537,
                          "name": "JUMPDEST",
                          "source": 11
                        },
                        {
                          "begin": 4478,
                          "end": 4537,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 4478,
                          "end": 4537,
                          "name": "POP",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4561,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4568,
                          "name": "MLOAD",
                          "source": 11
                        },
                        {
                          "begin": 4572,
                          "end": 4573,
                          "name": "PUSH",
                          "source": 11,
                          "value": "0"
                        },
                        {
                          "begin": 4551,
                          "end": 4573,
                          "name": "EQ",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4573,
                          "name": "ISZERO",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4608,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4608,
                          "name": "ISZERO",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4608,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "409"
                        },
                        {
                          "begin": 4551,
                          "end": 4608,
                          "name": "JUMPI",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4608,
                          "name": "POP",
                          "source": 11
                        },
                        {
                          "begin": 4589,
                          "end": 4599,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "DUP1",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "PUSH",
                          "source": 11,
                          "value": "20"
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "ADD",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "MLOAD",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "DUP2",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "ADD",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "410"
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "SWAP2",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "SWAP1",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "411"
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 11
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "tag",
                          "source": 11,
                          "value": "410"
                        },
                        {
                          "begin": 4578,
                          "end": 4608,
                          "name": "JUMPDEST",
                          "source": 11
                        },
                        {
                          "begin": 4577,
                          "end": 4608,
                          "name": "ISZERO",
                          "source": 11
                        },
                        {
                          "begin": 4551,
                          "end": 4608,
                          "name": "tag",
                          "source": 11,
                          "value": "409"
                        },
                        {
                          "begin": 4551,
                          "end": 4608,
                          "name": "JUMPDEST",
                          "source": 11
                        },
                        {
                          "begin": 4547,
                          "end": 4682,
                          "name": "ISZERO",
                          "source": 11
                        },
                        {
                          "begin": 4547,
                          "end": 4682,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "320"
                        },
                        {
                          "begin": 4547,
                          "end": 4682,
                          "name": "JUMPI",
                          "source": 11
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "PUSH",
                          "source": 11,
                          "value": "40"
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "MLOAD",
                          "source": 11
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "5274AFE7"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "DUP2",
                          "source": 11
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "MSTORE",
                          "source": 11
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "PUSH",
                          "source": 11,
                          "value": "4"
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "DUP3",
                          "source": 11
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "ADD",
                          "source": 11
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4631,
                          "end": 4671,
                          "name": "PUSH [tag]",
                          "source": 11,
                          "value": "274"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2467,
                          "name": "tag",
                          "source": 7,
                          "value": "385"
                        },
                        {
                          "begin": 2186,
                          "end": 2467,
                          "name": "JUMPDEST",
                          "source": 7
                        },
                        {
                          "begin": 2263,
                          "end": 2280,
                          "name": "DUP1",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2263,
                          "end": 2292,
                          "name": "AND",
                          "source": 7
                        },
                        {
                          "begin": 2263,
                          "end": 2292,
                          "name": "EXTCODESIZE",
                          "source": 7
                        },
                        {
                          "begin": 2296,
                          "end": 2297,
                          "name": "PUSH",
                          "source": 7,
                          "value": "0"
                        },
                        {
                          "begin": 2263,
                          "end": 2297,
                          "name": "SUB",
                          "source": 7
                        },
                        {
                          "begin": 2259,
                          "end": 2378,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "416"
                        },
                        {
                          "begin": 2259,
                          "end": 2378,
                          "name": "JUMPI",
                          "source": 7
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "PUSH",
                          "source": 7,
                          "value": "40"
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "MLOAD",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "4C9C8CE3"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "DUP2",
                          "source": 7
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "MSTORE",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "PUSH",
                          "source": 7,
                          "value": "4"
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "DUP3",
                          "source": 7
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "ADD",
                          "source": 7
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 2320,
                          "end": 2367,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "274"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 2259,
                          "end": 2378,
                          "name": "tag",
                          "source": 7,
                          "value": "416"
                        },
                        {
                          "begin": 2259,
                          "end": 2378,
                          "name": "JUMPDEST",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP1",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "20"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH data",
                          "source": -1,
                          "value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP4",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "CODECOPY",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "DUP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MLOAD",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SWAP2",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "MSTORE",
                          "source": -1
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "DUP1",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SLOAD",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "AND",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SWAP3",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SWAP3",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "AND",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SWAP2",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SWAP2",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "OR",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 2387,
                          "end": 2460,
                          "name": "SSTORE",
                          "source": 7
                        },
                        {
                          "begin": 2186,
                          "end": 2467,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 7
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "tag",
                          "source": 14,
                          "value": "388"
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4189,
                          "end": 4201,
                          "name": "PUSH",
                          "source": 14,
                          "value": "60"
                        },
                        {
                          "begin": 4214,
                          "end": 4226,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 4228,
                          "end": 4251,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4261,
                          "name": "DUP5",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 4255,
                          "end": 4274,
                          "name": "AND",
                          "source": 14
                        },
                        {
                          "begin": 4275,
                          "end": 4279,
                          "name": "DUP5",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "420"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "SWAP1",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "421"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "tag",
                          "source": 14,
                          "value": "420"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "SUB",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP6",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "GAS",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DELEGATECALL",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "EQ",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "424"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "JUMPI",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "1F"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "NOT",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "3F"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "AND",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "20"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "DUP5",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "RETURNDATACOPY",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "423"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "tag",
                          "source": 14,
                          "value": "424"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "PUSH",
                          "source": 14,
                          "value": "60"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "tag",
                          "source": 14,
                          "value": "423"
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4255,
                          "end": 4280,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4213,
                          "end": 4280,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 4213,
                          "end": 4280,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4213,
                          "end": 4280,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 4213,
                          "end": 4280,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4297,
                          "end": 4352,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "425"
                        },
                        {
                          "begin": 4324,
                          "end": 4330,
                          "name": "DUP6",
                          "source": 14
                        },
                        {
                          "begin": 4332,
                          "end": 4339,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 4341,
                          "end": 4351,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 4297,
                          "end": 4323,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "426"
                        },
                        {
                          "begin": 4297,
                          "end": 4352,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 4297,
                          "end": 4352,
                          "name": "tag",
                          "source": 14,
                          "value": "425"
                        },
                        {
                          "begin": 4297,
                          "end": 4352,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4290,
                          "end": 4352,
                          "name": "SWAP3",
                          "source": 14
                        },
                        {
                          "begin": 4290,
                          "end": 4352,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4290,
                          "end": 4352,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4290,
                          "end": 4352,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "tag",
                          "source": 14,
                          "value": "419"
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "SWAP3",
                          "source": 14
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 4106,
                          "end": 4359,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 6598,
                          "end": 6720,
                          "name": "tag",
                          "source": 7,
                          "value": "391"
                        },
                        {
                          "begin": 6598,
                          "end": 6720,
                          "name": "JUMPDEST",
                          "source": 7
                        },
                        {
                          "begin": 6648,
                          "end": 6657,
                          "name": "CALLVALUE",
                          "source": 7
                        },
                        {
                          "begin": 6648,
                          "end": 6661,
                          "name": "ISZERO",
                          "source": 7
                        },
                        {
                          "begin": 6644,
                          "end": 6714,
                          "name": "PUSH [tag]",
                          "source": 7,
                          "value": "196"
                        },
                        {
                          "begin": 6644,
                          "end": 6714,
                          "name": "JUMPI",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "PUSH",
                          "source": 7,
                          "value": "40"
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "MLOAD",
                          "source": 7
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "B398979F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "DUP2",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "MSTORE",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "PUSH",
                          "source": 7,
                          "value": "4"
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "ADD",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "PUSH",
                          "source": 7,
                          "value": "40"
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "MLOAD",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "DUP1",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "SWAP2",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "SUB",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "SWAP1",
                          "source": 7
                        },
                        {
                          "begin": 6684,
                          "end": 6703,
                          "name": "REVERT",
                          "source": 7
                        },
                        {
                          "begin": 2705,
                          "end": 2856,
                          "name": "tag",
                          "source": 14,
                          "value": "408"
                        },
                        {
                          "begin": 2705,
                          "end": 2856,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 2780,
                          "end": 2792,
                          "name": "PUSH",
                          "source": 14,
                          "value": "60"
                        },
                        {
                          "begin": 2811,
                          "end": 2849,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "432"
                        },
                        {
                          "begin": 2833,
                          "end": 2839,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 2841,
                          "end": 2845,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 2847,
                          "end": 2848,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 2811,
                          "end": 2832,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "433"
                        },
                        {
                          "begin": 2811,
                          "end": 2849,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 2811,
                          "end": 2849,
                          "name": "tag",
                          "source": 14,
                          "value": "432"
                        },
                        {
                          "begin": 2811,
                          "end": 2849,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 2804,
                          "end": 2849,
                          "name": "SWAP4",
                          "source": 14
                        },
                        {
                          "begin": 2705,
                          "end": 2856,
                          "name": "SWAP3",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 2705,
                          "end": 2856,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 4625,
                          "end": 5207,
                          "name": "tag",
                          "source": 14,
                          "value": "426"
                        },
                        {
                          "begin": 4625,
                          "end": 5207,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4769,
                          "end": 4781,
                          "name": "PUSH",
                          "source": 14,
                          "value": "60"
                        },
                        {
                          "begin": 4798,
                          "end": 4805,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 4793,
                          "end": 5201,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "435"
                        },
                        {
                          "begin": 4793,
                          "end": 5201,
                          "name": "JUMPI",
                          "source": 14
                        },
                        {
                          "begin": 4821,
                          "end": 4840,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "436"
                        },
                        {
                          "begin": 4829,
                          "end": 4839,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 4821,
                          "end": 4828,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "437"
                        },
                        {
                          "begin": 4821,
                          "end": 4840,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 4821,
                          "end": 4840,
                          "name": "tag",
                          "source": 14,
                          "value": "436"
                        },
                        {
                          "begin": 4821,
                          "end": 4840,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 4793,
                          "end": 5201,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "432"
                        },
                        {
                          "begin": 4793,
                          "end": 5201,
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 4793,
                          "end": 5201,
                          "name": "tag",
                          "source": 14,
                          "value": "435"
                        },
                        {
                          "begin": 4793,
                          "end": 5201,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 5045,
                          "end": 5062,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 5045,
                          "end": 5062,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 5045,
                          "end": 5067,
                          "name": "ISZERO",
                          "source": 14
                        },
                        {
                          "begin": 5045,
                          "end": 5094,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 5045,
                          "end": 5094,
                          "name": "ISZERO",
                          "source": 14
                        },
                        {
                          "begin": 5045,
                          "end": 5094,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "439"
                        },
                        {
                          "begin": 5045,
                          "end": 5094,
                          "name": "JUMPI",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 5071,
                          "end": 5089,
                          "name": "DUP5",
                          "source": 14
                        },
                        {
                          "begin": 5071,
                          "end": 5089,
                          "name": "AND",
                          "source": 14
                        },
                        {
                          "begin": 5071,
                          "end": 5089,
                          "name": "EXTCODESIZE",
                          "source": 14
                        },
                        {
                          "begin": 5071,
                          "end": 5094,
                          "name": "ISZERO",
                          "source": 14
                        },
                        {
                          "begin": 5045,
                          "end": 5094,
                          "name": "tag",
                          "source": 14,
                          "value": "439"
                        },
                        {
                          "begin": 5045,
                          "end": 5094,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 5041,
                          "end": 5160,
                          "name": "ISZERO",
                          "source": 14
                        },
                        {
                          "begin": 5041,
                          "end": 5160,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "440"
                        },
                        {
                          "begin": 5041,
                          "end": 5160,
                          "name": "JUMPI",
                          "source": 14
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "9996B315"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 2231,
                          "end": 2263,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "PUSH",
                          "source": 14,
                          "value": "4"
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5121,
                          "end": 5145,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "274"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 5041,
                          "end": 5160,
                          "name": "tag",
                          "source": 14,
                          "value": "440"
                        },
                        {
                          "begin": 5041,
                          "end": 5160,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 5180,
                          "end": 5190,
                          "name": "SWAP3",
                          "source": 14
                        },
                        {
                          "begin": 4625,
                          "end": 5207,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4625,
                          "end": 5207,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 3180,
                          "end": 3572,
                          "name": "tag",
                          "source": 14,
                          "value": "433"
                        },
                        {
                          "begin": 3180,
                          "end": 3572,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 3279,
                          "end": 3291,
                          "name": "PUSH",
                          "source": 14,
                          "value": "60"
                        },
                        {
                          "begin": 3331,
                          "end": 3336,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 3307,
                          "end": 3328,
                          "name": "SELFBALANCE",
                          "source": 14
                        },
                        {
                          "begin": 3307,
                          "end": 3336,
                          "name": "LT",
                          "source": 14
                        },
                        {
                          "begin": 3303,
                          "end": 3411,
                          "name": "ISZERO",
                          "source": 14
                        },
                        {
                          "begin": 3303,
                          "end": 3411,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "443"
                        },
                        {
                          "begin": 3303,
                          "end": 3411,
                          "name": "JUMPI",
                          "source": 14
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "CD786059"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": 3394,
                          "end": 3398,
                          "name": "ADDRESS",
                          "source": 14
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "PUSH",
                          "source": 14,
                          "value": "4"
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 2213,
                          "end": 2264,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 2186,
                          "end": 2204,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3359,
                          "end": 3400,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "274"
                        },
                        {
                          "begin": 2067,
                          "end": 2270,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 3303,
                          "end": 3411,
                          "name": "tag",
                          "source": 14,
                          "value": "443"
                        },
                        {
                          "begin": 3303,
                          "end": 3411,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 3421,
                          "end": 3433,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 3435,
                          "end": 3458,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3468,
                          "name": "DUP6",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 3462,
                          "end": 3473,
                          "name": "AND",
                          "source": 14
                        },
                        {
                          "begin": 3481,
                          "end": 3486,
                          "name": "DUP5",
                          "source": 14
                        },
                        {
                          "begin": 3488,
                          "end": 3492,
                          "name": "DUP7",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "445"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "SWAP1",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "421"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "tag",
                          "source": 14,
                          "value": "445"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "SUB",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP6",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP8",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "GAS",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "CALL",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "SWAP3",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "EQ",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "448"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "JUMPI",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "1F"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "NOT",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "3F"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "AND",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "RETURNDATASIZE",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "0"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "20"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "DUP5",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "RETURNDATACOPY",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "447"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "tag",
                          "source": 14,
                          "value": "448"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "PUSH",
                          "source": 14,
                          "value": "60"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "tag",
                          "source": 14,
                          "value": "447"
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 3462,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3420,
                          "end": 3493,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 3420,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3420,
                          "end": 3493,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 3420,
                          "end": 3493,
                          "name": "POP",
                          "source": 14
                        },
                        {
                          "begin": 3510,
                          "end": 3565,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "449"
                        },
                        {
                          "begin": 3537,
                          "end": 3543,
                          "name": "DUP7",
                          "source": 14
                        },
                        {
                          "begin": 3545,
                          "end": 3552,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 3554,
                          "end": 3564,
                          "name": "DUP4",
                          "source": 14
                        },
                        {
                          "begin": 3510,
                          "end": 3536,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "426"
                        },
                        {
                          "begin": 3510,
                          "end": 3565,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 3510,
                          "end": 3565,
                          "name": "tag",
                          "source": 14,
                          "value": "449"
                        },
                        {
                          "begin": 3510,
                          "end": 3565,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 3503,
                          "end": 3565,
                          "name": "SWAP7",
                          "source": 14
                        },
                        {
                          "begin": 3180,
                          "end": 3572,
                          "name": "SWAP6",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 3180,
                          "end": 3572,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 14
                        },
                        {
                          "begin": 5743,
                          "end": 6259,
                          "name": "tag",
                          "source": 14,
                          "value": "437"
                        },
                        {
                          "begin": 5743,
                          "end": 6259,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 5874,
                          "end": 5891,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 5874,
                          "end": 5891,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 5874,
                          "end": 5895,
                          "name": "ISZERO",
                          "source": 14
                        },
                        {
                          "begin": 5870,
                          "end": 6253,
                          "name": "PUSH [tag]",
                          "source": 14,
                          "value": "451"
                        },
                        {
                          "begin": 5870,
                          "end": 6253,
                          "name": "JUMPI",
                          "source": 14
                        },
                        {
                          "begin": 6102,
                          "end": 6112,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 6096,
                          "end": 6113,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 6158,
                          "end": 6173,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 6145,
                          "end": 6155,
                          "name": "DUP3",
                          "source": 14
                        },
                        {
                          "begin": 6141,
                          "end": 6143,
                          "name": "PUSH",
                          "source": 14,
                          "value": "20"
                        },
                        {
                          "begin": 6137,
                          "end": 6156,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 6130,
                          "end": 6174,
                          "name": "REVERT",
                          "source": 14
                        },
                        {
                          "begin": 5870,
                          "end": 6253,
                          "name": "tag",
                          "source": 14,
                          "value": "451"
                        },
                        {
                          "begin": 5870,
                          "end": 6253,
                          "name": "JUMPDEST",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A12F521"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "E1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "DUP2",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "MSTORE",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "PUSH",
                          "source": 14,
                          "value": "4"
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "ADD",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "PUSH",
                          "source": 14,
                          "value": "40"
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "MLOAD",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "DUP1",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "SWAP2",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "SUB",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "SWAP1",
                          "source": 14
                        },
                        {
                          "begin": 6225,
                          "end": 6242,
                          "name": "REVERT",
                          "source": 14
                        },
                        {
                          "begin": 14,
                          "end": 194,
                          "name": "tag",
                          "source": 19,
                          "value": "38"
                        },
                        {
                          "begin": 14,
                          "end": 194,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 73,
                          "end": 79,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 126,
                          "end": 128,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 114,
                          "end": 123,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 105,
                          "end": 112,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 101,
                          "end": 124,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 97,
                          "end": 129,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 94,
                          "end": 146,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 94,
                          "end": 146,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "460"
                        },
                        {
                          "begin": 94,
                          "end": 146,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 142,
                          "end": 143,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 139,
                          "end": 140,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 132,
                          "end": 144,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 94,
                          "end": 146,
                          "name": "tag",
                          "source": 19,
                          "value": "460"
                        },
                        {
                          "begin": 94,
                          "end": 146,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 165,
                          "end": 188,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 165,
                          "end": 188,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 14,
                          "end": 194,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 14,
                          "end": 194,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 199,
                          "end": 330,
                          "name": "tag",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 199,
                          "end": 330,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "A0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SHL",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "SUB",
                          "source": -1
                        },
                        {
                          "begin": 274,
                          "end": 305,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 274,
                          "end": 305,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 264,
                          "end": 306,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 264,
                          "end": 306,
                          "name": "EQ",
                          "source": 19
                        },
                        {
                          "begin": 254,
                          "end": 324,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "165"
                        },
                        {
                          "begin": 254,
                          "end": 324,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 320,
                          "end": 321,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 317,
                          "end": 318,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 310,
                          "end": 322,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 335,
                          "end": 462,
                          "name": "tag",
                          "source": 19,
                          "value": "454"
                        },
                        {
                          "begin": 335,
                          "end": 462,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 396,
                          "end": 406,
                          "name": "PUSH",
                          "source": 19,
                          "value": "4E487B71"
                        },
                        {
                          "begin": 391,
                          "end": 394,
                          "name": "PUSH",
                          "source": 19,
                          "value": "E0"
                        },
                        {
                          "begin": 387,
                          "end": 407,
                          "name": "SHL",
                          "source": 19
                        },
                        {
                          "begin": 384,
                          "end": 385,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 377,
                          "end": 408,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 427,
                          "end": 431,
                          "name": "PUSH",
                          "source": 19,
                          "value": "41"
                        },
                        {
                          "begin": 424,
                          "end": 425,
                          "name": "PUSH",
                          "source": 19,
                          "value": "4"
                        },
                        {
                          "begin": 417,
                          "end": 432,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 451,
                          "end": 455,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 448,
                          "end": 449,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 441,
                          "end": 456,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 467,
                          "end": 1185,
                          "name": "tag",
                          "source": 19,
                          "value": "455"
                        },
                        {
                          "begin": 467,
                          "end": 1185,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 509,
                          "end": 514,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 562,
                          "end": 565,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 555,
                          "end": 559,
                          "name": "PUSH",
                          "source": 19,
                          "value": "1F"
                        },
                        {
                          "begin": 547,
                          "end": 553,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 543,
                          "end": 560,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 539,
                          "end": 566,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 529,
                          "end": 584,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "465"
                        },
                        {
                          "begin": 529,
                          "end": 584,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 580,
                          "end": 581,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 577,
                          "end": 578,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 570,
                          "end": 582,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 529,
                          "end": 584,
                          "name": "tag",
                          "source": 19,
                          "value": "465"
                        },
                        {
                          "begin": 529,
                          "end": 584,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 616,
                          "end": 622,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 603,
                          "end": 623,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 642,
                          "end": 660,
                          "name": "PUSH",
                          "source": 19,
                          "value": "FFFFFFFFFFFFFFFF"
                        },
                        {
                          "begin": 679,
                          "end": 681,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 675,
                          "end": 677,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 672,
                          "end": 682,
                          "name": "GT",
                          "source": 19
                        },
                        {
                          "begin": 669,
                          "end": 705,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 669,
                          "end": 705,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "467"
                        },
                        {
                          "begin": 669,
                          "end": 705,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 685,
                          "end": 703,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "467"
                        },
                        {
                          "begin": 685,
                          "end": 703,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "454"
                        },
                        {
                          "begin": 685,
                          "end": 703,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 685,
                          "end": 703,
                          "name": "tag",
                          "source": 19,
                          "value": "467"
                        },
                        {
                          "begin": 685,
                          "end": 703,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 760,
                          "end": 762,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 754,
                          "end": 763,
                          "name": "MLOAD",
                          "source": 19
                        },
                        {
                          "begin": 728,
                          "end": 730,
                          "name": "PUSH",
                          "source": 19,
                          "value": "1F"
                        },
                        {
                          "begin": 814,
                          "end": 827,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 814,
                          "end": 827,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 810,
                          "end": 832,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 810,
                          "end": 832,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 810,
                          "end": 832,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 834,
                          "end": 836,
                          "name": "PUSH",
                          "source": 19,
                          "value": "3F"
                        },
                        {
                          "begin": 806,
                          "end": 837,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 802,
                          "end": 842,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 790,
                          "end": 843,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 790,
                          "end": 843,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 790,
                          "end": 843,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 858,
                          "end": 876,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 858,
                          "end": 876,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 858,
                          "end": 876,
                          "name": "GT",
                          "source": 19
                        },
                        {
                          "begin": 878,
                          "end": 900,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 878,
                          "end": 900,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 878,
                          "end": 900,
                          "name": "LT",
                          "source": 19
                        },
                        {
                          "begin": 855,
                          "end": 901,
                          "name": "OR",
                          "source": 19
                        },
                        {
                          "begin": 852,
                          "end": 924,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 852,
                          "end": 924,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "469"
                        },
                        {
                          "begin": 852,
                          "end": 924,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 904,
                          "end": 922,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "469"
                        },
                        {
                          "begin": 904,
                          "end": 922,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "454"
                        },
                        {
                          "begin": 904,
                          "end": 922,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 904,
                          "end": 922,
                          "name": "tag",
                          "source": 19,
                          "value": "469"
                        },
                        {
                          "begin": 904,
                          "end": 922,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 944,
                          "end": 954,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 940,
                          "end": 942,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 933,
                          "end": 955,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 979,
                          "end": 981,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 971,
                          "end": 977,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 964,
                          "end": 982,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 1025,
                          "end": 1028,
                          "name": "DUP7",
                          "source": 19
                        },
                        {
                          "begin": 1018,
                          "end": 1022,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 1013,
                          "end": 1015,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 1005,
                          "end": 1011,
                          "name": "DUP9",
                          "source": 19
                        },
                        {
                          "begin": 1001,
                          "end": 1016,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 997,
                          "end": 1023,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 994,
                          "end": 1029,
                          "name": "GT",
                          "source": 19
                        },
                        {
                          "begin": 991,
                          "end": 1046,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 991,
                          "end": 1046,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "470"
                        },
                        {
                          "begin": 991,
                          "end": 1046,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 1042,
                          "end": 1043,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 1039,
                          "end": 1040,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 1032,
                          "end": 1044,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 991,
                          "end": 1046,
                          "name": "tag",
                          "source": 19,
                          "value": "470"
                        },
                        {
                          "begin": 991,
                          "end": 1046,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 1106,
                          "end": 1108,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 1099,
                          "end": 1103,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 1091,
                          "end": 1097,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 1087,
                          "end": 1104,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1080,
                          "end": 1084,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 1072,
                          "end": 1078,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 1068,
                          "end": 1085,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1055,
                          "end": 1109,
                          "name": "CALLDATACOPY",
                          "source": 19
                        },
                        {
                          "begin": 1153,
                          "end": 1154,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 1146,
                          "end": 1150,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 1141,
                          "end": 1143,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 1133,
                          "end": 1139,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 1129,
                          "end": 1144,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1125,
                          "end": 1151,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1118,
                          "end": 1155,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 1173,
                          "end": 1179,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 1164,
                          "end": 1179,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 1164,
                          "end": 1179,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1164,
                          "end": 1179,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1164,
                          "end": 1179,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1164,
                          "end": 1179,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1164,
                          "end": 1179,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 467,
                          "end": 1185,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 467,
                          "end": 1185,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 467,
                          "end": 1185,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 467,
                          "end": 1185,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 467,
                          "end": 1185,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "tag",
                          "source": 19,
                          "value": "47"
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 1285,
                          "end": 1291,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 1293,
                          "end": 1299,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 1301,
                          "end": 1307,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 1309,
                          "end": 1315,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 1362,
                          "end": 1365,
                          "name": "PUSH",
                          "source": 19,
                          "value": "80"
                        },
                        {
                          "begin": 1350,
                          "end": 1359,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 1341,
                          "end": 1348,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 1337,
                          "end": 1360,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 1333,
                          "end": 1366,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 1330,
                          "end": 1383,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 1330,
                          "end": 1383,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "472"
                        },
                        {
                          "begin": 1330,
                          "end": 1383,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 1379,
                          "end": 1380,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 1376,
                          "end": 1377,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 1369,
                          "end": 1381,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 1330,
                          "end": 1383,
                          "name": "tag",
                          "source": 19,
                          "value": "472"
                        },
                        {
                          "begin": 1330,
                          "end": 1383,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 1418,
                          "end": 1427,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 1405,
                          "end": 1428,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 1437,
                          "end": 1468,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "473"
                        },
                        {
                          "begin": 1462,
                          "end": 1467,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 1437,
                          "end": 1468,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 1437,
                          "end": 1468,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 1437,
                          "end": 1468,
                          "name": "tag",
                          "source": 19,
                          "value": "473"
                        },
                        {
                          "begin": 1437,
                          "end": 1468,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 1487,
                          "end": 1492,
                          "name": "SWAP4",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1544,
                          "end": 1546,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 1529,
                          "end": 1547,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 1529,
                          "end": 1547,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1516,
                          "end": 1548,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 1557,
                          "end": 1590,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "474"
                        },
                        {
                          "begin": 1516,
                          "end": 1548,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 1557,
                          "end": 1590,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 1557,
                          "end": 1590,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 1557,
                          "end": 1590,
                          "name": "tag",
                          "source": 19,
                          "value": "474"
                        },
                        {
                          "begin": 1557,
                          "end": 1590,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 1609,
                          "end": 1616,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1663,
                          "end": 1665,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 1648,
                          "end": 1666,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 1648,
                          "end": 1666,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1635,
                          "end": 1667,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 1635,
                          "end": 1667,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 1718,
                          "end": 1720,
                          "name": "PUSH",
                          "source": 19,
                          "value": "60"
                        },
                        {
                          "begin": 1703,
                          "end": 1721,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 1703,
                          "end": 1721,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1690,
                          "end": 1722,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 1745,
                          "end": 1763,
                          "name": "PUSH",
                          "source": 19,
                          "value": "FFFFFFFFFFFFFFFF"
                        },
                        {
                          "begin": 1734,
                          "end": 1764,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 1734,
                          "end": 1764,
                          "name": "GT",
                          "source": 19
                        },
                        {
                          "begin": 1731,
                          "end": 1781,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 1731,
                          "end": 1781,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "475"
                        },
                        {
                          "begin": 1731,
                          "end": 1781,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 1777,
                          "end": 1778,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 1774,
                          "end": 1775,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 1767,
                          "end": 1779,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 1731,
                          "end": 1781,
                          "name": "tag",
                          "source": 19,
                          "value": "475"
                        },
                        {
                          "begin": 1731,
                          "end": 1781,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 1800,
                          "end": 1849,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "476"
                        },
                        {
                          "begin": 1841,
                          "end": 1848,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 1832,
                          "end": 1838,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 1821,
                          "end": 1830,
                          "name": "DUP9",
                          "source": 19
                        },
                        {
                          "begin": 1817,
                          "end": 1839,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 1800,
                          "end": 1849,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "455"
                        },
                        {
                          "begin": 1800,
                          "end": 1849,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 1800,
                          "end": 1849,
                          "name": "tag",
                          "source": 19,
                          "value": "476"
                        },
                        {
                          "begin": 1800,
                          "end": 1849,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 1790,
                          "end": 1849,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 1790,
                          "end": 1849,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1790,
                          "end": 1849,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "SWAP6",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 1190,
                          "end": 1855,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "name": "tag",
                          "source": 19,
                          "value": "84"
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 2758,
                          "end": 2764,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 2766,
                          "end": 2772,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 2819,
                          "end": 2821,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 2807,
                          "end": 2816,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 2798,
                          "end": 2805,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 2794,
                          "end": 2817,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 2790,
                          "end": 2822,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 2787,
                          "end": 2839,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 2787,
                          "end": 2839,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "482"
                        },
                        {
                          "begin": 2787,
                          "end": 2839,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 2835,
                          "end": 2836,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 2832,
                          "end": 2833,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 2825,
                          "end": 2837,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 2787,
                          "end": 2839,
                          "name": "tag",
                          "source": 19,
                          "value": "482"
                        },
                        {
                          "begin": 2787,
                          "end": 2839,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 2874,
                          "end": 2883,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 2861,
                          "end": 2884,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 2893,
                          "end": 2924,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "483"
                        },
                        {
                          "begin": 2918,
                          "end": 2923,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 2893,
                          "end": 2924,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 2893,
                          "end": 2924,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 2893,
                          "end": 2924,
                          "name": "tag",
                          "source": 19,
                          "value": "483"
                        },
                        {
                          "begin": 2893,
                          "end": 2924,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 2943,
                          "end": 2948,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 2999,
                          "end": 3001,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 2984,
                          "end": 3002,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 2984,
                          "end": 3002,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 2971,
                          "end": 3003,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 3026,
                          "end": 3044,
                          "name": "PUSH",
                          "source": 19,
                          "value": "FFFFFFFFFFFFFFFF"
                        },
                        {
                          "begin": 3015,
                          "end": 3045,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 3015,
                          "end": 3045,
                          "name": "GT",
                          "source": 19
                        },
                        {
                          "begin": 3012,
                          "end": 3062,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 3012,
                          "end": 3062,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "484"
                        },
                        {
                          "begin": 3012,
                          "end": 3062,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 3058,
                          "end": 3059,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 3055,
                          "end": 3056,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 3048,
                          "end": 3060,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 3012,
                          "end": 3062,
                          "name": "tag",
                          "source": 19,
                          "value": "484"
                        },
                        {
                          "begin": 3012,
                          "end": 3062,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 3081,
                          "end": 3130,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "485"
                        },
                        {
                          "begin": 3122,
                          "end": 3129,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 3113,
                          "end": 3119,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 3102,
                          "end": 3111,
                          "name": "DUP7",
                          "source": 19
                        },
                        {
                          "begin": 3098,
                          "end": 3120,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3081,
                          "end": 3130,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "455"
                        },
                        {
                          "begin": 3081,
                          "end": 3130,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 3081,
                          "end": 3130,
                          "name": "tag",
                          "source": 19,
                          "value": "485"
                        },
                        {
                          "begin": 3081,
                          "end": 3130,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 3071,
                          "end": 3130,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 3071,
                          "end": 3130,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 3071,
                          "end": 3130,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "name": "POP",
                          "source": 19
                        },
                        {
                          "begin": 2681,
                          "end": 3136,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 3323,
                          "end": 3638,
                          "name": "tag",
                          "source": 19,
                          "value": "94"
                        },
                        {
                          "begin": 3323,
                          "end": 3638,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 3391,
                          "end": 3397,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 3399,
                          "end": 3405,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 3452,
                          "end": 3454,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 3440,
                          "end": 3449,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 3431,
                          "end": 3438,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 3427,
                          "end": 3450,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 3423,
                          "end": 3455,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 3420,
                          "end": 3472,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 3420,
                          "end": 3472,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "488"
                        },
                        {
                          "begin": 3420,
                          "end": 3472,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 3468,
                          "end": 3469,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 3465,
                          "end": 3466,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 3458,
                          "end": 3470,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 3420,
                          "end": 3472,
                          "name": "tag",
                          "source": 19,
                          "value": "488"
                        },
                        {
                          "begin": 3420,
                          "end": 3472,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 3507,
                          "end": 3516,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 3494,
                          "end": 3517,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 3526,
                          "end": 3557,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "489"
                        },
                        {
                          "begin": 3551,
                          "end": 3556,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 3526,
                          "end": 3557,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 3526,
                          "end": 3557,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 3526,
                          "end": 3557,
                          "name": "tag",
                          "source": 19,
                          "value": "489"
                        },
                        {
                          "begin": 3526,
                          "end": 3557,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 3576,
                          "end": 3581,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 3628,
                          "end": 3630,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 3613,
                          "end": 3631,
                          "name": "SWAP4",
                          "source": 19
                        },
                        {
                          "begin": 3613,
                          "end": 3631,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 3613,
                          "end": 3631,
                          "name": "SWAP4",
                          "source": 19
                        },
                        {
                          "begin": 3613,
                          "end": 3631,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 3600,
                          "end": 3632,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 3600,
                          "end": 3632,
                          "name": "SWAP4",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 3323,
                          "end": 3638,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "name": "tag",
                          "source": 19,
                          "value": "113"
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 4417,
                          "end": 4423,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 4425,
                          "end": 4431,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 4433,
                          "end": 4439,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 4441,
                          "end": 4447,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 4449,
                          "end": 4455,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 4457,
                          "end": 4463,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 4510,
                          "end": 4513,
                          "name": "PUSH",
                          "source": 19,
                          "value": "C0"
                        },
                        {
                          "begin": 4498,
                          "end": 4507,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 4489,
                          "end": 4496,
                          "name": "DUP10",
                          "source": 19
                        },
                        {
                          "begin": 4485,
                          "end": 4508,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 4481,
                          "end": 4514,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 4478,
                          "end": 4531,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 4478,
                          "end": 4531,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "493"
                        },
                        {
                          "begin": 4478,
                          "end": 4531,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 4527,
                          "end": 4528,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 4524,
                          "end": 4525,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 4517,
                          "end": 4529,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 4478,
                          "end": 4531,
                          "name": "tag",
                          "source": 19,
                          "value": "493"
                        },
                        {
                          "begin": 4478,
                          "end": 4531,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 4566,
                          "end": 4575,
                          "name": "DUP7",
                          "source": 19
                        },
                        {
                          "begin": 4553,
                          "end": 4576,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 4585,
                          "end": 4616,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "494"
                        },
                        {
                          "begin": 4610,
                          "end": 4615,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 4585,
                          "end": 4616,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 4585,
                          "end": 4616,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 4585,
                          "end": 4616,
                          "name": "tag",
                          "source": 19,
                          "value": "494"
                        },
                        {
                          "begin": 4585,
                          "end": 4616,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 4635,
                          "end": 4640,
                          "name": "SWAP6",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4692,
                          "end": 4694,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 4677,
                          "end": 4695,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 4677,
                          "end": 4695,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4664,
                          "end": 4696,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 4705,
                          "end": 4738,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "495"
                        },
                        {
                          "begin": 4664,
                          "end": 4696,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 4705,
                          "end": 4738,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 4705,
                          "end": 4738,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 4705,
                          "end": 4738,
                          "name": "tag",
                          "source": 19,
                          "value": "495"
                        },
                        {
                          "begin": 4705,
                          "end": 4738,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 4757,
                          "end": 4764,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4816,
                          "end": 4818,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 4801,
                          "end": 4819,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 4801,
                          "end": 4819,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4788,
                          "end": 4820,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 4829,
                          "end": 4862,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "496"
                        },
                        {
                          "begin": 4788,
                          "end": 4820,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 4829,
                          "end": 4862,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 4829,
                          "end": 4862,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 4829,
                          "end": 4862,
                          "name": "tag",
                          "source": 19,
                          "value": "496"
                        },
                        {
                          "begin": 4829,
                          "end": 4862,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "name": "SWAP6",
                          "source": 19
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "name": "SWAP9",
                          "source": 19
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "name": "SWAP8",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4881,
                          "end": 4888,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 4881,
                          "end": 4888,
                          "name": "SWAP6",
                          "source": 19
                        },
                        {
                          "begin": 4935,
                          "end": 4937,
                          "name": "PUSH",
                          "source": 19,
                          "value": "60"
                        },
                        {
                          "begin": 4920,
                          "end": 4938,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 4920,
                          "end": 4938,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4907,
                          "end": 4939,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 4907,
                          "end": 4939,
                          "name": "SWAP6",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4986,
                          "end": 4989,
                          "name": "PUSH",
                          "source": 19,
                          "value": "80"
                        },
                        {
                          "begin": 4971,
                          "end": 4990,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 4971,
                          "end": 4990,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 4958,
                          "end": 4991,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 4958,
                          "end": 4991,
                          "name": "SWAP5",
                          "source": 19
                        },
                        {
                          "begin": 5038,
                          "end": 5041,
                          "name": "PUSH",
                          "source": 19,
                          "value": "A0"
                        },
                        {
                          "begin": 5023,
                          "end": 5042,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 5023,
                          "end": 5042,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 5023,
                          "end": 5042,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5010,
                          "end": 5043,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 5010,
                          "end": 5043,
                          "name": "SWAP4",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 4313,
                          "end": 5049,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 5054,
                          "end": 5304,
                          "name": "tag",
                          "source": 19,
                          "value": "456"
                        },
                        {
                          "begin": 5054,
                          "end": 5304,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 5139,
                          "end": 5140,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "tag",
                          "source": 19,
                          "value": "498"
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 5163,
                          "end": 5169,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 5160,
                          "end": 5161,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 5157,
                          "end": 5170,
                          "name": "LT",
                          "source": 19
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "500"
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 5239,
                          "end": 5250,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 5239,
                          "end": 5250,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 5239,
                          "end": 5250,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5233,
                          "end": 5251,
                          "name": "MLOAD",
                          "source": 19
                        },
                        {
                          "begin": 5220,
                          "end": 5231,
                          "name": "DUP4",
                          "source": 19
                        },
                        {
                          "begin": 5220,
                          "end": 5231,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 5220,
                          "end": 5231,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5213,
                          "end": 5252,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5185,
                          "end": 5187,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 5178,
                          "end": 5188,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "498"
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "tag",
                          "source": 19,
                          "value": "500"
                        },
                        {
                          "begin": 5149,
                          "end": 5262,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 5296,
                          "end": 5297,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 5278,
                          "end": 5294,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 5278,
                          "end": 5294,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5271,
                          "end": 5298,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5054,
                          "end": 5304,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 5309,
                          "end": 5705,
                          "name": "tag",
                          "source": 19,
                          "value": "138"
                        },
                        {
                          "begin": 5309,
                          "end": 5705,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 5458,
                          "end": 5460,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 5447,
                          "end": 5456,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 5440,
                          "end": 5461,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5421,
                          "end": 5425,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 5490,
                          "end": 5496,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 5484,
                          "end": 5497,
                          "name": "MLOAD",
                          "source": 19
                        },
                        {
                          "begin": 5533,
                          "end": 5539,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 5528,
                          "end": 5530,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 5517,
                          "end": 5526,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 5513,
                          "end": 5531,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5506,
                          "end": 5540,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 5549,
                          "end": 5628,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "502"
                        },
                        {
                          "begin": 5621,
                          "end": 5627,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 5616,
                          "end": 5618,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 5605,
                          "end": 5614,
                          "name": "DUP6",
                          "source": 19
                        },
                        {
                          "begin": 5601,
                          "end": 5619,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5596,
                          "end": 5598,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 5588,
                          "end": 5594,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 5584,
                          "end": 5599,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5549,
                          "end": 5628,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "456"
                        },
                        {
                          "begin": 5549,
                          "end": 5628,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 5549,
                          "end": 5628,
                          "name": "tag",
                          "source": 19,
                          "value": "502"
                        },
                        {
                          "begin": 5549,
                          "end": 5628,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 5689,
                          "end": 5691,
                          "name": "PUSH",
                          "source": 19,
                          "value": "1F"
                        },
                        {
                          "begin": 5668,
                          "end": 5683,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "1F"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 5664,
                          "end": 5693,
                          "name": "AND",
                          "source": 19
                        },
                        {
                          "begin": 5649,
                          "end": 5694,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 5649,
                          "end": 5694,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 5649,
                          "end": 5694,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 5649,
                          "end": 5694,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5696,
                          "end": 5698,
                          "name": "PUSH",
                          "source": 19,
                          "value": "40"
                        },
                        {
                          "begin": 5645,
                          "end": 5699,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 5645,
                          "end": 5699,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 5309,
                          "end": 5705,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 5309,
                          "end": 5705,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 5963,
                          "end": 6210,
                          "name": "tag",
                          "source": 19,
                          "value": "148"
                        },
                        {
                          "begin": 5963,
                          "end": 6210,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 6022,
                          "end": 6028,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 6075,
                          "end": 6077,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 6063,
                          "end": 6072,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 6054,
                          "end": 6061,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 6050,
                          "end": 6073,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 6046,
                          "end": 6078,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 6043,
                          "end": 6095,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 6043,
                          "end": 6095,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "505"
                        },
                        {
                          "begin": 6043,
                          "end": 6095,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 6091,
                          "end": 6092,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 6088,
                          "end": 6089,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 6081,
                          "end": 6093,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 6043,
                          "end": 6095,
                          "name": "tag",
                          "source": 19,
                          "value": "505"
                        },
                        {
                          "begin": 6043,
                          "end": 6095,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 6130,
                          "end": 6139,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 6117,
                          "end": 6140,
                          "name": "CALLDATALOAD",
                          "source": 19
                        },
                        {
                          "begin": 6149,
                          "end": 6180,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "432"
                        },
                        {
                          "begin": 6174,
                          "end": 6179,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 6149,
                          "end": 6180,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 6149,
                          "end": 6180,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 6438,
                          "end": 6565,
                          "name": "tag",
                          "source": 19,
                          "value": "457"
                        },
                        {
                          "begin": 6438,
                          "end": 6565,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 6499,
                          "end": 6509,
                          "name": "PUSH",
                          "source": 19,
                          "value": "4E487B71"
                        },
                        {
                          "begin": 6494,
                          "end": 6497,
                          "name": "PUSH",
                          "source": 19,
                          "value": "E0"
                        },
                        {
                          "begin": 6490,
                          "end": 6510,
                          "name": "SHL",
                          "source": 19
                        },
                        {
                          "begin": 6487,
                          "end": 6488,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 6480,
                          "end": 6511,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 6530,
                          "end": 6534,
                          "name": "PUSH",
                          "source": 19,
                          "value": "11"
                        },
                        {
                          "begin": 6527,
                          "end": 6528,
                          "name": "PUSH",
                          "source": 19,
                          "value": "4"
                        },
                        {
                          "begin": 6520,
                          "end": 6535,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 6554,
                          "end": 6558,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 6551,
                          "end": 6552,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 6544,
                          "end": 6559,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 6570,
                          "end": 6695,
                          "name": "tag",
                          "source": 19,
                          "value": "163"
                        },
                        {
                          "begin": 6570,
                          "end": 6695,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 6635,
                          "end": 6644,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 6635,
                          "end": 6644,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 6635,
                          "end": 6644,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 6656,
                          "end": 6666,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 6656,
                          "end": 6666,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 6656,
                          "end": 6666,
                          "name": "GT",
                          "source": 19
                        },
                        {
                          "begin": 6653,
                          "end": 6689,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 6653,
                          "end": 6689,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "419"
                        },
                        {
                          "begin": 6653,
                          "end": 6689,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 6669,
                          "end": 6687,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "419"
                        },
                        {
                          "begin": 6669,
                          "end": 6687,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "457"
                        },
                        {
                          "begin": 6669,
                          "end": 6687,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 7294,
                          "end": 7545,
                          "name": "tag",
                          "source": 19,
                          "value": "260"
                        },
                        {
                          "begin": 7294,
                          "end": 7545,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 7364,
                          "end": 7370,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 7417,
                          "end": 7419,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 7405,
                          "end": 7414,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 7396,
                          "end": 7403,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 7392,
                          "end": 7415,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 7388,
                          "end": 7420,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 7385,
                          "end": 7437,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 7385,
                          "end": 7437,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "515"
                        },
                        {
                          "begin": 7385,
                          "end": 7437,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 7433,
                          "end": 7434,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 7430,
                          "end": 7431,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 7423,
                          "end": 7435,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 7385,
                          "end": 7437,
                          "name": "tag",
                          "source": 19,
                          "value": "515"
                        },
                        {
                          "begin": 7385,
                          "end": 7437,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 7465,
                          "end": 7474,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7459,
                          "end": 7475,
                          "name": "MLOAD",
                          "source": 19
                        },
                        {
                          "begin": 7484,
                          "end": 7515,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "432"
                        },
                        {
                          "begin": 7509,
                          "end": 7514,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7484,
                          "end": 7515,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "453"
                        },
                        {
                          "begin": 7484,
                          "end": 7515,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 7550,
                          "end": 7734,
                          "name": "tag",
                          "source": 19,
                          "value": "311"
                        },
                        {
                          "begin": 7550,
                          "end": 7734,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 7620,
                          "end": 7626,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 7673,
                          "end": 7675,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 7661,
                          "end": 7670,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 7652,
                          "end": 7659,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 7648,
                          "end": 7671,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 7644,
                          "end": 7676,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 7641,
                          "end": 7693,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 7641,
                          "end": 7693,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "518"
                        },
                        {
                          "begin": 7641,
                          "end": 7693,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 7689,
                          "end": 7690,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 7686,
                          "end": 7687,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 7679,
                          "end": 7691,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 7641,
                          "end": 7693,
                          "name": "tag",
                          "source": 19,
                          "value": "518"
                        },
                        {
                          "begin": 7641,
                          "end": 7693,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 7712,
                          "end": 7728,
                          "name": "MLOAD",
                          "source": 19
                        },
                        {
                          "begin": 7712,
                          "end": 7728,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 7550,
                          "end": 7734,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 7550,
                          "end": 7734,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 7739,
                          "end": 7867,
                          "name": "tag",
                          "source": 19,
                          "value": "354"
                        },
                        {
                          "begin": 7739,
                          "end": 7867,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 7806,
                          "end": 7815,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7806,
                          "end": 7815,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7806,
                          "end": 7815,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 7827,
                          "end": 7838,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7827,
                          "end": 7838,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 7827,
                          "end": 7838,
                          "name": "GT",
                          "source": 19
                        },
                        {
                          "begin": 7824,
                          "end": 7861,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 7824,
                          "end": 7861,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "419"
                        },
                        {
                          "begin": 7824,
                          "end": 7861,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 7841,
                          "end": 7859,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "419"
                        },
                        {
                          "begin": 7841,
                          "end": 7859,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "457"
                        },
                        {
                          "begin": 7841,
                          "end": 7859,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 7872,
                          "end": 7999,
                          "name": "tag",
                          "source": 19,
                          "value": "357"
                        },
                        {
                          "begin": 7872,
                          "end": 7999,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 7933,
                          "end": 7943,
                          "name": "PUSH",
                          "source": 19,
                          "value": "4E487B71"
                        },
                        {
                          "begin": 7928,
                          "end": 7931,
                          "name": "PUSH",
                          "source": 19,
                          "value": "E0"
                        },
                        {
                          "begin": 7924,
                          "end": 7944,
                          "name": "SHL",
                          "source": 19
                        },
                        {
                          "begin": 7921,
                          "end": 7922,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 7914,
                          "end": 7945,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 7964,
                          "end": 7968,
                          "name": "PUSH",
                          "source": 19,
                          "value": "32"
                        },
                        {
                          "begin": 7961,
                          "end": 7962,
                          "name": "PUSH",
                          "source": 19,
                          "value": "4"
                        },
                        {
                          "begin": 7954,
                          "end": 7969,
                          "name": "MSTORE",
                          "source": 19
                        },
                        {
                          "begin": 7988,
                          "end": 7992,
                          "name": "PUSH",
                          "source": 19,
                          "value": "24"
                        },
                        {
                          "begin": 7985,
                          "end": 7986,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 7978,
                          "end": 7993,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 8004,
                          "end": 8172,
                          "name": "tag",
                          "source": 19,
                          "value": "362"
                        },
                        {
                          "begin": 8004,
                          "end": 8172,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 8077,
                          "end": 8086,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 8077,
                          "end": 8086,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 8077,
                          "end": 8086,
                          "name": "MUL",
                          "source": 19
                        },
                        {
                          "begin": 8108,
                          "end": 8117,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 8108,
                          "end": 8117,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 8125,
                          "end": 8140,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 8125,
                          "end": 8140,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 8125,
                          "end": 8140,
                          "name": "DIV",
                          "source": 19
                        },
                        {
                          "begin": 8119,
                          "end": 8141,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 8119,
                          "end": 8141,
                          "name": "EQ",
                          "source": 19
                        },
                        {
                          "begin": 8105,
                          "end": 8142,
                          "name": "OR",
                          "source": 19
                        },
                        {
                          "begin": 8095,
                          "end": 8166,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "419"
                        },
                        {
                          "begin": 8095,
                          "end": 8166,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 8146,
                          "end": 8164,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "419"
                        },
                        {
                          "begin": 8146,
                          "end": 8164,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "457"
                        },
                        {
                          "begin": 8146,
                          "end": 8164,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 8177,
                          "end": 8313,
                          "name": "tag",
                          "source": 19,
                          "value": "370"
                        },
                        {
                          "begin": 8177,
                          "end": 8313,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 8216,
                          "end": 8219,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 8244,
                          "end": 8249,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 8234,
                          "end": 8273,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "528"
                        },
                        {
                          "begin": 8234,
                          "end": 8273,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 8253,
                          "end": 8271,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "528"
                        },
                        {
                          "begin": 8253,
                          "end": 8271,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "457"
                        },
                        {
                          "begin": 8253,
                          "end": 8271,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 8253,
                          "end": 8271,
                          "name": "tag",
                          "source": 19,
                          "value": "528"
                        },
                        {
                          "begin": 8253,
                          "end": 8271,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "PUSH",
                          "source": -1,
                          "value": "0"
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "NOT",
                          "source": -1
                        },
                        {
                          "begin": 8289,
                          "end": 8307,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 8289,
                          "end": 8307,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 8177,
                          "end": 8313,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 8597,
                          "end": 8874,
                          "name": "tag",
                          "source": 19,
                          "value": "411"
                        },
                        {
                          "begin": 8597,
                          "end": 8874,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 8664,
                          "end": 8670,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 8717,
                          "end": 8719,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 8705,
                          "end": 8714,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 8696,
                          "end": 8703,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 8692,
                          "end": 8715,
                          "name": "SUB",
                          "source": 19
                        },
                        {
                          "begin": 8688,
                          "end": 8720,
                          "name": "SLT",
                          "source": 19
                        },
                        {
                          "begin": 8685,
                          "end": 8737,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 8685,
                          "end": 8737,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "531"
                        },
                        {
                          "begin": 8685,
                          "end": 8737,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 8733,
                          "end": 8734,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 8730,
                          "end": 8731,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 8723,
                          "end": 8735,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 8685,
                          "end": 8737,
                          "name": "tag",
                          "source": 19,
                          "value": "531"
                        },
                        {
                          "begin": 8685,
                          "end": 8737,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 8765,
                          "end": 8774,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 8759,
                          "end": 8775,
                          "name": "MLOAD",
                          "source": 19
                        },
                        {
                          "begin": 8818,
                          "end": 8823,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 8811,
                          "end": 8824,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 8804,
                          "end": 8825,
                          "name": "ISZERO",
                          "source": 19
                        },
                        {
                          "begin": 8797,
                          "end": 8802,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 8794,
                          "end": 8826,
                          "name": "EQ",
                          "source": 19
                        },
                        {
                          "begin": 8784,
                          "end": 8844,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "432"
                        },
                        {
                          "begin": 8784,
                          "end": 8844,
                          "name": "JUMPI",
                          "source": 19
                        },
                        {
                          "begin": 8840,
                          "end": 8841,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 8837,
                          "end": 8838,
                          "name": "DUP1",
                          "source": 19
                        },
                        {
                          "begin": 8830,
                          "end": 8842,
                          "name": "REVERT",
                          "source": 19
                        },
                        {
                          "begin": 8879,
                          "end": 9166,
                          "name": "tag",
                          "source": 19,
                          "value": "421"
                        },
                        {
                          "begin": 8879,
                          "end": 9166,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 9008,
                          "end": 9011,
                          "name": "PUSH",
                          "source": 19,
                          "value": "0"
                        },
                        {
                          "begin": 9046,
                          "end": 9052,
                          "name": "DUP3",
                          "source": 19
                        },
                        {
                          "begin": 9040,
                          "end": 9053,
                          "name": "MLOAD",
                          "source": 19
                        },
                        {
                          "begin": 9062,
                          "end": 9128,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "534"
                        },
                        {
                          "begin": 9121,
                          "end": 9127,
                          "name": "DUP2",
                          "source": 19
                        },
                        {
                          "begin": 9116,
                          "end": 9119,
                          "name": "DUP5",
                          "source": 19
                        },
                        {
                          "begin": 9109,
                          "end": 9113,
                          "name": "PUSH",
                          "source": 19,
                          "value": "20"
                        },
                        {
                          "begin": 9101,
                          "end": 9107,
                          "name": "DUP8",
                          "source": 19
                        },
                        {
                          "begin": 9097,
                          "end": 9114,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 9062,
                          "end": 9128,
                          "name": "PUSH [tag]",
                          "source": 19,
                          "value": "456"
                        },
                        {
                          "begin": 9062,
                          "end": 9128,
                          "jumpType": "[in]",
                          "name": "JUMP",
                          "source": 19
                        },
                        {
                          "begin": 9062,
                          "end": 9128,
                          "name": "tag",
                          "source": 19,
                          "value": "534"
                        },
                        {
                          "begin": 9062,
                          "end": 9128,
                          "name": "JUMPDEST",
                          "source": 19
                        },
                        {
                          "begin": 9144,
                          "end": 9160,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 9144,
                          "end": 9160,
                          "name": "SWAP1",
                          "source": 19
                        },
                        {
                          "begin": 9144,
                          "end": 9160,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": 9144,
                          "end": 9160,
                          "name": "ADD",
                          "source": 19
                        },
                        {
                          "begin": 9144,
                          "end": 9160,
                          "name": "SWAP3",
                          "source": 19
                        },
                        {
                          "begin": 8879,
                          "end": 9166,
                          "name": "SWAP2",
                          "source": 19
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": -1,
                          "end": -1,
                          "name": "POP",
                          "source": -1
                        },
                        {
                          "begin": 8879,
                          "end": 9166,
                          "jumpType": "[out]",
                          "name": "JUMP",
                          "source": 19
                        }
                      ],
                      ".data": {
                        "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
                        "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
                      }
                    }
                  },
                  "sourceList": [
                    "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                    "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                    "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
                    "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                    "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                    "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                    "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                    "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
                    "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721.sol",
                    "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
                    "@openzeppelin/contracts/utils/Address.sol",
                    "@openzeppelin/contracts/utils/StorageSlot.sol",
                    "@openzeppelin/contracts/utils/introspection/IERC165.sol",
                    "contracts/interface/IDZapNFTStaking.sol",
                    "contracts/newDZapNFTStaking.sol",
                    "#utility.yul"
                  ]
                },
                "methodIdentifiers": {
                  "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
                  "admin()": "f851a440",
                  "checkUpgradebility()": "8dd0cdf3",
                  "claimRewards(uint256)": "0962ef79",
                  "initialize(address,address,address,uint256,uint256,uint256)": "728cdbca",
                  "nft()": "47ccca02",
                  "onERC721Received(address,address,uint256,bytes)": "150b7a02",
                  "owner()": "8da5cb5b",
                  "pause()": "8456cb59",
                  "paused()": "5c975abb",
                  "proxiableUUID()": "52d1902d",
                  "renounceOwnership()": "715018a6",
                  "rewardClaimDelay()": "46582583",
                  "rewardRates(uint256)": "f2caeb1e",
                  "rewardToken()": "f7c618c1",
                  "setRewardClaimDelay(uint256)": "197916b4",
                  "setUnbondingPeriod(uint256)": "114eaf55",
                  "stake(uint256)": "a694fc3a",
                  "stakes(address,uint256)": "584b62a1",
                  "tokenOwner(uint256)": "1caaa487",
                  "transferOwnership(address)": "f2fde38b",
                  "unbondingPeriod()": "6cf6d675",
                  "unpause()": "3f4ba83a",
                  "unstake(uint256)": "2e17de78",
                  "updateRewardRate(uint256)": "9ef3a261",
                  "upgradeToAndCall(address,bytes)": "4f1ef286",
                  "withdraw(uint256)": "2e1a7d4d"
                }
              },
              "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyStaked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimDelayNotPassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardClaimDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardPerBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUnbondingPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotStaked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnbondingPeriodNotPassed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"RewardRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkUpgradebility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unbondingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardClaimDelay\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardClaimDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardClaimDelay\",\"type\":\"uint256\"}],\"name\":\"setRewardClaimDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unbondingPeriod\",\"type\":\"uint256\"}],\"name\":\"setUnbondingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unbondingAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardClaimedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStaked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unbondingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"updateRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for staking NFTs and earning ERC20 rewards.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"claimRewards(uint256)\":{\"details\":\"Transfers the reward tokens to the caller.\",\"params\":{\"tokenId\":\"ID of the staked NFT.\"}},\"initialize(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Initializes the contract by setting the admin, NFT contract, reward token contract, reward per block, unbonding period, and reward claim delay.\",\"params\":{\"_admin\":\"Address of the contract admin.\",\"_nft\":\"Address of the NFT contract.\",\"_rewardClaimDelay\":\"Number of seconds required to wait before claiming rewards.\",\"_rewardPerBlock\":\"Number of reward tokens given per block.\",\"_rewardToken\":\"Address of the reward token contract.\",\"_unbondingPeriod\":\"Number of blocks required to wait before withdrawing an unstaked NFT.\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only callable by the contract owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRewardClaimDelay(uint256)\":{\"details\":\"Only callable by the contract owner.\",\"params\":{\"_rewardClaimDelay\":\"New reward claim delay in seconds.\"}},\"setUnbondingPeriod(uint256)\":{\"details\":\"Only callable by the contract owner.\",\"params\":{\"_unbondingPeriod\":\"New unbonding period in blocks.\"}},\"stake(uint256)\":{\"details\":\"Transfers the NFT from the caller to the contract.\",\"params\":{\"tokenId\":\"ID of the NFT to be staked.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only callable by the contract owner.\"},\"unstake(uint256)\":{\"details\":\"Sets the unbonding period for the staked NFT.\",\"params\":{\"tokenId\":\"ID of the NFT to be unstaked.\"}},\"updateRewardRate(uint256)\":{\"details\":\"Records the new reward rate along with the current block number.\",\"params\":{\"_rewardPerBlock\":\"New number of reward tokens per block.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw(uint256)\":{\"details\":\"Transfers the NFT from the contract back to the caller.\",\"params\":{\"tokenId\":\"ID of the NFT to be withdrawn.\"}}},\"title\":\"DZapNFTStaking\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards(uint256)\":{\"notice\":\"Claims accumulated rewards for a staked NFT.\"},\"pause()\":{\"notice\":\"Pauses the staking process.\"},\"setRewardClaimDelay(uint256)\":{\"notice\":\"Sets the reward claim delay.\"},\"setUnbondingPeriod(uint256)\":{\"notice\":\"Sets the unbonding period.\"},\"stake(uint256)\":{\"notice\":\"Stakes an NFT to earn rewards.\"},\"unpause()\":{\"notice\":\"Unpauses the staking process.\"},\"unstake(uint256)\":{\"notice\":\"Unstakes an NFT.\"},\"updateRewardRate(uint256)\":{\"notice\":\"Updates the number of reward tokens given per block.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws an unstaked NFT after the unbonding period has passed.\"}},\"notice\":\"0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d  0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/newDZapNFTStaking.sol\":\"NewDZapNFTStaking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0x9a4de3d90a92d682de7ec325eb3d032587fbe9782a4bbbf1b1fa72a82b2c06e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341b637251d54b93d13283fbc57d16ff8727dcd0e9a0f790347bfb664a8f6817\",\"dweb:/ipfs/QmX79yunDU24WtRiD9CJYQa1b21KiJuqmLX73HNyeHE7LJ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interface/IDZapNFTStaking.sol\":{\"keccak256\":\"0xa8d981010011ee4eab54b63c22331e8b0edd9c2513a6668f06b8f385c707c4b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1207b675658e1a30ed9437e6910db24b2bf500f5d65319cc9d59ecc8b8a1700a\",\"dweb:/ipfs/QmP8T1BGQyjqj8dHY7TNikjXRjLmEY93UzLXdEQiXcJaAp\"]},\"contracts/newDZapNFTStaking.sol\":{\"keccak256\":\"0xf0172ea0cd4dea76e90f0fea06b93a81aa800cfdd3fa539417c9b78f49612a95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c70a0d52b0c0245bb3dc7047b6a8bed7192b1f12b11f1f1e99a6dcd5909a7dd3\",\"dweb:/ipfs/QmctLqVz3MFQfdZbGsJCbZ37tpbztrGAiRE5iXW8yYjya1\"]}},\"version\":1}",
              "storageLayout": {
                "storage": [
                  {
                    "astId": 2207,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "nft",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_contract(IERC721)1739"
                  },
                  {
                    "astId": 2210,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "rewardToken",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_contract(IERC20)1296"
                  },
                  {
                    "astId": 2212,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "admin",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_address"
                  },
                  {
                    "astId": 2221,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "rewardRates",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_array(t_struct(RewardRate)2217_storage)dyn_storage"
                  },
                  {
                    "astId": 2223,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "unbondingPeriod",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2225,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "rewardClaimDelay",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2243,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "stakes",
                    "offset": 0,
                    "slot": "6",
                    "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)2236_storage))"
                  },
                  {
                    "astId": 2247,
                    "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                    "label": "tokenOwner",
                    "offset": 0,
                    "slot": "7",
                    "type": "t_mapping(t_uint256,t_address)"
                  }
                ],
                "types": {
                  "t_address": {
                    "encoding": "inplace",
                    "label": "address",
                    "numberOfBytes": "20"
                  },
                  "t_array(t_struct(RewardRate)2217_storage)dyn_storage": {
                    "base": "t_struct(RewardRate)2217_storage",
                    "encoding": "dynamic_array",
                    "label": "struct NewDZapNFTStaking.RewardRate[]",
                    "numberOfBytes": "32"
                  },
                  "t_bool": {
                    "encoding": "inplace",
                    "label": "bool",
                    "numberOfBytes": "1"
                  },
                  "t_contract(IERC20)1296": {
                    "encoding": "inplace",
                    "label": "contract IERC20",
                    "numberOfBytes": "20"
                  },
                  "t_contract(IERC721)1739": {
                    "encoding": "inplace",
                    "label": "contract IERC721",
                    "numberOfBytes": "20"
                  },
                  "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)2236_storage))": {
                    "encoding": "mapping",
                    "key": "t_address",
                    "label": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake))",
                    "numberOfBytes": "32",
                    "value": "t_mapping(t_uint256,t_struct(Stake)2236_storage)"
                  },
                  "t_mapping(t_uint256,t_address)": {
                    "encoding": "mapping",
                    "key": "t_uint256",
                    "label": "mapping(uint256 => address)",
                    "numberOfBytes": "32",
                    "value": "t_address"
                  },
                  "t_mapping(t_uint256,t_struct(Stake)2236_storage)": {
                    "encoding": "mapping",
                    "key": "t_uint256",
                    "label": "mapping(uint256 => struct NewDZapNFTStaking.Stake)",
                    "numberOfBytes": "32",
                    "value": "t_struct(Stake)2236_storage"
                  },
                  "t_struct(RewardRate)2217_storage": {
                    "encoding": "inplace",
                    "label": "struct NewDZapNFTStaking.RewardRate",
                    "members": [
                      {
                        "astId": 2214,
                        "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                        "label": "blockNumber",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                      },
                      {
                        "astId": 2216,
                        "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                        "label": "rewardPerBlock",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                      }
                    ],
                    "numberOfBytes": "64"
                  },
                  "t_struct(Stake)2236_storage": {
                    "encoding": "inplace",
                    "label": "struct NewDZapNFTStaking.Stake",
                    "members": [
                      {
                        "astId": 2227,
                        "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                        "label": "tokenId",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                      },
                      {
                        "astId": 2229,
                        "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                        "label": "stakedAt",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                      },
                      {
                        "astId": 2231,
                        "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                        "label": "unbondingAt",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_uint256"
                      },
                      {
                        "astId": 2233,
                        "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                        "label": "rewardClaimedAt",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_uint256"
                      },
                      {
                        "astId": 2235,
                        "contract": "contracts/newDZapNFTStaking.sol:NewDZapNFTStaking",
                        "label": "isStaked",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bool"
                      }
                    ],
                    "numberOfBytes": "160"
                  },
                  "t_uint256": {
                    "encoding": "inplace",
                    "label": "uint256",
                    "numberOfBytes": "32"
                  }
                }
              },
              "userdoc": {
                "kind": "user",
                "methods": {
                  "claimRewards(uint256)": {
                    "notice": "Claims accumulated rewards for a staked NFT."
                  },
                  "pause()": {
                    "notice": "Pauses the staking process."
                  },
                  "setRewardClaimDelay(uint256)": {
                    "notice": "Sets the reward claim delay."
                  },
                  "setUnbondingPeriod(uint256)": {
                    "notice": "Sets the unbonding period."
                  },
                  "stake(uint256)": {
                    "notice": "Stakes an NFT to earn rewards."
                  },
                  "unpause()": {
                    "notice": "Unpauses the staking process."
                  },
                  "unstake(uint256)": {
                    "notice": "Unstakes an NFT."
                  },
                  "updateRewardRate(uint256)": {
                    "notice": "Updates the number of reward tokens given per block."
                  },
                  "withdraw(uint256)": {
                    "notice": "Withdraws an unstaked NFT after the unbonding period has passed."
                  }
                },
                "notice": "0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d  0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d",
                "version": 1
              }
            }
          }
        },
        "sources": {
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "exportedSymbols": {
                "ContextUpgradeable": [
                  719
                ],
                "Initializable": [
                  448
                ],
                "OwnableUpgradeable": [
                  194
                ]
              },
              "id": 195,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "102:24:0"
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                  "file": "../utils/ContextUpgradeable.sol",
                  "id": 3,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 195,
                  "sourceUnit": 720,
                  "src": "128:67:0",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 2,
                        "name": "ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "136:18:0",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                  "file": "../proxy/utils/Initializable.sol",
                  "id": 5,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 195,
                  "sourceUnit": 449,
                  "src": "196:63:0",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 4,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "204:13:0",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": true,
                  "baseContracts": [
                    {
                      "baseName": {
                        "id": 7,
                        "name": "Initializable",
                        "nameLocations": [
                          "789:13:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 448,
                        "src": "789:13:0"
                      },
                      "id": 8,
                      "nodeType": "InheritanceSpecifier",
                      "src": "789:13:0"
                    },
                    {
                      "baseName": {
                        "id": 9,
                        "name": "ContextUpgradeable",
                        "nameLocations": [
                          "804:18:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 719,
                        "src": "804:18:0"
                      },
                      "id": 10,
                      "nodeType": "InheritanceSpecifier",
                      "src": "804:18:0"
                    }
                  ],
                  "canonicalName": "OwnableUpgradeable",
                  "contractDependencies": [],
                  "contractKind": "contract",
                  "documentation": {
                    "id": 6,
                    "nodeType": "StructuredDocumentation",
                    "src": "261:487:0",
                    "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
                  },
                  "fullyImplemented": true,
                  "id": 194,
                  "linearizedBaseContracts": [
                    194,
                    719,
                    448
                  ],
                  "name": "OwnableUpgradeable",
                  "nameLocation": "767:18:0",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "canonicalName": "OwnableUpgradeable.OwnableStorage",
                      "documentation": {
                        "id": 11,
                        "nodeType": "StructuredDocumentation",
                        "src": "829:65:0",
                        "text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
                      },
                      "id": 14,
                      "members": [
                        {
                          "constant": false,
                          "id": 13,
                          "mutability": "mutable",
                          "name": "_owner",
                          "nameLocation": "939:6:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 14,
                          "src": "931:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 12,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "931:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "OwnableStorage",
                      "nameLocation": "906:14:0",
                      "nodeType": "StructDefinition",
                      "scope": 194,
                      "src": "899:53:0",
                      "visibility": "public"
                    },
                    {
                      "constant": true,
                      "id": 17,
                      "mutability": "constant",
                      "name": "OwnableStorageLocation",
                      "nameLocation": "1094:22:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "1069:116:0",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1069:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": {
                        "hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1119:66:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
                          "typeString": "int_const 6517...(69 digits omitted)...7328"
                        },
                        "value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
                      },
                      "visibility": "private"
                    },
                    {
                      "body": {
                        "id": 24,
                        "nodeType": "Block",
                        "src": "1270:81:0",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "1289:56:0",
                              "nodeType": "YulBlock",
                              "src": "1289:56:0",
                              "statements": [
                                {
                                  "nativeSrc": "1303:32:0",
                                  "nodeType": "YulAssignment",
                                  "src": "1303:32:0",
                                  "value": {
                                    "name": "OwnableStorageLocation",
                                    "nativeSrc": "1313:22:0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1313:22:0"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "$.slot",
                                      "nativeSrc": "1303:6:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1303:6:0"
                                    }
                                  ]
                                }
                              ]
                            },
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 21,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "1303:6:0",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 17,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "1313:22:0",
                                "valueSize": 1
                              }
                            ],
                            "id": 23,
                            "nodeType": "InlineAssembly",
                            "src": "1280:65:0"
                          }
                        ]
                      },
                      "id": 25,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_getOwnableStorage",
                      "nameLocation": "1201:18:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 18,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1219:2:0"
                      },
                      "returnParameters": {
                        "id": 22,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 21,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "1267:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 25,
                            "src": "1244:24:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 20,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 19,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "1244:14:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "1244:14:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "1244:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1243:26:0"
                      },
                      "scope": 194,
                      "src": "1192:159:0",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "private"
                    },
                    {
                      "documentation": {
                        "id": 26,
                        "nodeType": "StructuredDocumentation",
                        "src": "1357:85:0",
                        "text": " @dev The caller account is not authorized to perform an operation."
                      },
                      "errorSelector": "118cdaa7",
                      "id": 30,
                      "name": "OwnableUnauthorizedAccount",
                      "nameLocation": "1453:26:0",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 29,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 28,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "1488:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 30,
                            "src": "1480:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 27,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1480:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1479:17:0"
                      },
                      "src": "1447:50:0"
                    },
                    {
                      "documentation": {
                        "id": 31,
                        "nodeType": "StructuredDocumentation",
                        "src": "1503:82:0",
                        "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                      },
                      "errorSelector": "1e4fbdf7",
                      "id": 35,
                      "name": "OwnableInvalidOwner",
                      "nameLocation": "1596:19:0",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 34,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 33,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "1624:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 35,
                            "src": "1616:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 32,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1616:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1615:15:0"
                      },
                      "src": "1590:41:0"
                    },
                    {
                      "anonymous": false,
                      "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "id": 41,
                      "name": "OwnershipTransferred",
                      "nameLocation": "1643:20:0",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 40,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 37,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "previousOwner",
                            "nameLocation": "1680:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 41,
                            "src": "1664:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 36,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1664:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 39,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "newOwner",
                            "nameLocation": "1711:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 41,
                            "src": "1695:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 38,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1695:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1663:57:0"
                      },
                      "src": "1637:84:0"
                    },
                    {
                      "body": {
                        "id": 53,
                        "nodeType": "Block",
                        "src": "1919:55:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 50,
                                  "name": "initialOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "1954:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 49,
                                "name": "__Ownable_init_unchained",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "1929:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1929:38:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 52,
                            "nodeType": "ExpressionStatement",
                            "src": "1929:38:0"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 42,
                        "nodeType": "StructuredDocumentation",
                        "src": "1727:115:0",
                        "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                      },
                      "id": 54,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 47,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 46,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "1902:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "1902:16:0"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "1902:16:0"
                        }
                      ],
                      "name": "__Ownable_init",
                      "nameLocation": "1856:14:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 45,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 44,
                            "mutability": "mutable",
                            "name": "initialOwner",
                            "nameLocation": "1879:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 54,
                            "src": "1871:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 43,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1871:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1870:22:0"
                      },
                      "returnParameters": {
                        "id": 48,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1919:0:0"
                      },
                      "scope": 194,
                      "src": "1847:127:0",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 80,
                        "nodeType": "Block",
                        "src": "2062:153:0",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 61,
                                "name": "initialOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "2076:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 64,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2100:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 63,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2092:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 62,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2092:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 65,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2092:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2076:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 75,
                            "nodeType": "IfStatement",
                            "src": "2072:95:0",
                            "trueBody": {
                              "id": 74,
                              "nodeType": "Block",
                              "src": "2104:63:0",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 70,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2153:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 69,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2145:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 68,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2145:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 71,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2145:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 67,
                                      "name": "OwnableInvalidOwner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35,
                                      "src": "2125:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2125:31:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 73,
                                  "nodeType": "RevertStatement",
                                  "src": "2118:38:0"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 77,
                                  "name": "initialOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "2195:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76,
                                "name": "_transferOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 193,
                                "src": "2176:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2176:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 79,
                            "nodeType": "ExpressionStatement",
                            "src": "2176:32:0"
                          }
                        ]
                      },
                      "id": 81,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 59,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 58,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "2045:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "2045:16:0"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "2045:16:0"
                        }
                      ],
                      "name": "__Ownable_init_unchained",
                      "nameLocation": "1989:24:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 57,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 56,
                            "mutability": "mutable",
                            "name": "initialOwner",
                            "nameLocation": "2022:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 81,
                            "src": "2014:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 55,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2014:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2013:22:0"
                      },
                      "returnParameters": {
                        "id": 60,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2062:0:0"
                      },
                      "scope": 194,
                      "src": "1980:235:0",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 88,
                        "nodeType": "Block",
                        "src": "2324:41:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 84,
                                "name": "_checkOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "2334:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                  "typeString": "function () view"
                                }
                              },
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2334:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 86,
                            "nodeType": "ExpressionStatement",
                            "src": "2334:13:0"
                          },
                          {
                            "id": 87,
                            "nodeType": "PlaceholderStatement",
                            "src": "2357:1:0"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 82,
                        "nodeType": "StructuredDocumentation",
                        "src": "2221:77:0",
                        "text": " @dev Throws if called by any account other than the owner."
                      },
                      "id": 89,
                      "name": "onlyOwner",
                      "nameLocation": "2312:9:0",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 83,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2321:2:0"
                      },
                      "src": "2303:62:0",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 104,
                        "nodeType": "Block",
                        "src": "2496:89:0",
                        "statements": [
                          {
                            "assignments": [
                              97
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 97,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "2529:1:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 104,
                                "src": "2506:24:0",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                  "typeString": "struct OwnableUpgradeable.OwnableStorage"
                                },
                                "typeName": {
                                  "id": 96,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 95,
                                    "name": "OwnableStorage",
                                    "nameLocations": [
                                      "2506:14:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 14,
                                    "src": "2506:14:0"
                                  },
                                  "referencedDeclaration": 14,
                                  "src": "2506:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                    "typeString": "struct OwnableUpgradeable.OwnableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 100,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 98,
                                "name": "_getOwnableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "2533:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
                                  "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                                }
                              },
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2533:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2506:47:0"
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 101,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "2570:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                  "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2572:6:0",
                              "memberName": "_owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "2570:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 94,
                            "id": 103,
                            "nodeType": "Return",
                            "src": "2563:15:0"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 90,
                        "nodeType": "StructuredDocumentation",
                        "src": "2371:65:0",
                        "text": " @dev Returns the address of the current owner."
                      },
                      "functionSelector": "8da5cb5b",
                      "id": 105,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "owner",
                      "nameLocation": "2450:5:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 91,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2455:2:0"
                      },
                      "returnParameters": {
                        "id": 94,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 93,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 105,
                            "src": "2487:7:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 92,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2487:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2486:9:0"
                      },
                      "scope": 194,
                      "src": "2441:144:0",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "public"
                    },
                    {
                      "body": {
                        "id": 121,
                        "nodeType": "Block",
                        "src": "2703:117:0",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 109,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 105,
                                  "src": "2717:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2717:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 111,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "2728:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2728:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2717:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 120,
                            "nodeType": "IfStatement",
                            "src": "2713:101:0",
                            "trueBody": {
                              "id": 119,
                              "nodeType": "Block",
                              "src": "2742:72:0",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 115,
                                          "name": "_msgSender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 701,
                                          "src": "2790:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                            "typeString": "function () view returns (address)"
                                          }
                                        },
                                        "id": 116,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2790:12:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 114,
                                      "name": "OwnableUnauthorizedAccount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30,
                                      "src": "2763:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2763:40:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 118,
                                  "nodeType": "RevertStatement",
                                  "src": "2756:47:0"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 106,
                        "nodeType": "StructuredDocumentation",
                        "src": "2591:62:0",
                        "text": " @dev Throws if the sender is not the owner."
                      },
                      "id": 122,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_checkOwner",
                      "nameLocation": "2667:11:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 107,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2678:2:0"
                      },
                      "returnParameters": {
                        "id": 108,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2703:0:0"
                      },
                      "scope": 194,
                      "src": "2658:162:0",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 135,
                        "nodeType": "Block",
                        "src": "3209:47:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 131,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3246:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3238:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 129,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3238:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3238:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 128,
                                "name": "_transferOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 193,
                                "src": "3219:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3219:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 134,
                            "nodeType": "ExpressionStatement",
                            "src": "3219:30:0"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 123,
                        "nodeType": "StructuredDocumentation",
                        "src": "2826:324:0",
                        "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                      },
                      "functionSelector": "715018a6",
                      "id": 136,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 126,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 125,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "3199:9:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "3199:9:0"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3199:9:0"
                        }
                      ],
                      "name": "renounceOwnership",
                      "nameLocation": "3164:17:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 124,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3181:2:0"
                      },
                      "returnParameters": {
                        "id": 127,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3209:0:0"
                      },
                      "scope": 194,
                      "src": "3155:101:0",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "public"
                    },
                    {
                      "body": {
                        "id": 163,
                        "nodeType": "Block",
                        "src": "3475:145:0",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 144,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "3489:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3509:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3501:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 145,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3501:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3501:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3489:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 158,
                            "nodeType": "IfStatement",
                            "src": "3485:91:0",
                            "trueBody": {
                              "id": 157,
                              "nodeType": "Block",
                              "src": "3513:63:0",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 153,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3562:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 152,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3554:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 151,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3554:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 154,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3554:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 150,
                                      "name": "OwnableInvalidOwner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35,
                                      "src": "3534:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 155,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3534:31:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 156,
                                  "nodeType": "RevertStatement",
                                  "src": "3527:38:0"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 160,
                                  "name": "newOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139,
                                  "src": "3604:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 159,
                                "name": "_transferOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 193,
                                "src": "3585:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3585:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 162,
                            "nodeType": "ExpressionStatement",
                            "src": "3585:28:0"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 137,
                        "nodeType": "StructuredDocumentation",
                        "src": "3262:138:0",
                        "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                      },
                      "functionSelector": "f2fde38b",
                      "id": 164,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 142,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 141,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "3465:9:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "3465:9:0"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3465:9:0"
                        }
                      ],
                      "name": "transferOwnership",
                      "nameLocation": "3414:17:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 140,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 139,
                            "mutability": "mutable",
                            "name": "newOwner",
                            "nameLocation": "3440:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 164,
                            "src": "3432:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 138,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3432:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3431:18:0"
                      },
                      "returnParameters": {
                        "id": 143,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3475:0:0"
                      },
                      "scope": 194,
                      "src": "3405:215:0",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "public"
                    },
                    {
                      "body": {
                        "id": 192,
                        "nodeType": "Block",
                        "src": "3837:185:0",
                        "statements": [
                          {
                            "assignments": [
                              172
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 172,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "3870:1:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 192,
                                "src": "3847:24:0",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                  "typeString": "struct OwnableUpgradeable.OwnableStorage"
                                },
                                "typeName": {
                                  "id": 171,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 170,
                                    "name": "OwnableStorage",
                                    "nameLocations": [
                                      "3847:14:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 14,
                                    "src": "3847:14:0"
                                  },
                                  "referencedDeclaration": 14,
                                  "src": "3847:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                    "typeString": "struct OwnableUpgradeable.OwnableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 175,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 173,
                                "name": "_getOwnableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "3874:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
                                  "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                                }
                              },
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3874:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3847:47:0"
                          },
                          {
                            "assignments": [
                              177
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 177,
                                "mutability": "mutable",
                                "name": "oldOwner",
                                "nameLocation": "3912:8:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 192,
                                "src": "3904:16:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 176,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3904:7:0",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 180,
                            "initialValue": {
                              "expression": {
                                "id": 178,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "3923:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                  "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                                }
                              },
                              "id": 179,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3925:6:0",
                              "memberName": "_owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "3923:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3904:27:0"
                          },
                          {
                            "expression": {
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 181,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 172,
                                  "src": "3941:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                    "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                                  }
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "3943:6:0",
                                "memberName": "_owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "3941:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 184,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "3952:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3941:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 186,
                            "nodeType": "ExpressionStatement",
                            "src": "3941:19:0"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 188,
                                  "name": "oldOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 177,
                                  "src": "3996:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 189,
                                  "name": "newOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "4006:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 187,
                                "name": "OwnershipTransferred",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "3975:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                  "typeString": "function (address,address)"
                                }
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3975:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 191,
                            "nodeType": "EmitStatement",
                            "src": "3970:45:0"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 165,
                        "nodeType": "StructuredDocumentation",
                        "src": "3626:143:0",
                        "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                      },
                      "id": 193,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_transferOwnership",
                      "nameLocation": "3783:18:0",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 168,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 167,
                            "mutability": "mutable",
                            "name": "newOwner",
                            "nameLocation": "3810:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 193,
                            "src": "3802:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 166,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3802:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3801:18:0"
                      },
                      "returnParameters": {
                        "id": 169,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3837:0:0"
                      },
                      "scope": 194,
                      "src": "3774:248:0",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "internal"
                    }
                  ],
                  "scope": 195,
                  "src": "749:3275:0",
                  "usedErrors": [
                    30,
                    35,
                    211,
                    214
                  ],
                  "usedEvents": [
                    41,
                    219
                  ]
                }
              ],
              "src": "102:3923:0"
            },
            "id": 0
          },
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "exportedSymbols": {
                "Initializable": [
                  448
                ]
              },
              "id": 449,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 196,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "113:24:1"
                },
                {
                  "abstract": true,
                  "baseContracts": [],
                  "canonicalName": "Initializable",
                  "contractDependencies": [],
                  "contractKind": "contract",
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "139:2209:1",
                    "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
                  },
                  "fullyImplemented": true,
                  "id": 448,
                  "linearizedBaseContracts": [
                    448
                  ],
                  "name": "Initializable",
                  "nameLocation": "2367:13:1",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "canonicalName": "Initializable.InitializableStorage",
                      "documentation": {
                        "id": 198,
                        "nodeType": "StructuredDocumentation",
                        "src": "2387:293:1",
                        "text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
                      },
                      "id": 205,
                      "members": [
                        {
                          "constant": false,
                          "id": 201,
                          "mutability": "mutable",
                          "name": "_initialized",
                          "nameLocation": "2820:12:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 205,
                          "src": "2813:19:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "typeName": {
                            "id": 200,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "2813:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 204,
                          "mutability": "mutable",
                          "name": "_initializing",
                          "nameLocation": "2955:13:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 205,
                          "src": "2950:18:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 203,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "2950:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "InitializableStorage",
                      "nameLocation": "2692:20:1",
                      "nodeType": "StructDefinition",
                      "scope": 448,
                      "src": "2685:290:1",
                      "visibility": "public"
                    },
                    {
                      "constant": true,
                      "id": 208,
                      "mutability": "constant",
                      "name": "INITIALIZABLE_STORAGE",
                      "nameLocation": "3123:21:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 448,
                      "src": "3098:115:1",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3098:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": {
                        "hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3147:66:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
                          "typeString": "int_const 1089...(70 digits omitted)...9600"
                        },
                        "value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
                      },
                      "visibility": "private"
                    },
                    {
                      "documentation": {
                        "id": 209,
                        "nodeType": "StructuredDocumentation",
                        "src": "3220:60:1",
                        "text": " @dev The contract is already initialized."
                      },
                      "errorSelector": "f92ee8a9",
                      "id": 211,
                      "name": "InvalidInitialization",
                      "nameLocation": "3291:21:1",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 210,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3312:2:1"
                      },
                      "src": "3285:30:1"
                    },
                    {
                      "documentation": {
                        "id": 212,
                        "nodeType": "StructuredDocumentation",
                        "src": "3321:57:1",
                        "text": " @dev The contract is not initializing."
                      },
                      "errorSelector": "d7e6bcf8",
                      "id": 214,
                      "name": "NotInitializing",
                      "nameLocation": "3389:15:1",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 213,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3404:2:1"
                      },
                      "src": "3383:24:1"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 215,
                        "nodeType": "StructuredDocumentation",
                        "src": "3413:90:1",
                        "text": " @dev Triggered when the contract has been initialized or reinitialized."
                      },
                      "eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
                      "id": 219,
                      "name": "Initialized",
                      "nameLocation": "3514:11:1",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 218,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 217,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "version",
                            "nameLocation": "3533:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 219,
                            "src": "3526:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "3526:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3525:16:1"
                      },
                      "src": "3508:34:1"
                    },
                    {
                      "body": {
                        "id": 301,
                        "nodeType": "Block",
                        "src": "4092:1081:1",
                        "statements": [
                          {
                            "assignments": [
                              224
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 224,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "4187:1:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 301,
                                "src": "4158:30:1",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage"
                                },
                                "typeName": {
                                  "id": 223,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 222,
                                    "name": "InitializableStorage",
                                    "nameLocations": [
                                      "4158:20:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 205,
                                    "src": "4158:20:1"
                                  },
                                  "referencedDeclaration": 205,
                                  "src": "4158:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 227,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 225,
                                "name": "_getInitializableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "4191:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                  "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                                }
                              },
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4191:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4158:59:1"
                          },
                          {
                            "assignments": [
                              229
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 229,
                                "mutability": "mutable",
                                "name": "isTopLevelCall",
                                "nameLocation": "4284:14:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 301,
                                "src": "4279:19:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 228,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4279:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 233,
                            "initialValue": {
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4301:16:1",
                              "subExpression": {
                                "expression": {
                                  "id": 230,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 224,
                                  "src": "4302:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage storage pointer"
                                  }
                                },
                                "id": 231,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4304:13:1",
                                "memberName": "_initializing",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 204,
                                "src": "4302:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4279:38:1"
                          },
                          {
                            "assignments": [
                              235
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 235,
                                "mutability": "mutable",
                                "name": "initialized",
                                "nameLocation": "4334:11:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 301,
                                "src": "4327:18:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                "typeName": {
                                  "id": 234,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4327:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 238,
                            "initialValue": {
                              "expression": {
                                "id": 236,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "4348:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4350:12:1",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 201,
                              "src": "4348:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4327:35:1"
                          },
                          {
                            "assignments": [
                              240
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 240,
                                "mutability": "mutable",
                                "name": "initialSetup",
                                "nameLocation": "4711:12:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 301,
                                "src": "4706:17:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 239,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4706:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 246,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 241,
                                  "name": "initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 235,
                                  "src": "4726:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4741:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4726:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 244,
                                "name": "isTopLevelCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "4746:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4726:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4706:54:1"
                          },
                          {
                            "assignments": [
                              248
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 248,
                                "mutability": "mutable",
                                "name": "construction",
                                "nameLocation": "4775:12:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 301,
                                "src": "4770:17:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 247,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4770:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 261,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 249,
                                  "name": "initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 235,
                                  "src": "4790:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4805:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4790:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 254,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "4818:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Initializable_$448",
                                            "typeString": "contract Initializable"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Initializable_$448",
                                            "typeString": "contract Initializable"
                                          }
                                        ],
                                        "id": 253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4810:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 252,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4810:7:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4810:13:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4824:4:1",
                                    "memberName": "code",
                                    "nodeType": "MemberAccess",
                                    "src": "4810:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4829:6:1",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4810:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4839:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4810:30:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4790:50:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4770:70:1"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4855:13:1",
                                "subExpression": {
                                  "id": 262,
                                  "name": "initialSetup",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 240,
                                  "src": "4856:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4872:13:1",
                                "subExpression": {
                                  "id": 264,
                                  "name": "construction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 248,
                                  "src": "4873:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4855:30:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 271,
                            "nodeType": "IfStatement",
                            "src": "4851:91:1",
                            "trueBody": {
                              "id": 270,
                              "nodeType": "Block",
                              "src": "4887:55:1",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 267,
                                      "name": "InvalidInitialization",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 211,
                                      "src": "4908:21:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4908:23:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 269,
                                  "nodeType": "RevertStatement",
                                  "src": "4901:30:1"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 272,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 224,
                                  "src": "4951:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage storage pointer"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "4953:12:1",
                                "memberName": "_initialized",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 201,
                                "src": "4951:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4968:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4951:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "id": 277,
                            "nodeType": "ExpressionStatement",
                            "src": "4951:18:1"
                          },
                          {
                            "condition": {
                              "id": 278,
                              "name": "isTopLevelCall",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "4983:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 286,
                            "nodeType": "IfStatement",
                            "src": "4979:67:1",
                            "trueBody": {
                              "id": 285,
                              "nodeType": "Block",
                              "src": "4999:47:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 279,
                                        "name": "$",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 224,
                                        "src": "5013:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                          "typeString": "struct Initializable.InitializableStorage storage pointer"
                                        }
                                      },
                                      "id": 281,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "5015:13:1",
                                      "memberName": "_initializing",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 204,
                                      "src": "5013:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "74727565",
                                      "id": 282,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5031:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "5013:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 284,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5013:22:1"
                                }
                              ]
                            }
                          },
                          {
                            "id": 287,
                            "nodeType": "PlaceholderStatement",
                            "src": "5055:1:1"
                          },
                          {
                            "condition": {
                              "id": 288,
                              "name": "isTopLevelCall",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "5070:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 300,
                            "nodeType": "IfStatement",
                            "src": "5066:101:1",
                            "trueBody": {
                              "id": 299,
                              "nodeType": "Block",
                              "src": "5086:81:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 289,
                                        "name": "$",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 224,
                                        "src": "5100:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                          "typeString": "struct Initializable.InitializableStorage storage pointer"
                                        }
                                      },
                                      "id": 291,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "5102:13:1",
                                      "memberName": "_initializing",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 204,
                                      "src": "5100:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "66616c7365",
                                      "id": 292,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5118:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    },
                                    "src": "5100:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 294,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5100:23:1"
                                },
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 296,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5154:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "id": 295,
                                      "name": "Initialized",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "5142:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                        "typeString": "function (uint64)"
                                      }
                                    },
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5142:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 298,
                                  "nodeType": "EmitStatement",
                                  "src": "5137:19:1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 220,
                        "nodeType": "StructuredDocumentation",
                        "src": "3548:516:1",
                        "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
                      },
                      "id": 302,
                      "name": "initializer",
                      "nameLocation": "4078:11:1",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 221,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4089:2:1"
                      },
                      "src": "4069:1104:1",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 348,
                        "nodeType": "Block",
                        "src": "6291:392:1",
                        "statements": [
                          {
                            "assignments": [
                              309
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 309,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "6386:1:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 348,
                                "src": "6357:30:1",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage"
                                },
                                "typeName": {
                                  "id": 308,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 307,
                                    "name": "InitializableStorage",
                                    "nameLocations": [
                                      "6357:20:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 205,
                                    "src": "6357:20:1"
                                  },
                                  "referencedDeclaration": 205,
                                  "src": "6357:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 312,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 310,
                                "name": "_getInitializableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "6390:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                  "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                                }
                              },
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6390:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "6357:59:1"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 313,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "6431:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage storage pointer"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6433:13:1",
                                "memberName": "_initializing",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 204,
                                "src": "6431:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 315,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 309,
                                    "src": "6450:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6452:12:1",
                                  "memberName": "_initialized",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 201,
                                  "src": "6450:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 317,
                                  "name": "version",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "6468:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "6450:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6431:44:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 324,
                            "nodeType": "IfStatement",
                            "src": "6427:105:1",
                            "trueBody": {
                              "id": 323,
                              "nodeType": "Block",
                              "src": "6477:55:1",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 320,
                                      "name": "InvalidInitialization",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 211,
                                      "src": "6498:21:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6498:23:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 322,
                                  "nodeType": "RevertStatement",
                                  "src": "6491:30:1"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 325,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "6541:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage storage pointer"
                                  }
                                },
                                "id": 327,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "6543:12:1",
                                "memberName": "_initialized",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 201,
                                "src": "6541:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 328,
                                "name": "version",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 305,
                                "src": "6558:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "6541:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "id": 330,
                            "nodeType": "ExpressionStatement",
                            "src": "6541:24:1"
                          },
                          {
                            "expression": {
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 331,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "6575:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage storage pointer"
                                  }
                                },
                                "id": 333,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "6577:13:1",
                                "memberName": "_initializing",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 204,
                                "src": "6575:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6593:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "6575:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 336,
                            "nodeType": "ExpressionStatement",
                            "src": "6575:22:1"
                          },
                          {
                            "id": 337,
                            "nodeType": "PlaceholderStatement",
                            "src": "6607:1:1"
                          },
                          {
                            "expression": {
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 338,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "6618:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage storage pointer"
                                  }
                                },
                                "id": 340,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "6620:13:1",
                                "memberName": "_initializing",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 204,
                                "src": "6618:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "66616c7365",
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6636:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "6618:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 343,
                            "nodeType": "ExpressionStatement",
                            "src": "6618:23:1"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 345,
                                  "name": "version",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "6668:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                ],
                                "id": 344,
                                "name": "Initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "6656:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                  "typeString": "function (uint64)"
                                }
                              },
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6656:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 347,
                            "nodeType": "EmitStatement",
                            "src": "6651:25:1"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 303,
                        "nodeType": "StructuredDocumentation",
                        "src": "5179:1068:1",
                        "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
                      },
                      "id": 349,
                      "name": "reinitializer",
                      "nameLocation": "6261:13:1",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 306,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 305,
                            "mutability": "mutable",
                            "name": "version",
                            "nameLocation": "6282:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 349,
                            "src": "6275:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 304,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "6275:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "6274:16:1"
                      },
                      "src": "6252:431:1",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 356,
                        "nodeType": "Block",
                        "src": "6921:48:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 352,
                                "name": "_checkInitializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "6931:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                  "typeString": "function () view"
                                }
                              },
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6931:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 354,
                            "nodeType": "ExpressionStatement",
                            "src": "6931:20:1"
                          },
                          {
                            "id": 355,
                            "nodeType": "PlaceholderStatement",
                            "src": "6961:1:1"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 350,
                        "nodeType": "StructuredDocumentation",
                        "src": "6689:199:1",
                        "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                      },
                      "id": 357,
                      "name": "onlyInitializing",
                      "nameLocation": "6902:16:1",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 351,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "6918:2:1"
                      },
                      "src": "6893:76:1",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 369,
                        "nodeType": "Block",
                        "src": "7136:89:1",
                        "statements": [
                          {
                            "condition": {
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7150:18:1",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 361,
                                  "name": "_isInitializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "7151:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7151:17:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 368,
                            "nodeType": "IfStatement",
                            "src": "7146:73:1",
                            "trueBody": {
                              "id": 367,
                              "nodeType": "Block",
                              "src": "7170:49:1",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 364,
                                      "name": "NotInitializing",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 214,
                                      "src": "7191:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 365,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7191:17:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 366,
                                  "nodeType": "RevertStatement",
                                  "src": "7184:24:1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 358,
                        "nodeType": "StructuredDocumentation",
                        "src": "6975:104:1",
                        "text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
                      },
                      "id": 370,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_checkInitializing",
                      "nameLocation": "7093:18:1",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 359,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "7111:2:1"
                      },
                      "returnParameters": {
                        "id": 360,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "7136:0:1"
                      },
                      "scope": 448,
                      "src": "7084:141:1",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 415,
                        "nodeType": "Block",
                        "src": "7760:373:1",
                        "statements": [
                          {
                            "assignments": [
                              376
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 376,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "7855:1:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 415,
                                "src": "7826:30:1",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage"
                                },
                                "typeName": {
                                  "id": 375,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 374,
                                    "name": "InitializableStorage",
                                    "nameLocations": [
                                      "7826:20:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 205,
                                    "src": "7826:20:1"
                                  },
                                  "referencedDeclaration": 205,
                                  "src": "7826:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 379,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 377,
                                "name": "_getInitializableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "7859:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                  "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7859:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "7826:59:1"
                          },
                          {
                            "condition": {
                              "expression": {
                                "id": 380,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 376,
                                "src": "7900:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 381,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7902:13:1",
                              "memberName": "_initializing",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 204,
                              "src": "7900:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 386,
                            "nodeType": "IfStatement",
                            "src": "7896:76:1",
                            "trueBody": {
                              "id": 385,
                              "nodeType": "Block",
                              "src": "7917:55:1",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 382,
                                      "name": "InvalidInitialization",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 211,
                                      "src": "7938:21:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7938:23:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 384,
                                  "nodeType": "RevertStatement",
                                  "src": "7931:30:1"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 387,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 376,
                                  "src": "7985:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                    "typeString": "struct Initializable.InitializableStorage storage pointer"
                                  }
                                },
                                "id": 388,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7987:12:1",
                                "memberName": "_initialized",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 201,
                                "src": "7985:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8008:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      },
                                      "typeName": {
                                        "id": 390,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8008:6:1",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      }
                                    ],
                                    "id": 389,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "8003:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8003:12:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint64",
                                    "typeString": "type(uint64)"
                                  }
                                },
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8016:3:1",
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "8003:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "7985:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 414,
                            "nodeType": "IfStatement",
                            "src": "7981:146:1",
                            "trueBody": {
                              "id": 413,
                              "nodeType": "Block",
                              "src": "8021:106:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 395,
                                        "name": "$",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 376,
                                        "src": "8035:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                          "typeString": "struct Initializable.InitializableStorage storage pointer"
                                        }
                                      },
                                      "id": 397,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "8037:12:1",
                                      "memberName": "_initialized",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 201,
                                      "src": "8035:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 400,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "8057:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint64_$",
                                              "typeString": "type(uint64)"
                                            },
                                            "typeName": {
                                              "id": 399,
                                              "name": "uint64",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "8057:6:1",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_type$_t_uint64_$",
                                              "typeString": "type(uint64)"
                                            }
                                          ],
                                          "id": 398,
                                          "name": "type",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967269,
                                          "src": "8052:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 401,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8052:12:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_meta_type_t_uint64",
                                          "typeString": "type(uint64)"
                                        }
                                      },
                                      "id": 402,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "8065:3:1",
                                      "memberName": "max",
                                      "nodeType": "MemberAccess",
                                      "src": "8052:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "src": "8035:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "id": 404,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8035:33:1"
                                },
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 408,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "8104:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint64_$",
                                                "typeString": "type(uint64)"
                                              },
                                              "typeName": {
                                                "id": 407,
                                                "name": "uint64",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8104:6:1",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_type$_t_uint64_$",
                                                "typeString": "type(uint64)"
                                              }
                                            ],
                                            "id": 406,
                                            "name": "type",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967269,
                                            "src": "8099:4:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 409,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8099:12:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                                            "typeString": "type(uint64)"
                                          }
                                        },
                                        "id": 410,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "8112:3:1",
                                        "memberName": "max",
                                        "nodeType": "MemberAccess",
                                        "src": "8099:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      ],
                                      "id": 405,
                                      "name": "Initialized",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "8087:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                        "typeString": "function (uint64)"
                                      }
                                    },
                                    "id": 411,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8087:29:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 412,
                                  "nodeType": "EmitStatement",
                                  "src": "8082:34:1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 371,
                        "nodeType": "StructuredDocumentation",
                        "src": "7231:475:1",
                        "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                      },
                      "id": 416,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_disableInitializers",
                      "nameLocation": "7720:20:1",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 372,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "7740:2:1"
                      },
                      "returnParameters": {
                        "id": 373,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "7760:0:1"
                      },
                      "scope": 448,
                      "src": "7711:422:1",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 426,
                        "nodeType": "Block",
                        "src": "8308:63:1",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 422,
                                  "name": "_getInitializableStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 447,
                                  "src": "8325:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                    "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                                  }
                                },
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8325:26:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 424,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8352:12:1",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 201,
                              "src": "8325:39:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "functionReturnParameters": 421,
                            "id": 425,
                            "nodeType": "Return",
                            "src": "8318:46:1"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 417,
                        "nodeType": "StructuredDocumentation",
                        "src": "8139:99:1",
                        "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                      },
                      "id": 427,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_getInitializedVersion",
                      "nameLocation": "8252:22:1",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 418,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "8274:2:1"
                      },
                      "returnParameters": {
                        "id": 421,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 420,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "8300:6:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 419,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "8300:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8299:8:1"
                      },
                      "scope": 448,
                      "src": "8243:128:1",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 437,
                        "nodeType": "Block",
                        "src": "8543:64:1",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 433,
                                  "name": "_getInitializableStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 447,
                                  "src": "8560:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                    "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                                  }
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8560:26:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8587:13:1",
                              "memberName": "_initializing",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 204,
                              "src": "8560:40:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 432,
                            "id": 436,
                            "nodeType": "Return",
                            "src": "8553:47:1"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 428,
                        "nodeType": "StructuredDocumentation",
                        "src": "8377:105:1",
                        "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                      },
                      "id": 438,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_isInitializing",
                      "nameLocation": "8496:15:1",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 429,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "8511:2:1"
                      },
                      "returnParameters": {
                        "id": 432,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 431,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 438,
                            "src": "8537:4:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 430,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8537:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8536:6:1"
                      },
                      "scope": 448,
                      "src": "8487:120:1",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 446,
                        "nodeType": "Block",
                        "src": "8827:80:1",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "8846:55:1",
                              "nodeType": "YulBlock",
                              "src": "8846:55:1",
                              "statements": [
                                {
                                  "nativeSrc": "8860:31:1",
                                  "nodeType": "YulAssignment",
                                  "src": "8860:31:1",
                                  "value": {
                                    "name": "INITIALIZABLE_STORAGE",
                                    "nativeSrc": "8870:21:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8870:21:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "$.slot",
                                      "nativeSrc": "8860:6:1",
                                      "nodeType": "YulIdentifier",
                                      "src": "8860:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 443,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "8860:6:1",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 208,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "8870:21:1",
                                "valueSize": 1
                              }
                            ],
                            "id": 445,
                            "nodeType": "InlineAssembly",
                            "src": "8837:64:1"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 439,
                        "nodeType": "StructuredDocumentation",
                        "src": "8613:67:1",
                        "text": " @dev Returns a pointer to the storage namespace."
                      },
                      "id": 447,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_getInitializableStorage",
                      "nameLocation": "8746:24:1",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 440,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "8770:2:1"
                      },
                      "returnParameters": {
                        "id": 444,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 443,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "8824:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 447,
                            "src": "8795:30:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 442,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 441,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "8795:20:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 205,
                                "src": "8795:20:1"
                              },
                              "referencedDeclaration": 205,
                              "src": "8795:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8794:32:1"
                      },
                      "scope": 448,
                      "src": "8737:170:1",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "private"
                    }
                  ],
                  "scope": 449,
                  "src": "2349:6560:1",
                  "usedErrors": [
                    211,
                    214
                  ],
                  "usedEvents": [
                    219
                  ]
                }
              ],
              "src": "113:8797:1"
            },
            "id": 1
          },
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
              "exportedSymbols": {
                "ERC1967Utils": [
                  1208
                ],
                "IERC1822Proxiable": [
                  905
                ],
                "Initializable": [
                  448
                ],
                "UUPSUpgradeable": [
                  630
                ]
              },
              "id": 631,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 450,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "115:24:2"
                },
                {
                  "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                  "file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                  "id": 452,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 631,
                  "sourceUnit": 906,
                  "src": "141:88:2",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 451,
                        "name": "IERC1822Proxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "149:17:2",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                  "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                  "id": 454,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 631,
                  "sourceUnit": 1209,
                  "src": "230:84:2",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 453,
                        "name": "ERC1967Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "238:12:2",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                  "file": "./Initializable.sol",
                  "id": 456,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 631,
                  "sourceUnit": 449,
                  "src": "315:50:2",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 455,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "323:13:2",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": true,
                  "baseContracts": [
                    {
                      "baseName": {
                        "id": 458,
                        "name": "Initializable",
                        "nameLocations": [
                          "1023:13:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 448,
                        "src": "1023:13:2"
                      },
                      "id": 459,
                      "nodeType": "InheritanceSpecifier",
                      "src": "1023:13:2"
                    },
                    {
                      "baseName": {
                        "id": 460,
                        "name": "IERC1822Proxiable",
                        "nameLocations": [
                          "1038:17:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 905,
                        "src": "1038:17:2"
                      },
                      "id": 461,
                      "nodeType": "InheritanceSpecifier",
                      "src": "1038:17:2"
                    }
                  ],
                  "canonicalName": "UUPSUpgradeable",
                  "contractDependencies": [],
                  "contractKind": "contract",
                  "documentation": {
                    "id": 457,
                    "nodeType": "StructuredDocumentation",
                    "src": "367:618:2",
                    "text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
                  },
                  "fullyImplemented": false,
                  "id": 630,
                  "linearizedBaseContracts": [
                    630,
                    905,
                    448
                  ],
                  "name": "UUPSUpgradeable",
                  "nameLocation": "1004:15:2",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "constant": false,
                      "documentation": {
                        "id": 462,
                        "nodeType": "StructuredDocumentation",
                        "src": "1062:61:2",
                        "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
                      },
                      "id": 468,
                      "mutability": "immutable",
                      "name": "__self",
                      "nameLocation": "1154:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "1128:48:2",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 463,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1128:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": {
                        "arguments": [
                          {
                            "id": 466,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1171:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                              "typeString": "contract UUPSUpgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                              "typeString": "contract UUPSUpgradeable"
                            }
                          ],
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1163:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1163:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1163:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "private"
                    },
                    {
                      "constant": true,
                      "documentation": {
                        "id": 469,
                        "nodeType": "StructuredDocumentation",
                        "src": "1183:631:2",
                        "text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
                      },
                      "functionSelector": "ad3cb1cc",
                      "id": 472,
                      "mutability": "constant",
                      "name": "UPGRADE_INTERFACE_VERSION",
                      "nameLocation": "1842:25:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "1819:58:2",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 470,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1819:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": {
                        "hexValue": "352e302e30",
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1870:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
                          "typeString": "literal_string \"5.0.0\""
                        },
                        "value": "5.0.0"
                      },
                      "visibility": "public"
                    },
                    {
                      "documentation": {
                        "id": 473,
                        "nodeType": "StructuredDocumentation",
                        "src": "1884:65:2",
                        "text": " @dev The call is from an unauthorized context."
                      },
                      "errorSelector": "e07c8dba",
                      "id": 475,
                      "name": "UUPSUnauthorizedCallContext",
                      "nameLocation": "1960:27:2",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 474,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1987:2:2"
                      },
                      "src": "1954:36:2"
                    },
                    {
                      "documentation": {
                        "id": 476,
                        "nodeType": "StructuredDocumentation",
                        "src": "1996:68:2",
                        "text": " @dev The storage `slot` is unsupported as a UUID."
                      },
                      "errorSelector": "aa1d49a4",
                      "id": 480,
                      "name": "UUPSUnsupportedProxiableUUID",
                      "nameLocation": "2075:28:2",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 479,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 478,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "2112:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 480,
                            "src": "2104:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 477,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2104:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2103:14:2"
                      },
                      "src": "2069:49:2"
                    },
                    {
                      "body": {
                        "id": 487,
                        "nodeType": "Block",
                        "src": "2643:41:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 483,
                                "name": "_checkProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "2653:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                  "typeString": "function () view"
                                }
                              },
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2653:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 485,
                            "nodeType": "ExpressionStatement",
                            "src": "2653:13:2"
                          },
                          {
                            "id": 486,
                            "nodeType": "PlaceholderStatement",
                            "src": "2676:1:2"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 481,
                        "nodeType": "StructuredDocumentation",
                        "src": "2124:493:2",
                        "text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
                      },
                      "id": 488,
                      "name": "onlyProxy",
                      "nameLocation": "2631:9:2",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 482,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2640:2:2"
                      },
                      "src": "2622:62:2",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 495,
                        "nodeType": "Block",
                        "src": "2914:48:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 491,
                                "name": "_checkNotDelegated",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "2924:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                  "typeString": "function () view"
                                }
                              },
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2924:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 493,
                            "nodeType": "ExpressionStatement",
                            "src": "2924:20:2"
                          },
                          {
                            "id": 494,
                            "nodeType": "PlaceholderStatement",
                            "src": "2954:1:2"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 489,
                        "nodeType": "StructuredDocumentation",
                        "src": "2690:195:2",
                        "text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
                      },
                      "id": 496,
                      "name": "notDelegated",
                      "nameLocation": "2899:12:2",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 490,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2911:2:2"
                      },
                      "src": "2890:72:2",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 501,
                        "nodeType": "Block",
                        "src": "3028:7:2",
                        "statements": []
                      },
                      "id": 502,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 499,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 498,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "3011:16:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "3011:16:2"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3011:16:2"
                        }
                      ],
                      "name": "__UUPSUpgradeable_init",
                      "nameLocation": "2977:22:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 497,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2999:2:2"
                      },
                      "returnParameters": {
                        "id": 500,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3028:0:2"
                      },
                      "scope": 630,
                      "src": "2968:67:2",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 507,
                        "nodeType": "Block",
                        "src": "3111:7:2",
                        "statements": []
                      },
                      "id": 508,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 505,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 504,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "3094:16:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "3094:16:2"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3094:16:2"
                        }
                      ],
                      "name": "__UUPSUpgradeable_init_unchained",
                      "nameLocation": "3050:32:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 503,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3082:2:2"
                      },
                      "returnParameters": {
                        "id": 506,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3111:0:2"
                      },
                      "scope": 630,
                      "src": "3041:77:2",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "baseFunctions": [
                        904
                      ],
                      "body": {
                        "id": 519,
                        "nodeType": "Block",
                        "src": "3783:56:2",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 516,
                                "name": "ERC1967Utils",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1208,
                                "src": "3800:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1208_$",
                                  "typeString": "type(library ERC1967Utils)"
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3813:19:2",
                              "memberName": "IMPLEMENTATION_SLOT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 935,
                              "src": "3800:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "functionReturnParameters": 515,
                            "id": 518,
                            "nodeType": "Return",
                            "src": "3793:39:2"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 509,
                        "nodeType": "StructuredDocumentation",
                        "src": "3123:577:2",
                        "text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
                      },
                      "functionSelector": "52d1902d",
                      "id": 520,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 512,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 511,
                            "name": "notDelegated",
                            "nameLocations": [
                              "3752:12:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 496,
                            "src": "3752:12:2"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3752:12:2"
                        }
                      ],
                      "name": "proxiableUUID",
                      "nameLocation": "3714:13:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 510,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3727:2:2"
                      },
                      "returnParameters": {
                        "id": 515,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 514,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 520,
                            "src": "3774:7:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 513,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3774:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3773:9:2"
                      },
                      "scope": 630,
                      "src": "3705:134:2",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "external"
                    },
                    {
                      "body": {
                        "id": 539,
                        "nodeType": "Block",
                        "src": "4263:109:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 531,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 523,
                                  "src": "4291:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 530,
                                "name": "_authorizeUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "4273:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4273:36:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 533,
                            "nodeType": "ExpressionStatement",
                            "src": "4273:36:2"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 535,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 523,
                                  "src": "4341:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 536,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 525,
                                  "src": "4360:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 534,
                                "name": "_upgradeToAndCallUUPS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 629,
                                "src": "4319:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (address,bytes memory)"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4319:46:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 538,
                            "nodeType": "ExpressionStatement",
                            "src": "4319:46:2"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 521,
                        "nodeType": "StructuredDocumentation",
                        "src": "3845:308:2",
                        "text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
                      },
                      "functionSelector": "4f1ef286",
                      "id": 540,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 528,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 527,
                            "name": "onlyProxy",
                            "nameLocations": [
                              "4253:9:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 488,
                            "src": "4253:9:2"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "4253:9:2"
                        }
                      ],
                      "name": "upgradeToAndCall",
                      "nameLocation": "4167:16:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 526,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 523,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "4192:17:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 540,
                            "src": "4184:25:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 522,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4184:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 525,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "4224:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 540,
                            "src": "4211:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 524,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4211:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4183:46:2"
                      },
                      "returnParameters": {
                        "id": 529,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4263:0:2"
                      },
                      "scope": 630,
                      "src": "4158:214:2",
                      "stateMutability": "payable",
                      "virtual": true,
                      "visibility": "public"
                    },
                    {
                      "body": {
                        "id": 561,
                        "nodeType": "Block",
                        "src": "4644:267:2",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 546,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "4679:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                        "typeString": "contract UUPSUpgradeable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                        "typeString": "contract UUPSUpgradeable"
                                      }
                                    ],
                                    "id": 545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4671:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 544,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4671:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4671:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 548,
                                  "name": "__self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 468,
                                  "src": "4688:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4671:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 550,
                                      "name": "ERC1967Utils",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1208,
                                      "src": "4749:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1208_$",
                                        "typeString": "type(library ERC1967Utils)"
                                      }
                                    },
                                    "id": 551,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4762:17:2",
                                    "memberName": "getImplementation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 966,
                                    "src": "4749:30:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 552,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4749:32:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 553,
                                  "name": "__self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 468,
                                  "src": "4785:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4749:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4671:120:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 560,
                            "nodeType": "IfStatement",
                            "src": "4654:251:2",
                            "trueBody": {
                              "id": 559,
                              "nodeType": "Block",
                              "src": "4844:61:2",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 556,
                                      "name": "UUPSUnauthorizedCallContext",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "4865:27:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4865:29:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 558,
                                  "nodeType": "RevertStatement",
                                  "src": "4858:36:2"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 541,
                        "nodeType": "StructuredDocumentation",
                        "src": "4378:216:2",
                        "text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
                      },
                      "id": 562,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_checkProxy",
                      "nameLocation": "4608:11:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 542,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4619:2:2"
                      },
                      "returnParameters": {
                        "id": 543,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4644:0:2"
                      },
                      "scope": 630,
                      "src": "4599:312:2",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 577,
                        "nodeType": "Block",
                        "src": "5080:161:2",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 568,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "5102:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                      "typeString": "contract UUPSUpgradeable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                      "typeString": "contract UUPSUpgradeable"
                                    }
                                  ],
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5094:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 566,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5094:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5094:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 570,
                                "name": "__self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 468,
                                "src": "5111:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5094:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 576,
                            "nodeType": "IfStatement",
                            "src": "5090:145:2",
                            "trueBody": {
                              "id": 575,
                              "nodeType": "Block",
                              "src": "5119:116:2",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 572,
                                      "name": "UUPSUnauthorizedCallContext",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "5195:27:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5195:29:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "RevertStatement",
                                  "src": "5188:36:2"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 563,
                        "nodeType": "StructuredDocumentation",
                        "src": "4917:106:2",
                        "text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
                      },
                      "id": 578,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_checkNotDelegated",
                      "nameLocation": "5037:18:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 564,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "5055:2:2"
                      },
                      "returnParameters": {
                        "id": 565,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "5080:0:2"
                      },
                      "scope": 630,
                      "src": "5028:213:2",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "documentation": {
                        "id": 579,
                        "nodeType": "StructuredDocumentation",
                        "src": "5247:372:2",
                        "text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
                      },
                      "id": 584,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_authorizeUpgrade",
                      "nameLocation": "5633:17:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 582,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 581,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "5659:17:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 584,
                            "src": "5651:25:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 580,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5651:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5650:27:2"
                      },
                      "returnParameters": {
                        "id": 583,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "5694:0:2"
                      },
                      "scope": 630,
                      "src": "5624:71:2",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 628,
                        "nodeType": "Block",
                        "src": "6137:453:2",
                        "statements": [
                          {
                            "clauses": [
                              {
                                "block": {
                                  "id": 617,
                                  "nodeType": "Block",
                                  "src": "6227:212:2",
                                  "statements": [
                                    {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        "id": 603,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 600,
                                          "name": "slot",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 598,
                                          "src": "6245:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 601,
                                            "name": "ERC1967Utils",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1208,
                                            "src": "6253:12:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1208_$",
                                              "typeString": "type(library ERC1967Utils)"
                                            }
                                          },
                                          "id": 602,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "6266:19:2",
                                          "memberName": "IMPLEMENTATION_SLOT",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 935,
                                          "src": "6253:32:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "src": "6245:40:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 609,
                                      "nodeType": "IfStatement",
                                      "src": "6241:120:2",
                                      "trueBody": {
                                        "id": 608,
                                        "nodeType": "Block",
                                        "src": "6287:74:2",
                                        "statements": [
                                          {
                                            "errorCall": {
                                              "arguments": [
                                                {
                                                  "id": 605,
                                                  "name": "slot",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 598,
                                                  "src": "6341:4:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                ],
                                                "id": 604,
                                                "name": "UUPSUnsupportedProxiableUUID",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 480,
                                                "src": "6312:28:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                                  "typeString": "function (bytes32) pure"
                                                }
                                              },
                                              "id": 606,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "6312:34:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 607,
                                            "nodeType": "RevertStatement",
                                            "src": "6305:41:2"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 613,
                                            "name": "newImplementation",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 587,
                                            "src": "6404:17:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 614,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 589,
                                            "src": "6423:4:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "expression": {
                                            "id": 610,
                                            "name": "ERC1967Utils",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1208,
                                            "src": "6374:12:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1208_$",
                                              "typeString": "type(library ERC1967Utils)"
                                            }
                                          },
                                          "id": 612,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6387:16:2",
                                          "memberName": "upgradeToAndCall",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1027,
                                          "src": "6374:29:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                            "typeString": "function (address,bytes memory)"
                                          }
                                        },
                                        "id": 615,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6374:54:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 616,
                                      "nodeType": "ExpressionStatement",
                                      "src": "6374:54:2"
                                    }
                                  ]
                                },
                                "errorName": "",
                                "id": 618,
                                "nodeType": "TryCatchClause",
                                "parameters": {
                                  "id": 599,
                                  "nodeType": "ParameterList",
                                  "parameters": [
                                    {
                                      "constant": false,
                                      "id": 598,
                                      "mutability": "mutable",
                                      "name": "slot",
                                      "nameLocation": "6221:4:2",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 618,
                                      "src": "6213:12:2",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 597,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6213:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "src": "6212:14:2"
                                },
                                "src": "6204:235:2"
                              },
                              {
                                "block": {
                                  "id": 625,
                                  "nodeType": "Block",
                                  "src": "6446:138:2",
                                  "statements": [
                                    {
                                      "errorCall": {
                                        "arguments": [
                                          {
                                            "id": 622,
                                            "name": "newImplementation",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 587,
                                            "src": "6555:17:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 619,
                                            "name": "ERC1967Utils",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1208,
                                            "src": "6513:12:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1208_$",
                                              "typeString": "type(library ERC1967Utils)"
                                            }
                                          },
                                          "id": 621,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6526:28:2",
                                          "memberName": "ERC1967InvalidImplementation",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 940,
                                          "src": "6513:41:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                            "typeString": "function (address) pure"
                                          }
                                        },
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6513:60:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 624,
                                      "nodeType": "RevertStatement",
                                      "src": "6506:67:2"
                                    }
                                  ]
                                },
                                "errorName": "",
                                "id": 626,
                                "nodeType": "TryCatchClause",
                                "src": "6440:144:2"
                              }
                            ],
                            "externalCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 593,
                                      "name": "newImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 587,
                                      "src": "6169:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 592,
                                    "name": "IERC1822Proxiable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 905,
                                    "src": "6151:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$905_$",
                                      "typeString": "type(contract IERC1822Proxiable)"
                                    }
                                  },
                                  "id": 594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6151:36:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1822Proxiable_$905",
                                    "typeString": "contract IERC1822Proxiable"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6188:13:2",
                                "memberName": "proxiableUUID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 904,
                                "src": "6151:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6151:52:2",
                              "tryCall": true,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 627,
                            "nodeType": "TryStatement",
                            "src": "6147:437:2"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 585,
                        "nodeType": "StructuredDocumentation",
                        "src": "5701:346:2",
                        "text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
                      },
                      "id": 629,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_upgradeToAndCallUUPS",
                      "nameLocation": "6061:21:2",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 590,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 587,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "6091:17:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 629,
                            "src": "6083:25:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 586,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6083:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 589,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "6123:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 629,
                            "src": "6110:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 588,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6110:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "6082:46:2"
                      },
                      "returnParameters": {
                        "id": 591,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "6137:0:2"
                      },
                      "scope": 630,
                      "src": "6052:538:2",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "private"
                    }
                  ],
                  "scope": 631,
                  "src": "986:5606:2",
                  "usedErrors": [
                    211,
                    214,
                    475,
                    480,
                    940,
                    953,
                    1770,
                    1773
                  ],
                  "usedEvents": [
                    219,
                    919
                  ]
                }
              ],
              "src": "115:6478:2"
            },
            "id": 2
          },
          "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
              "exportedSymbols": {
                "ERC721HolderUpgradeable": [
                  673
                ],
                "IERC721Receiver": [
                  1757
                ],
                "Initializable": [
                  448
                ]
              },
              "id": 674,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 632,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "119:24:3"
                },
                {
                  "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
                  "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
                  "id": 634,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 674,
                  "sourceUnit": 1758,
                  "src": "145:89:3",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 633,
                        "name": "IERC721Receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1757,
                        "src": "153:15:3",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                  "file": "../../../proxy/utils/Initializable.sol",
                  "id": 636,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 674,
                  "sourceUnit": 449,
                  "src": "235:69:3",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 635,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "243:13:3",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": true,
                  "baseContracts": [
                    {
                      "baseName": {
                        "id": 638,
                        "name": "Initializable",
                        "nameLocations": [
                          "590:13:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 448,
                        "src": "590:13:3"
                      },
                      "id": 639,
                      "nodeType": "InheritanceSpecifier",
                      "src": "590:13:3"
                    },
                    {
                      "baseName": {
                        "id": 640,
                        "name": "IERC721Receiver",
                        "nameLocations": [
                          "605:15:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1757,
                        "src": "605:15:3"
                      },
                      "id": 641,
                      "nodeType": "InheritanceSpecifier",
                      "src": "605:15:3"
                    }
                  ],
                  "canonicalName": "ERC721HolderUpgradeable",
                  "contractDependencies": [],
                  "contractKind": "contract",
                  "documentation": {
                    "id": 637,
                    "nodeType": "StructuredDocumentation",
                    "src": "306:238:3",
                    "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n {IERC721-setApprovalForAll}."
                  },
                  "fullyImplemented": true,
                  "id": 673,
                  "linearizedBaseContracts": [
                    673,
                    1757,
                    448
                  ],
                  "name": "ERC721HolderUpgradeable",
                  "nameLocation": "563:23:3",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "body": {
                        "id": 646,
                        "nodeType": "Block",
                        "src": "684:7:3",
                        "statements": []
                      },
                      "id": 647,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 644,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 643,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "667:16:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "667:16:3"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "667:16:3"
                        }
                      ],
                      "name": "__ERC721Holder_init",
                      "nameLocation": "636:19:3",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 642,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "655:2:3"
                      },
                      "returnParameters": {
                        "id": 645,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "684:0:3"
                      },
                      "scope": 673,
                      "src": "627:64:3",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 652,
                        "nodeType": "Block",
                        "src": "764:7:3",
                        "statements": []
                      },
                      "id": 653,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 650,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 649,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "747:16:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "747:16:3"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "747:16:3"
                        }
                      ],
                      "name": "__ERC721Holder_init_unchained",
                      "nameLocation": "706:29:3",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 648,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "735:2:3"
                      },
                      "returnParameters": {
                        "id": 651,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "764:0:3"
                      },
                      "scope": 673,
                      "src": "697:74:3",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "baseFunctions": [
                        1756
                      ],
                      "body": {
                        "id": 671,
                        "nodeType": "Block",
                        "src": "1017:54:3",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 667,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1034:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721HolderUpgradeable_$673",
                                    "typeString": "contract ERC721HolderUpgradeable"
                                  }
                                },
                                "id": 668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1039:16:3",
                                "memberName": "onERC721Received",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 672,
                                "src": "1034:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                }
                              },
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1056:8:3",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "1034:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "functionReturnParameters": 666,
                            "id": 670,
                            "nodeType": "Return",
                            "src": "1027:37:3"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 654,
                        "nodeType": "StructuredDocumentation",
                        "src": "776:137:3",
                        "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
                      },
                      "functionSelector": "150b7a02",
                      "id": 672,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "onERC721Received",
                      "nameLocation": "927:16:3",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 663,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 656,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 672,
                            "src": "944:7:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 655,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "944:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 658,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 672,
                            "src": "953:7:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 657,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "953:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 660,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 672,
                            "src": "962:7:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 659,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "962:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 662,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 672,
                            "src": "971:12:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 661,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "971:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "943:41:3"
                      },
                      "returnParameters": {
                        "id": 666,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 665,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 672,
                            "src": "1009:6:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 664,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "1009:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1008:8:3"
                      },
                      "scope": 673,
                      "src": "918:153:3",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "public"
                    }
                  ],
                  "scope": 674,
                  "src": "545:528:3",
                  "usedErrors": [
                    211,
                    214
                  ],
                  "usedEvents": [
                    219
                  ]
                }
              ],
              "src": "119:955:3"
            },
            "id": 3
          },
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "exportedSymbols": {
                "ContextUpgradeable": [
                  719
                ],
                "Initializable": [
                  448
                ]
              },
              "id": 720,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 675,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "101:24:4"
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                  "file": "../proxy/utils/Initializable.sol",
                  "id": 677,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 720,
                  "sourceUnit": 449,
                  "src": "126:63:4",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 676,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "134:13:4",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": true,
                  "baseContracts": [
                    {
                      "baseName": {
                        "id": 679,
                        "name": "Initializable",
                        "nameLocations": [
                          "728:13:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 448,
                        "src": "728:13:4"
                      },
                      "id": 680,
                      "nodeType": "InheritanceSpecifier",
                      "src": "728:13:4"
                    }
                  ],
                  "canonicalName": "ContextUpgradeable",
                  "contractDependencies": [],
                  "contractKind": "contract",
                  "documentation": {
                    "id": 678,
                    "nodeType": "StructuredDocumentation",
                    "src": "191:496:4",
                    "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
                  },
                  "fullyImplemented": true,
                  "id": 719,
                  "linearizedBaseContracts": [
                    719,
                    448
                  ],
                  "name": "ContextUpgradeable",
                  "nameLocation": "706:18:4",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "body": {
                        "id": 685,
                        "nodeType": "Block",
                        "src": "800:7:4",
                        "statements": []
                      },
                      "id": 686,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 683,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 682,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "783:16:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "783:16:4"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "783:16:4"
                        }
                      ],
                      "name": "__Context_init",
                      "nameLocation": "757:14:4",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 681,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "771:2:4"
                      },
                      "returnParameters": {
                        "id": 684,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "800:0:4"
                      },
                      "scope": 719,
                      "src": "748:59:4",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 691,
                        "nodeType": "Block",
                        "src": "875:7:4",
                        "statements": []
                      },
                      "id": 692,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 689,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 688,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "858:16:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "858:16:4"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "858:16:4"
                        }
                      ],
                      "name": "__Context_init_unchained",
                      "nameLocation": "822:24:4",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 687,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "846:2:4"
                      },
                      "returnParameters": {
                        "id": 690,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "875:0:4"
                      },
                      "scope": 719,
                      "src": "813:69:4",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 700,
                        "nodeType": "Block",
                        "src": "949:34:4",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 697,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "966:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "970:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "966:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 696,
                            "id": 699,
                            "nodeType": "Return",
                            "src": "959:17:4"
                          }
                        ]
                      },
                      "id": 701,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_msgSender",
                      "nameLocation": "896:10:4",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 693,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "906:2:4"
                      },
                      "returnParameters": {
                        "id": 696,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 695,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 701,
                            "src": "940:7:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 694,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "940:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "939:9:4"
                      },
                      "scope": 719,
                      "src": "887:96:4",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 709,
                        "nodeType": "Block",
                        "src": "1056:32:4",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 706,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1073:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1077:4:4",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "1073:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "functionReturnParameters": 705,
                            "id": 708,
                            "nodeType": "Return",
                            "src": "1066:15:4"
                          }
                        ]
                      },
                      "id": 710,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_msgData",
                      "nameLocation": "998:8:4",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 702,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1006:2:4"
                      },
                      "returnParameters": {
                        "id": 705,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 704,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "1040:14:4",
                            "stateVariable": false,
                            "storageLocation": "calldata",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 703,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1040:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1039:16:4"
                      },
                      "scope": 719,
                      "src": "989:99:4",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 717,
                        "nodeType": "Block",
                        "src": "1166:25:4",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "30",
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1183:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 714,
                            "id": 716,
                            "nodeType": "Return",
                            "src": "1176:8:4"
                          }
                        ]
                      },
                      "id": 718,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_contextSuffixLength",
                      "nameLocation": "1103:20:4",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 711,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1123:2:4"
                      },
                      "returnParameters": {
                        "id": 714,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 713,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 718,
                            "src": "1157:7:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 712,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1157:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1156:9:4"
                      },
                      "scope": 719,
                      "src": "1094:97:4",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    }
                  ],
                  "scope": 720,
                  "src": "688:505:4",
                  "usedErrors": [
                    211,
                    214
                  ],
                  "usedEvents": [
                    219
                  ]
                }
              ],
              "src": "101:1093:4"
            },
            "id": 4
          },
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
              "exportedSymbols": {
                "ContextUpgradeable": [
                  719
                ],
                "Initializable": [
                  448
                ],
                "PausableUpgradeable": [
                  895
                ]
              },
              "id": 896,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 721,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "102:24:5"
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                  "file": "../utils/ContextUpgradeable.sol",
                  "id": 723,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 896,
                  "sourceUnit": 720,
                  "src": "128:67:5",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 722,
                        "name": "ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "136:18:5",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                  "file": "../proxy/utils/Initializable.sol",
                  "id": 725,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 896,
                  "sourceUnit": 449,
                  "src": "196:63:5",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 724,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "204:13:5",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": true,
                  "baseContracts": [
                    {
                      "baseName": {
                        "id": 727,
                        "name": "Initializable",
                        "nameLocations": [
                          "742:13:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 448,
                        "src": "742:13:5"
                      },
                      "id": 728,
                      "nodeType": "InheritanceSpecifier",
                      "src": "742:13:5"
                    },
                    {
                      "baseName": {
                        "id": 729,
                        "name": "ContextUpgradeable",
                        "nameLocations": [
                          "757:18:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 719,
                        "src": "757:18:5"
                      },
                      "id": 730,
                      "nodeType": "InheritanceSpecifier",
                      "src": "757:18:5"
                    }
                  ],
                  "canonicalName": "PausableUpgradeable",
                  "contractDependencies": [],
                  "contractKind": "contract",
                  "documentation": {
                    "id": 726,
                    "nodeType": "StructuredDocumentation",
                    "src": "261:439:5",
                    "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
                  },
                  "fullyImplemented": true,
                  "id": 895,
                  "linearizedBaseContracts": [
                    895,
                    719,
                    448
                  ],
                  "name": "PausableUpgradeable",
                  "nameLocation": "719:19:5",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "canonicalName": "PausableUpgradeable.PausableStorage",
                      "documentation": {
                        "id": 731,
                        "nodeType": "StructuredDocumentation",
                        "src": "782:66:5",
                        "text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
                      },
                      "id": 734,
                      "members": [
                        {
                          "constant": false,
                          "id": 733,
                          "mutability": "mutable",
                          "name": "_paused",
                          "nameLocation": "891:7:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 734,
                          "src": "886:12:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 732,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "886:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "PausableStorage",
                      "nameLocation": "860:15:5",
                      "nodeType": "StructDefinition",
                      "scope": 895,
                      "src": "853:52:5",
                      "visibility": "public"
                    },
                    {
                      "constant": true,
                      "id": 737,
                      "mutability": "constant",
                      "name": "PausableStorageLocation",
                      "nameLocation": "1048:23:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 895,
                      "src": "1023:117:5",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 735,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1023:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": {
                        "hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1074:66:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
                          "typeString": "int_const 9289...(69 digits omitted)...6832"
                        },
                        "value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
                      },
                      "visibility": "private"
                    },
                    {
                      "body": {
                        "id": 744,
                        "nodeType": "Block",
                        "src": "1227:82:5",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "1246:57:5",
                              "nodeType": "YulBlock",
                              "src": "1246:57:5",
                              "statements": [
                                {
                                  "nativeSrc": "1260:33:5",
                                  "nodeType": "YulAssignment",
                                  "src": "1260:33:5",
                                  "value": {
                                    "name": "PausableStorageLocation",
                                    "nativeSrc": "1270:23:5",
                                    "nodeType": "YulIdentifier",
                                    "src": "1270:23:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "$.slot",
                                      "nativeSrc": "1260:6:5",
                                      "nodeType": "YulIdentifier",
                                      "src": "1260:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 741,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "1260:6:5",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 737,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "1270:23:5",
                                "valueSize": 1
                              }
                            ],
                            "id": 743,
                            "nodeType": "InlineAssembly",
                            "src": "1237:66:5"
                          }
                        ]
                      },
                      "id": 745,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_getPausableStorage",
                      "nameLocation": "1156:19:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 738,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1175:2:5"
                      },
                      "returnParameters": {
                        "id": 742,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 741,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "1224:1:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 745,
                            "src": "1200:25:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                              "typeString": "struct PausableUpgradeable.PausableStorage"
                            },
                            "typeName": {
                              "id": 740,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 739,
                                "name": "PausableStorage",
                                "nameLocations": [
                                  "1200:15:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 734,
                                "src": "1200:15:5"
                              },
                              "referencedDeclaration": 734,
                              "src": "1200:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1199:27:5"
                      },
                      "scope": 895,
                      "src": "1147:162:5",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "private"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 746,
                        "nodeType": "StructuredDocumentation",
                        "src": "1315:73:5",
                        "text": " @dev Emitted when the pause is triggered by `account`."
                      },
                      "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                      "id": 750,
                      "name": "Paused",
                      "nameLocation": "1399:6:5",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 749,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 748,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "1414:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 750,
                            "src": "1406:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1406:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1405:17:5"
                      },
                      "src": "1393:30:5"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 751,
                        "nodeType": "StructuredDocumentation",
                        "src": "1429:70:5",
                        "text": " @dev Emitted when the pause is lifted by `account`."
                      },
                      "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                      "id": 755,
                      "name": "Unpaused",
                      "nameLocation": "1510:8:5",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 754,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 753,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "1527:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 755,
                            "src": "1519:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 752,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1519:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1518:17:5"
                      },
                      "src": "1504:32:5"
                    },
                    {
                      "documentation": {
                        "id": 756,
                        "nodeType": "StructuredDocumentation",
                        "src": "1542:76:5",
                        "text": " @dev The operation failed because the contract is paused."
                      },
                      "errorSelector": "d93c0665",
                      "id": 758,
                      "name": "EnforcedPause",
                      "nameLocation": "1629:13:5",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 757,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1642:2:5"
                      },
                      "src": "1623:22:5"
                    },
                    {
                      "documentation": {
                        "id": 759,
                        "nodeType": "StructuredDocumentation",
                        "src": "1651:80:5",
                        "text": " @dev The operation failed because the contract is not paused."
                      },
                      "errorSelector": "8dfc202b",
                      "id": 761,
                      "name": "ExpectedPause",
                      "nameLocation": "1742:13:5",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 760,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1755:2:5"
                      },
                      "src": "1736:22:5"
                    },
                    {
                      "body": {
                        "id": 770,
                        "nodeType": "Block",
                        "src": "1889:44:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 767,
                                "name": "__Pausable_init_unchained",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 789,
                                "src": "1899:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1899:27:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 769,
                            "nodeType": "ExpressionStatement",
                            "src": "1899:27:5"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 762,
                        "nodeType": "StructuredDocumentation",
                        "src": "1764:67:5",
                        "text": " @dev Initializes the contract in unpaused state."
                      },
                      "id": 771,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 765,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 764,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "1872:16:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "1872:16:5"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "1872:16:5"
                        }
                      ],
                      "name": "__Pausable_init",
                      "nameLocation": "1845:15:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 763,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1860:2:5"
                      },
                      "returnParameters": {
                        "id": 766,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1889:0:5"
                      },
                      "scope": 895,
                      "src": "1836:97:5",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 788,
                        "nodeType": "Block",
                        "src": "2002:93:5",
                        "statements": [
                          {
                            "assignments": [
                              778
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 778,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "2036:1:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 788,
                                "src": "2012:25:5",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                  "typeString": "struct PausableUpgradeable.PausableStorage"
                                },
                                "typeName": {
                                  "id": 777,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 776,
                                    "name": "PausableStorage",
                                    "nameLocations": [
                                      "2012:15:5"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 734,
                                    "src": "2012:15:5"
                                  },
                                  "referencedDeclaration": 734,
                                  "src": "2012:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                    "typeString": "struct PausableUpgradeable.PausableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 781,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 779,
                                "name": "_getPausableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "2040:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$734_storage_ptr_$",
                                  "typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
                                }
                              },
                              "id": 780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2040:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2012:49:5"
                          },
                          {
                            "expression": {
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 782,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 778,
                                  "src": "2071:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                    "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                                  }
                                },
                                "id": 784,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "2073:7:5",
                                "memberName": "_paused",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 733,
                                "src": "2071:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "66616c7365",
                                "id": 785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2083:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "2071:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 787,
                            "nodeType": "ExpressionStatement",
                            "src": "2071:17:5"
                          }
                        ]
                      },
                      "id": 789,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 774,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 773,
                            "name": "onlyInitializing",
                            "nameLocations": [
                              "1985:16:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "1985:16:5"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "1985:16:5"
                        }
                      ],
                      "name": "__Pausable_init_unchained",
                      "nameLocation": "1948:25:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 772,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1973:2:5"
                      },
                      "returnParameters": {
                        "id": 775,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2002:0:5"
                      },
                      "scope": 895,
                      "src": "1939:156:5",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 796,
                        "nodeType": "Block",
                        "src": "2306:47:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 792,
                                "name": "_requireNotPaused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "2316:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                  "typeString": "function () view"
                                }
                              },
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2316:19:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 794,
                            "nodeType": "ExpressionStatement",
                            "src": "2316:19:5"
                          },
                          {
                            "id": 795,
                            "nodeType": "PlaceholderStatement",
                            "src": "2345:1:5"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 790,
                        "nodeType": "StructuredDocumentation",
                        "src": "2101:175:5",
                        "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                      },
                      "id": 797,
                      "name": "whenNotPaused",
                      "nameLocation": "2290:13:5",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 791,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2303:2:5"
                      },
                      "src": "2281:72:5",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 804,
                        "nodeType": "Block",
                        "src": "2553:44:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 800,
                                "name": "_requirePaused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "2563:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                  "typeString": "function () view"
                                }
                              },
                              "id": 801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2563:16:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 802,
                            "nodeType": "ExpressionStatement",
                            "src": "2563:16:5"
                          },
                          {
                            "id": 803,
                            "nodeType": "PlaceholderStatement",
                            "src": "2589:1:5"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 798,
                        "nodeType": "StructuredDocumentation",
                        "src": "2359:167:5",
                        "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                      },
                      "id": 805,
                      "name": "whenPaused",
                      "nameLocation": "2540:10:5",
                      "nodeType": "ModifierDefinition",
                      "parameters": {
                        "id": 799,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2550:2:5"
                      },
                      "src": "2531:66:5",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 820,
                        "nodeType": "Block",
                        "src": "2745:92:5",
                        "statements": [
                          {
                            "assignments": [
                              813
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 813,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "2779:1:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 820,
                                "src": "2755:25:5",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                  "typeString": "struct PausableUpgradeable.PausableStorage"
                                },
                                "typeName": {
                                  "id": 812,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 811,
                                    "name": "PausableStorage",
                                    "nameLocations": [
                                      "2755:15:5"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 734,
                                    "src": "2755:15:5"
                                  },
                                  "referencedDeclaration": 734,
                                  "src": "2755:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                    "typeString": "struct PausableUpgradeable.PausableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 816,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 814,
                                "name": "_getPausableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "2783:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$734_storage_ptr_$",
                                  "typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
                                }
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2783:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2755:49:5"
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 817,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 813,
                                "src": "2821:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                  "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                                }
                              },
                              "id": 818,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2823:7:5",
                              "memberName": "_paused",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 733,
                              "src": "2821:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 810,
                            "id": 819,
                            "nodeType": "Return",
                            "src": "2814:16:5"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 806,
                        "nodeType": "StructuredDocumentation",
                        "src": "2603:84:5",
                        "text": " @dev Returns true if the contract is paused, and false otherwise."
                      },
                      "functionSelector": "5c975abb",
                      "id": 821,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "paused",
                      "nameLocation": "2701:6:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 807,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2707:2:5"
                      },
                      "returnParameters": {
                        "id": 810,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 809,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 821,
                            "src": "2739:4:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 808,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2739:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2738:6:5"
                      },
                      "scope": 895,
                      "src": "2692:145:5",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "public"
                    },
                    {
                      "body": {
                        "id": 832,
                        "nodeType": "Block",
                        "src": "2956:77:5",
                        "statements": [
                          {
                            "condition": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 825,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 821,
                                "src": "2970:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2970:8:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 831,
                            "nodeType": "IfStatement",
                            "src": "2966:61:5",
                            "trueBody": {
                              "id": 830,
                              "nodeType": "Block",
                              "src": "2980:47:5",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 827,
                                      "name": "EnforcedPause",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 758,
                                      "src": "3001:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3001:15:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 829,
                                  "nodeType": "RevertStatement",
                                  "src": "2994:22:5"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 822,
                        "nodeType": "StructuredDocumentation",
                        "src": "2843:57:5",
                        "text": " @dev Throws if the contract is paused."
                      },
                      "id": 833,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_requireNotPaused",
                      "nameLocation": "2914:17:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 823,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2931:2:5"
                      },
                      "returnParameters": {
                        "id": 824,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2956:0:5"
                      },
                      "scope": 895,
                      "src": "2905:128:5",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 845,
                        "nodeType": "Block",
                        "src": "3153:78:5",
                        "statements": [
                          {
                            "condition": {
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3167:9:5",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 837,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 821,
                                  "src": "3168:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3168:8:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 844,
                            "nodeType": "IfStatement",
                            "src": "3163:62:5",
                            "trueBody": {
                              "id": 843,
                              "nodeType": "Block",
                              "src": "3178:47:5",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 840,
                                      "name": "ExpectedPause",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 761,
                                      "src": "3199:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 841,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3199:15:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 842,
                                  "nodeType": "RevertStatement",
                                  "src": "3192:22:5"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 834,
                        "nodeType": "StructuredDocumentation",
                        "src": "3039:61:5",
                        "text": " @dev Throws if the contract is not paused."
                      },
                      "id": 846,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_requirePaused",
                      "nameLocation": "3114:14:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 835,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3128:2:5"
                      },
                      "returnParameters": {
                        "id": 836,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3153:0:5"
                      },
                      "scope": 895,
                      "src": "3105:126:5",
                      "stateMutability": "view",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 869,
                        "nodeType": "Block",
                        "src": "3415:127:5",
                        "statements": [
                          {
                            "assignments": [
                              854
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 854,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "3449:1:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 869,
                                "src": "3425:25:5",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                  "typeString": "struct PausableUpgradeable.PausableStorage"
                                },
                                "typeName": {
                                  "id": 853,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 852,
                                    "name": "PausableStorage",
                                    "nameLocations": [
                                      "3425:15:5"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 734,
                                    "src": "3425:15:5"
                                  },
                                  "referencedDeclaration": 734,
                                  "src": "3425:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                    "typeString": "struct PausableUpgradeable.PausableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 857,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 855,
                                "name": "_getPausableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "3453:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$734_storage_ptr_$",
                                  "typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
                                }
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3453:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3425:49:5"
                          },
                          {
                            "expression": {
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 858,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 854,
                                  "src": "3484:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                    "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                                  }
                                },
                                "id": 860,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "3486:7:5",
                                "memberName": "_paused",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 733,
                                "src": "3484:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3496:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "3484:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 863,
                            "nodeType": "ExpressionStatement",
                            "src": "3484:16:5"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 865,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 701,
                                    "src": "3522:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 866,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3522:12:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 864,
                                "name": "Paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 750,
                                "src": "3515:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3515:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 868,
                            "nodeType": "EmitStatement",
                            "src": "3510:25:5"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 847,
                        "nodeType": "StructuredDocumentation",
                        "src": "3237:124:5",
                        "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                      },
                      "id": 870,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 850,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 849,
                            "name": "whenNotPaused",
                            "nameLocations": [
                              "3401:13:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 797,
                            "src": "3401:13:5"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3401:13:5"
                        }
                      ],
                      "name": "_pause",
                      "nameLocation": "3375:6:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 848,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3381:2:5"
                      },
                      "returnParameters": {
                        "id": 851,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3415:0:5"
                      },
                      "scope": 895,
                      "src": "3366:176:5",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 893,
                        "nodeType": "Block",
                        "src": "3722:130:5",
                        "statements": [
                          {
                            "assignments": [
                              878
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 878,
                                "mutability": "mutable",
                                "name": "$",
                                "nameLocation": "3756:1:5",
                                "nodeType": "VariableDeclaration",
                                "scope": 893,
                                "src": "3732:25:5",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                  "typeString": "struct PausableUpgradeable.PausableStorage"
                                },
                                "typeName": {
                                  "id": 877,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 876,
                                    "name": "PausableStorage",
                                    "nameLocations": [
                                      "3732:15:5"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 734,
                                    "src": "3732:15:5"
                                  },
                                  "referencedDeclaration": 734,
                                  "src": "3732:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                    "typeString": "struct PausableUpgradeable.PausableStorage"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 881,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 879,
                                "name": "_getPausableStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "3760:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$734_storage_ptr_$",
                                  "typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
                                }
                              },
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3760:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3732:49:5"
                          },
                          {
                            "expression": {
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 882,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 878,
                                  "src": "3791:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PausableStorage_$734_storage_ptr",
                                    "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                                  }
                                },
                                "id": 884,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "3793:7:5",
                                "memberName": "_paused",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 733,
                                "src": "3791:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "66616c7365",
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3803:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3791:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 887,
                            "nodeType": "ExpressionStatement",
                            "src": "3791:17:5"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 889,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 701,
                                    "src": "3832:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 890,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3832:12:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 888,
                                "name": "Unpaused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 755,
                                "src": "3823:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3823:22:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 892,
                            "nodeType": "EmitStatement",
                            "src": "3818:27:5"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 871,
                        "nodeType": "StructuredDocumentation",
                        "src": "3548:121:5",
                        "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                      },
                      "id": 894,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 874,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 873,
                            "name": "whenPaused",
                            "nameLocations": [
                              "3711:10:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 805,
                            "src": "3711:10:5"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3711:10:5"
                        }
                      ],
                      "name": "_unpause",
                      "nameLocation": "3683:8:5",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 872,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3691:2:5"
                      },
                      "returnParameters": {
                        "id": 875,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3722:0:5"
                      },
                      "scope": 895,
                      "src": "3674:178:5",
                      "stateMutability": "nonpayable",
                      "virtual": true,
                      "visibility": "internal"
                    }
                  ],
                  "scope": 896,
                  "src": "701:3153:5",
                  "usedErrors": [
                    211,
                    214,
                    758,
                    761
                  ],
                  "usedEvents": [
                    219,
                    750,
                    755
                  ]
                }
              ],
              "src": "102:3753:5"
            },
            "id": 5
          },
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
              "exportedSymbols": {
                "IERC1822Proxiable": [
                  905
                ]
              },
              "id": 906,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 897,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "113:24:6"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "IERC1822Proxiable",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "documentation": {
                    "id": 898,
                    "nodeType": "StructuredDocumentation",
                    "src": "139:203:6",
                    "text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
                  },
                  "fullyImplemented": false,
                  "id": 905,
                  "linearizedBaseContracts": [
                    905
                  ],
                  "name": "IERC1822Proxiable",
                  "nameLocation": "353:17:6",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "documentation": {
                        "id": 899,
                        "nodeType": "StructuredDocumentation",
                        "src": "377:438:6",
                        "text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
                      },
                      "functionSelector": "52d1902d",
                      "id": 904,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "proxiableUUID",
                      "nameLocation": "829:13:6",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 900,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "842:2:6"
                      },
                      "returnParameters": {
                        "id": 903,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 902,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 904,
                            "src": "868:7:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 901,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "868:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "867:9:6"
                      },
                      "scope": 905,
                      "src": "820:57:6",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 906,
                  "src": "343:536:6",
                  "usedErrors": [],
                  "usedEvents": []
                }
              ],
              "src": "113:767:6"
            },
            "id": 6
          },
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
              "exportedSymbols": {
                "Address": [
                  2010
                ],
                "ERC1967Utils": [
                  1208
                ],
                "IBeacon": [
                  1218
                ],
                "StorageSlot": [
                  2120
                ]
              },
              "id": 1209,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 907,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "114:24:7"
                },
                {
                  "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                  "file": "../beacon/IBeacon.sol",
                  "id": 909,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 1209,
                  "sourceUnit": 1219,
                  "src": "140:46:7",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 908,
                        "name": "IBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1218,
                        "src": "148:7:7",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
                  "file": "../../utils/Address.sol",
                  "id": 911,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 1209,
                  "sourceUnit": 2011,
                  "src": "187:48:7",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 910,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "195:7:7",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
                  "file": "../../utils/StorageSlot.sol",
                  "id": 913,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 1209,
                  "sourceUnit": 2121,
                  "src": "236:56:7",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 912,
                        "name": "StorageSlot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2120,
                        "src": "244:11:7",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "ERC1967Utils",
                  "contractDependencies": [],
                  "contractKind": "library",
                  "documentation": {
                    "id": 914,
                    "nodeType": "StructuredDocumentation",
                    "src": "294:154:7",
                    "text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
                  },
                  "fullyImplemented": true,
                  "id": 1208,
                  "linearizedBaseContracts": [
                    1208
                  ],
                  "name": "ERC1967Utils",
                  "nameLocation": "457:12:7",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 915,
                        "nodeType": "StructuredDocumentation",
                        "src": "660:68:7",
                        "text": " @dev Emitted when the implementation is upgraded."
                      },
                      "eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                      "id": 919,
                      "name": "Upgraded",
                      "nameLocation": "739:8:7",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 918,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 917,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "implementation",
                            "nameLocation": "764:14:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 919,
                            "src": "748:30:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 916,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "748:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "747:32:7"
                      },
                      "src": "733:47:7"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 920,
                        "nodeType": "StructuredDocumentation",
                        "src": "786:67:7",
                        "text": " @dev Emitted when the admin account has changed."
                      },
                      "eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
                      "id": 926,
                      "name": "AdminChanged",
                      "nameLocation": "864:12:7",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 925,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 922,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "previousAdmin",
                            "nameLocation": "885:13:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 926,
                            "src": "877:21:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 921,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "877:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 924,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "newAdmin",
                            "nameLocation": "908:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 926,
                            "src": "900:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "900:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "876:41:7"
                      },
                      "src": "858:60:7"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 927,
                        "nodeType": "StructuredDocumentation",
                        "src": "924:59:7",
                        "text": " @dev Emitted when the beacon is changed."
                      },
                      "eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
                      "id": 931,
                      "name": "BeaconUpgraded",
                      "nameLocation": "994:14:7",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 930,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 929,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "beacon",
                            "nameLocation": "1025:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 931,
                            "src": "1009:22:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 928,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1009:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1008:24:7"
                      },
                      "src": "988:45:7"
                    },
                    {
                      "constant": true,
                      "documentation": {
                        "id": 932,
                        "nodeType": "StructuredDocumentation",
                        "src": "1039:170:7",
                        "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
                      },
                      "id": 935,
                      "mutability": "constant",
                      "name": "IMPLEMENTATION_SLOT",
                      "nameLocation": "1305:19:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "1279:114:7",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 933,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1279:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": {
                        "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1327:66:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                          "typeString": "int_const 2444...(69 digits omitted)...5612"
                        },
                        "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
                      },
                      "visibility": "internal"
                    },
                    {
                      "documentation": {
                        "id": 936,
                        "nodeType": "StructuredDocumentation",
                        "src": "1400:69:7",
                        "text": " @dev The `implementation` of the proxy is invalid."
                      },
                      "errorSelector": "4c9c8ce3",
                      "id": 940,
                      "name": "ERC1967InvalidImplementation",
                      "nameLocation": "1480:28:7",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 939,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 938,
                            "mutability": "mutable",
                            "name": "implementation",
                            "nameLocation": "1517:14:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 940,
                            "src": "1509:22:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 937,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1509:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1508:24:7"
                      },
                      "src": "1474:59:7"
                    },
                    {
                      "documentation": {
                        "id": 941,
                        "nodeType": "StructuredDocumentation",
                        "src": "1539:60:7",
                        "text": " @dev The `admin` of the proxy is invalid."
                      },
                      "errorSelector": "62e77ba2",
                      "id": 945,
                      "name": "ERC1967InvalidAdmin",
                      "nameLocation": "1610:19:7",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 944,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 943,
                            "mutability": "mutable",
                            "name": "admin",
                            "nameLocation": "1638:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 945,
                            "src": "1630:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 942,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1630:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1629:15:7"
                      },
                      "src": "1604:41:7"
                    },
                    {
                      "documentation": {
                        "id": 946,
                        "nodeType": "StructuredDocumentation",
                        "src": "1651:61:7",
                        "text": " @dev The `beacon` of the proxy is invalid."
                      },
                      "errorSelector": "64ced0ec",
                      "id": 950,
                      "name": "ERC1967InvalidBeacon",
                      "nameLocation": "1723:20:7",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 949,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 948,
                            "mutability": "mutable",
                            "name": "beacon",
                            "nameLocation": "1752:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 950,
                            "src": "1744:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 947,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1744:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1743:16:7"
                      },
                      "src": "1717:43:7"
                    },
                    {
                      "documentation": {
                        "id": 951,
                        "nodeType": "StructuredDocumentation",
                        "src": "1766:82:7",
                        "text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
                      },
                      "errorSelector": "b398979f",
                      "id": 953,
                      "name": "ERC1967NonPayable",
                      "nameLocation": "1859:17:7",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 952,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1876:2:7"
                      },
                      "src": "1853:26:7"
                    },
                    {
                      "body": {
                        "id": 965,
                        "nodeType": "Block",
                        "src": "2018:77:7",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 961,
                                    "name": "IMPLEMENTATION_SLOT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 935,
                                    "src": "2062:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 959,
                                    "name": "StorageSlot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2120,
                                    "src": "2035:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2120_$",
                                      "typeString": "type(library StorageSlot)"
                                    }
                                  },
                                  "id": 960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2047:14:7",
                                  "memberName": "getAddressSlot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2042,
                                  "src": "2035:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2016_storage_ptr_$",
                                    "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                  }
                                },
                                "id": 962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2035:47:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                                  "typeString": "struct StorageSlot.AddressSlot storage pointer"
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2083:5:7",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2015,
                              "src": "2035:53:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 958,
                            "id": 964,
                            "nodeType": "Return",
                            "src": "2028:60:7"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 954,
                        "nodeType": "StructuredDocumentation",
                        "src": "1885:67:7",
                        "text": " @dev Returns the current implementation address."
                      },
                      "id": 966,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getImplementation",
                      "nameLocation": "1966:17:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 955,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1983:2:7"
                      },
                      "returnParameters": {
                        "id": 958,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 957,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 966,
                            "src": "2009:7:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 956,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2009:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2008:9:7"
                      },
                      "scope": 1208,
                      "src": "1957:138:7",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 992,
                        "nodeType": "Block",
                        "src": "2249:218:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 972,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 969,
                                    "src": "2263:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2281:4:7",
                                  "memberName": "code",
                                  "nodeType": "MemberAccess",
                                  "src": "2263:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2286:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2263:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2296:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2263:34:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 982,
                            "nodeType": "IfStatement",
                            "src": "2259:119:7",
                            "trueBody": {
                              "id": 981,
                              "nodeType": "Block",
                              "src": "2299:79:7",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 978,
                                        "name": "newImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 969,
                                        "src": "2349:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 977,
                                      "name": "ERC1967InvalidImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 940,
                                      "src": "2320:28:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 979,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2320:47:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 980,
                                  "nodeType": "RevertStatement",
                                  "src": "2313:54:7"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 986,
                                      "name": "IMPLEMENTATION_SLOT",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 935,
                                      "src": "2414:19:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 983,
                                      "name": "StorageSlot",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2120,
                                      "src": "2387:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2120_$",
                                        "typeString": "type(library StorageSlot)"
                                      }
                                    },
                                    "id": 985,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2399:14:7",
                                    "memberName": "getAddressSlot",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2042,
                                    "src": "2387:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2016_storage_ptr_$",
                                      "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                    }
                                  },
                                  "id": 987,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2387:47:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                                    "typeString": "struct StorageSlot.AddressSlot storage pointer"
                                  }
                                },
                                "id": 988,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "2435:5:7",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2015,
                                "src": "2387:53:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 989,
                                "name": "newImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 969,
                                "src": "2443:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2387:73:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 991,
                            "nodeType": "ExpressionStatement",
                            "src": "2387:73:7"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 967,
                        "nodeType": "StructuredDocumentation",
                        "src": "2101:80:7",
                        "text": " @dev Stores a new address in the EIP1967 implementation slot."
                      },
                      "id": 993,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_setImplementation",
                      "nameLocation": "2195:18:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 970,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 969,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "2222:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 993,
                            "src": "2214:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 968,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2214:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2213:27:7"
                      },
                      "returnParameters": {
                        "id": 971,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2249:0:7"
                      },
                      "scope": 1208,
                      "src": "2186:281:7",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "private"
                    },
                    {
                      "body": {
                        "id": 1026,
                        "nodeType": "Block",
                        "src": "2860:254:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1002,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 996,
                                  "src": "2889:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1001,
                                "name": "_setImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 993,
                                "src": "2870:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2870:37:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1004,
                            "nodeType": "ExpressionStatement",
                            "src": "2870:37:7"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 1006,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 996,
                                  "src": "2931:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1005,
                                "name": "Upgraded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "2922:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2922:27:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1008,
                            "nodeType": "EmitStatement",
                            "src": "2917:32:7"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1009,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 998,
                                  "src": "2964:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2969:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2964:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2978:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2964:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1024,
                              "nodeType": "Block",
                              "src": "3065:43:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1021,
                                      "name": "_checkNonPayable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1207,
                                      "src": "3079:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                        "typeString": "function ()"
                                      }
                                    },
                                    "id": 1022,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3079:18:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1023,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3079:18:7"
                                }
                              ]
                            },
                            "id": 1025,
                            "nodeType": "IfStatement",
                            "src": "2960:148:7",
                            "trueBody": {
                              "id": 1020,
                              "nodeType": "Block",
                              "src": "2981:78:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1016,
                                        "name": "newImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 996,
                                        "src": "3024:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1017,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 998,
                                        "src": "3043:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1013,
                                        "name": "Address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2010,
                                        "src": "2995:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_Address_$2010_$",
                                          "typeString": "type(library Address)"
                                        }
                                      },
                                      "id": 1015,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3003:20:7",
                                      "memberName": "functionDelegateCall",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1929,
                                      "src": "2995:28:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                                      }
                                    },
                                    "id": 1018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2995:53:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1019,
                                  "nodeType": "ExpressionStatement",
                                  "src": "2995:53:7"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 994,
                        "nodeType": "StructuredDocumentation",
                        "src": "2473:301:7",
                        "text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
                      },
                      "id": 1027,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "upgradeToAndCall",
                      "nameLocation": "2788:16:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 999,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 996,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "2813:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1027,
                            "src": "2805:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 995,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2805:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 998,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "2845:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1027,
                            "src": "2832:17:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 997,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2832:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2804:46:7"
                      },
                      "returnParameters": {
                        "id": 1000,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2860:0:7"
                      },
                      "scope": 1208,
                      "src": "2779:335:7",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "constant": true,
                      "documentation": {
                        "id": 1028,
                        "nodeType": "StructuredDocumentation",
                        "src": "3120:145:7",
                        "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
                      },
                      "id": 1031,
                      "mutability": "constant",
                      "name": "ADMIN_SLOT",
                      "nameLocation": "3361:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "3335:105:7",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1029,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3335:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": {
                        "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3374:66:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                          "typeString": "int_const 8195...(69 digits omitted)...7091"
                        },
                        "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                      },
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1043,
                        "nodeType": "Block",
                        "src": "3844:68:7",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1039,
                                    "name": "ADMIN_SLOT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1031,
                                    "src": "3888:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1037,
                                    "name": "StorageSlot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2120,
                                    "src": "3861:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2120_$",
                                      "typeString": "type(library StorageSlot)"
                                    }
                                  },
                                  "id": 1038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3873:14:7",
                                  "memberName": "getAddressSlot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2042,
                                  "src": "3861:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2016_storage_ptr_$",
                                    "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                  }
                                },
                                "id": 1040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3861:38:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                                  "typeString": "struct StorageSlot.AddressSlot storage pointer"
                                }
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3900:5:7",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2015,
                              "src": "3861:44:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 1036,
                            "id": 1042,
                            "nodeType": "Return",
                            "src": "3854:51:7"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1032,
                        "nodeType": "StructuredDocumentation",
                        "src": "3447:340:7",
                        "text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
                      },
                      "id": 1044,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getAdmin",
                      "nameLocation": "3801:8:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1033,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3809:2:7"
                      },
                      "returnParameters": {
                        "id": 1036,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1035,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1044,
                            "src": "3835:7:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3835:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3834:9:7"
                      },
                      "scope": 1208,
                      "src": "3792:120:7",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1074,
                        "nodeType": "Block",
                        "src": "4039:172:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1050,
                                "name": "newAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "4053:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1053,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4073:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1052,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4065:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1051,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4065:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4065:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4053:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1064,
                            "nodeType": "IfStatement",
                            "src": "4049:91:7",
                            "trueBody": {
                              "id": 1063,
                              "nodeType": "Block",
                              "src": "4077:63:7",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 1059,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4126:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 1058,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4118:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1057,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4118:7:7",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1060,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4118:10:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1056,
                                      "name": "ERC1967InvalidAdmin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 945,
                                      "src": "4098:19:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 1061,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4098:31:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1062,
                                  "nodeType": "RevertStatement",
                                  "src": "4091:38:7"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1068,
                                      "name": "ADMIN_SLOT",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1031,
                                      "src": "4176:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1065,
                                      "name": "StorageSlot",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2120,
                                      "src": "4149:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2120_$",
                                        "typeString": "type(library StorageSlot)"
                                      }
                                    },
                                    "id": 1067,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4161:14:7",
                                    "memberName": "getAddressSlot",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2042,
                                    "src": "4149:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2016_storage_ptr_$",
                                      "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                    }
                                  },
                                  "id": 1069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4149:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                                    "typeString": "struct StorageSlot.AddressSlot storage pointer"
                                  }
                                },
                                "id": 1070,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "4188:5:7",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2015,
                                "src": "4149:44:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 1071,
                                "name": "newAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "4196:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4149:55:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1073,
                            "nodeType": "ExpressionStatement",
                            "src": "4149:55:7"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1045,
                        "nodeType": "StructuredDocumentation",
                        "src": "3918:71:7",
                        "text": " @dev Stores a new address in the EIP1967 admin slot."
                      },
                      "id": 1075,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_setAdmin",
                      "nameLocation": "4003:9:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1048,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1047,
                            "mutability": "mutable",
                            "name": "newAdmin",
                            "nameLocation": "4021:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1075,
                            "src": "4013:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1046,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4013:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4012:18:7"
                      },
                      "returnParameters": {
                        "id": 1049,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4039:0:7"
                      },
                      "scope": 1208,
                      "src": "3994:217:7",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "private"
                    },
                    {
                      "body": {
                        "id": 1091,
                        "nodeType": "Block",
                        "src": "4379:85:7",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1082,
                                    "name": "getAdmin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1044,
                                    "src": "4407:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4407:10:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1084,
                                  "name": "newAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1078,
                                  "src": "4419:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1081,
                                "name": "AdminChanged",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "4394:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                  "typeString": "function (address,address)"
                                }
                              },
                              "id": 1085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4394:34:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1086,
                            "nodeType": "EmitStatement",
                            "src": "4389:39:7"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1088,
                                  "name": "newAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1078,
                                  "src": "4448:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1087,
                                "name": "_setAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1075,
                                "src": "4438:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4438:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1090,
                            "nodeType": "ExpressionStatement",
                            "src": "4438:19:7"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1076,
                        "nodeType": "StructuredDocumentation",
                        "src": "4217:109:7",
                        "text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
                      },
                      "id": 1092,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "changeAdmin",
                      "nameLocation": "4340:11:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1079,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1078,
                            "mutability": "mutable",
                            "name": "newAdmin",
                            "nameLocation": "4360:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1092,
                            "src": "4352:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1077,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4352:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4351:18:7"
                      },
                      "returnParameters": {
                        "id": 1080,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4379:0:7"
                      },
                      "scope": 1208,
                      "src": "4331:133:7",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "constant": true,
                      "documentation": {
                        "id": 1093,
                        "nodeType": "StructuredDocumentation",
                        "src": "4470:201:7",
                        "text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
                      },
                      "id": 1096,
                      "mutability": "constant",
                      "name": "BEACON_SLOT",
                      "nameLocation": "4767:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "4741:106:7",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1094,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4741:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": {
                        "hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4781:66:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
                          "typeString": "int_const 7415...(69 digits omitted)...4704"
                        },
                        "value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
                      },
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1108,
                        "nodeType": "Block",
                        "src": "4963:69:7",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1104,
                                    "name": "BEACON_SLOT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1096,
                                    "src": "5007:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1102,
                                    "name": "StorageSlot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2120,
                                    "src": "4980:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2120_$",
                                      "typeString": "type(library StorageSlot)"
                                    }
                                  },
                                  "id": 1103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4992:14:7",
                                  "memberName": "getAddressSlot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2042,
                                  "src": "4980:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2016_storage_ptr_$",
                                    "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                  }
                                },
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4980:39:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                                  "typeString": "struct StorageSlot.AddressSlot storage pointer"
                                }
                              },
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5020:5:7",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2015,
                              "src": "4980:45:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 1101,
                            "id": 1107,
                            "nodeType": "Return",
                            "src": "4973:52:7"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1097,
                        "nodeType": "StructuredDocumentation",
                        "src": "4854:51:7",
                        "text": " @dev Returns the current beacon."
                      },
                      "id": 1109,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getBeacon",
                      "nameLocation": "4919:9:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1098,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4928:2:7"
                      },
                      "returnParameters": {
                        "id": 1101,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1100,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1109,
                            "src": "4954:7:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1099,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4954:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4953:9:7"
                      },
                      "scope": 1208,
                      "src": "4910:122:7",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1154,
                        "nodeType": "Block",
                        "src": "5161:390:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 1115,
                                    "name": "newBeacon",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1112,
                                    "src": "5175:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5185:4:7",
                                  "memberName": "code",
                                  "nodeType": "MemberAccess",
                                  "src": "5175:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5190:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5175:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5200:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5175:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1125,
                            "nodeType": "IfStatement",
                            "src": "5171:95:7",
                            "trueBody": {
                              "id": 1124,
                              "nodeType": "Block",
                              "src": "5203:63:7",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 1121,
                                        "name": "newBeacon",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1112,
                                        "src": "5245:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1120,
                                      "name": "ERC1967InvalidBeacon",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 950,
                                      "src": "5224:20:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 1122,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5224:31:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1123,
                                  "nodeType": "RevertStatement",
                                  "src": "5217:38:7"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 1133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1129,
                                      "name": "BEACON_SLOT",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1096,
                                      "src": "5303:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1126,
                                      "name": "StorageSlot",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2120,
                                      "src": "5276:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2120_$",
                                        "typeString": "type(library StorageSlot)"
                                      }
                                    },
                                    "id": 1128,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5288:14:7",
                                    "memberName": "getAddressSlot",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2042,
                                    "src": "5276:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2016_storage_ptr_$",
                                      "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                    }
                                  },
                                  "id": 1130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5276:39:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                                    "typeString": "struct StorageSlot.AddressSlot storage pointer"
                                  }
                                },
                                "id": 1131,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "5316:5:7",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2015,
                                "src": "5276:45:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 1132,
                                "name": "newBeacon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1112,
                                "src": "5324:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5276:57:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1134,
                            "nodeType": "ExpressionStatement",
                            "src": "5276:57:7"
                          },
                          {
                            "assignments": [
                              1136
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1136,
                                "mutability": "mutable",
                                "name": "beaconImplementation",
                                "nameLocation": "5352:20:7",
                                "nodeType": "VariableDeclaration",
                                "scope": 1154,
                                "src": "5344:28:7",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 1135,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5344:7:7",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1142,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1138,
                                      "name": "newBeacon",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "5383:9:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1137,
                                    "name": "IBeacon",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1218,
                                    "src": "5375:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IBeacon_$1218_$",
                                      "typeString": "type(contract IBeacon)"
                                    }
                                  },
                                  "id": 1139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5375:18:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBeacon_$1218",
                                    "typeString": "contract IBeacon"
                                  }
                                },
                                "id": 1140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5394:14:7",
                                "memberName": "implementation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1217,
                                "src": "5375:33:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5375:35:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "5344:66:7"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 1143,
                                    "name": "beaconImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "5424:20:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5445:4:7",
                                  "memberName": "code",
                                  "nodeType": "MemberAccess",
                                  "src": "5424:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5450:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5424:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5460:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5424:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1153,
                            "nodeType": "IfStatement",
                            "src": "5420:125:7",
                            "trueBody": {
                              "id": 1152,
                              "nodeType": "Block",
                              "src": "5463:82:7",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 1149,
                                        "name": "beaconImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1136,
                                        "src": "5513:20:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1148,
                                      "name": "ERC1967InvalidImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 940,
                                      "src": "5484:28:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 1150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5484:50:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1151,
                                  "nodeType": "RevertStatement",
                                  "src": "5477:57:7"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1110,
                        "nodeType": "StructuredDocumentation",
                        "src": "5038:71:7",
                        "text": " @dev Stores a new beacon in the EIP1967 beacon slot."
                      },
                      "id": 1155,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_setBeacon",
                      "nameLocation": "5123:10:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1113,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1112,
                            "mutability": "mutable",
                            "name": "newBeacon",
                            "nameLocation": "5142:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1155,
                            "src": "5134:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1111,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5134:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5133:19:7"
                      },
                      "returnParameters": {
                        "id": 1114,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "5161:0:7"
                      },
                      "scope": 1208,
                      "src": "5114:437:7",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "private"
                    },
                    {
                      "body": {
                        "id": 1192,
                        "nodeType": "Block",
                        "src": "6155:254:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1164,
                                  "name": "newBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1158,
                                  "src": "6176:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1163,
                                "name": "_setBeacon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1155,
                                "src": "6165:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6165:21:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1166,
                            "nodeType": "ExpressionStatement",
                            "src": "6165:21:7"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 1168,
                                  "name": "newBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1158,
                                  "src": "6216:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1167,
                                "name": "BeaconUpgraded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "6201:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6201:25:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1170,
                            "nodeType": "EmitStatement",
                            "src": "6196:30:7"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1171,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "6241:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6246:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6241:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6255:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6241:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1190,
                              "nodeType": "Block",
                              "src": "6360:43:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1187,
                                      "name": "_checkNonPayable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1207,
                                      "src": "6374:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                        "typeString": "function ()"
                                      }
                                    },
                                    "id": 1188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6374:18:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1189,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6374:18:7"
                                }
                              ]
                            },
                            "id": 1191,
                            "nodeType": "IfStatement",
                            "src": "6237:166:7",
                            "trueBody": {
                              "id": 1186,
                              "nodeType": "Block",
                              "src": "6258:96:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1179,
                                                "name": "newBeacon",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1158,
                                                "src": "6309:9:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1178,
                                              "name": "IBeacon",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1218,
                                              "src": "6301:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IBeacon_$1218_$",
                                                "typeString": "type(contract IBeacon)"
                                              }
                                            },
                                            "id": 1180,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6301:18:7",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IBeacon_$1218",
                                              "typeString": "contract IBeacon"
                                            }
                                          },
                                          "id": 1181,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6320:14:7",
                                          "memberName": "implementation",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1217,
                                          "src": "6301:33:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 1182,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6301:35:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1183,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1160,
                                        "src": "6338:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1175,
                                        "name": "Address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2010,
                                        "src": "6272:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_Address_$2010_$",
                                          "typeString": "type(library Address)"
                                        }
                                      },
                                      "id": 1177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6280:20:7",
                                      "memberName": "functionDelegateCall",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1929,
                                      "src": "6272:28:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                                      }
                                    },
                                    "id": 1184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6272:71:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1185,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6272:71:7"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1156,
                        "nodeType": "StructuredDocumentation",
                        "src": "5557:514:7",
                        "text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
                      },
                      "id": 1193,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "upgradeBeaconToAndCall",
                      "nameLocation": "6085:22:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1161,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1158,
                            "mutability": "mutable",
                            "name": "newBeacon",
                            "nameLocation": "6116:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1193,
                            "src": "6108:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1157,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6108:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1160,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "6140:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1193,
                            "src": "6127:17:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1159,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6127:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "6107:38:7"
                      },
                      "returnParameters": {
                        "id": 1162,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "6155:0:7"
                      },
                      "scope": 1208,
                      "src": "6076:333:7",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1206,
                        "nodeType": "Block",
                        "src": "6634:86:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1197,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6648:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6652:5:7",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6648:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6660:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6648:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1205,
                            "nodeType": "IfStatement",
                            "src": "6644:70:7",
                            "trueBody": {
                              "id": 1204,
                              "nodeType": "Block",
                              "src": "6663:51:7",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1201,
                                      "name": "ERC1967NonPayable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 953,
                                      "src": "6684:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1202,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6684:19:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1203,
                                  "nodeType": "RevertStatement",
                                  "src": "6677:26:7"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1194,
                        "nodeType": "StructuredDocumentation",
                        "src": "6415:178:7",
                        "text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
                      },
                      "id": 1207,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_checkNonPayable",
                      "nameLocation": "6607:16:7",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1195,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "6623:2:7"
                      },
                      "returnParameters": {
                        "id": 1196,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "6634:0:7"
                      },
                      "scope": 1208,
                      "src": "6598:122:7",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "private"
                    }
                  ],
                  "scope": 1209,
                  "src": "449:6273:7",
                  "usedErrors": [
                    940,
                    945,
                    950,
                    953
                  ],
                  "usedEvents": [
                    919,
                    926,
                    931
                  ]
                }
              ],
              "src": "114:6609:7"
            },
            "id": 7
          },
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
              "exportedSymbols": {
                "IBeacon": [
                  1218
                ]
              },
              "id": 1219,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1210,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "108:24:8"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "IBeacon",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "documentation": {
                    "id": 1211,
                    "nodeType": "StructuredDocumentation",
                    "src": "134:79:8",
                    "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
                  },
                  "fullyImplemented": false,
                  "id": 1218,
                  "linearizedBaseContracts": [
                    1218
                  ],
                  "name": "IBeacon",
                  "nameLocation": "224:7:8",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "documentation": {
                        "id": 1212,
                        "nodeType": "StructuredDocumentation",
                        "src": "238:168:8",
                        "text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
                      },
                      "functionSelector": "5c60da1b",
                      "id": 1217,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "implementation",
                      "nameLocation": "420:14:8",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1213,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "434:2:8"
                      },
                      "returnParameters": {
                        "id": 1216,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1215,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1217,
                            "src": "460:7:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1214,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "460:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "459:9:8"
                      },
                      "scope": 1218,
                      "src": "411:58:8",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 1219,
                  "src": "214:257:8",
                  "usedErrors": [],
                  "usedEvents": []
                }
              ],
              "src": "108:364:8"
            },
            "id": 8
          },
          "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "exportedSymbols": {
                "IERC20": [
                  1296
                ]
              },
              "id": 1297,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1220,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "106:24:9"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "IERC20",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "documentation": {
                    "id": 1221,
                    "nodeType": "StructuredDocumentation",
                    "src": "132:70:9",
                    "text": " @dev Interface of the ERC20 standard as defined in the EIP."
                  },
                  "fullyImplemented": false,
                  "id": 1296,
                  "linearizedBaseContracts": [
                    1296
                  ],
                  "name": "IERC20",
                  "nameLocation": "213:6:9",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 1222,
                        "nodeType": "StructuredDocumentation",
                        "src": "226:158:9",
                        "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                      },
                      "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                      "id": 1230,
                      "name": "Transfer",
                      "nameLocation": "395:8:9",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 1229,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1224,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "420:4:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1230,
                            "src": "404:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "404:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1226,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "442:2:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1230,
                            "src": "426:18:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "426:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1228,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "454:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1230,
                            "src": "446:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1227,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "446:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "403:57:9"
                      },
                      "src": "389:72:9"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 1231,
                        "nodeType": "StructuredDocumentation",
                        "src": "467:148:9",
                        "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                      },
                      "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                      "id": 1239,
                      "name": "Approval",
                      "nameLocation": "626:8:9",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 1238,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1233,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "651:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1239,
                            "src": "635:21:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1232,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "635:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1235,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "674:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1239,
                            "src": "658:23:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1234,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "658:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1237,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "691:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1239,
                            "src": "683:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1236,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "683:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "634:63:9"
                      },
                      "src": "620:78:9"
                    },
                    {
                      "documentation": {
                        "id": 1240,
                        "nodeType": "StructuredDocumentation",
                        "src": "704:65:9",
                        "text": " @dev Returns the value of tokens in existence."
                      },
                      "functionSelector": "18160ddd",
                      "id": 1245,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "totalSupply",
                      "nameLocation": "783:11:9",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1241,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "794:2:9"
                      },
                      "returnParameters": {
                        "id": 1244,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1243,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1245,
                            "src": "820:7:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1242,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "820:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "819:9:9"
                      },
                      "scope": 1296,
                      "src": "774:55:9",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1246,
                        "nodeType": "StructuredDocumentation",
                        "src": "835:71:9",
                        "text": " @dev Returns the value of tokens owned by `account`."
                      },
                      "functionSelector": "70a08231",
                      "id": 1253,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "balanceOf",
                      "nameLocation": "920:9:9",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1249,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1248,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "938:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1253,
                            "src": "930:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "930:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "929:17:9"
                      },
                      "returnParameters": {
                        "id": 1252,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1251,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1253,
                            "src": "970:7:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1250,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "970:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "969:9:9"
                      },
                      "scope": 1296,
                      "src": "911:68:9",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1254,
                        "nodeType": "StructuredDocumentation",
                        "src": "985:213:9",
                        "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                      },
                      "functionSelector": "a9059cbb",
                      "id": 1263,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "transfer",
                      "nameLocation": "1212:8:9",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1259,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1256,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "1229:2:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1263,
                            "src": "1221:10:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1255,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1221:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1258,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "1241:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1263,
                            "src": "1233:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1257,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1233:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1220:27:9"
                      },
                      "returnParameters": {
                        "id": 1262,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1261,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1263,
                            "src": "1266:4:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1260,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1266:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1265:6:9"
                      },
                      "scope": 1296,
                      "src": "1203:69:9",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1264,
                        "nodeType": "StructuredDocumentation",
                        "src": "1278:264:9",
                        "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                      },
                      "functionSelector": "dd62ed3e",
                      "id": 1273,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "allowance",
                      "nameLocation": "1556:9:9",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1269,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1266,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "1574:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1273,
                            "src": "1566:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1265,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1566:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1268,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "1589:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1273,
                            "src": "1581:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1267,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1581:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1565:32:9"
                      },
                      "returnParameters": {
                        "id": 1272,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1271,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1273,
                            "src": "1621:7:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1270,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1621:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1620:9:9"
                      },
                      "scope": 1296,
                      "src": "1547:83:9",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1274,
                        "nodeType": "StructuredDocumentation",
                        "src": "1636:667:9",
                        "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                      },
                      "functionSelector": "095ea7b3",
                      "id": 1283,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "approve",
                      "nameLocation": "2317:7:9",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1279,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1276,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "2333:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1283,
                            "src": "2325:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1275,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2325:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1278,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "2350:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1283,
                            "src": "2342:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1277,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2342:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2324:32:9"
                      },
                      "returnParameters": {
                        "id": 1282,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1281,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1283,
                            "src": "2375:4:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1280,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2375:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2374:6:9"
                      },
                      "scope": 1296,
                      "src": "2308:73:9",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1284,
                        "nodeType": "StructuredDocumentation",
                        "src": "2387:297:9",
                        "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                      },
                      "functionSelector": "23b872dd",
                      "id": 1295,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "transferFrom",
                      "nameLocation": "2698:12:9",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1291,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1286,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "2719:4:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "2711:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1285,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2711:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1288,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "2733:2:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "2725:10:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2725:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1290,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "2745:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "2737:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1289,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2737:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2710:41:9"
                      },
                      "returnParameters": {
                        "id": 1294,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1293,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "2770:4:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1292,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2770:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2769:6:9"
                      },
                      "scope": 1296,
                      "src": "2689:87:9",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 1297,
                  "src": "203:2575:9",
                  "usedErrors": [],
                  "usedEvents": [
                    1230,
                    1239
                  ]
                }
              ],
              "src": "106:2673:9"
            },
            "id": 9
          },
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
              "exportedSymbols": {
                "IERC20Permit": [
                  1332
                ]
              },
              "id": 1333,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1298,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "123:24:10"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "IERC20Permit",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "documentation": {
                    "id": 1299,
                    "nodeType": "StructuredDocumentation",
                    "src": "149:1963:10",
                    "text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
                  },
                  "fullyImplemented": false,
                  "id": 1332,
                  "linearizedBaseContracts": [
                    1332
                  ],
                  "name": "IERC20Permit",
                  "nameLocation": "2123:12:10",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "documentation": {
                        "id": 1300,
                        "nodeType": "StructuredDocumentation",
                        "src": "2142:850:10",
                        "text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
                      },
                      "functionSelector": "d505accf",
                      "id": 1317,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "permit",
                      "nameLocation": "3006:6:10",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1315,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1302,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3030:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "3022:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3022:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1304,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "3053:7:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "3045:15:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1303,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3045:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1306,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "3078:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "3070:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1305,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3070:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1308,
                            "mutability": "mutable",
                            "name": "deadline",
                            "nameLocation": "3101:8:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "3093:16:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1307,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3093:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1310,
                            "mutability": "mutable",
                            "name": "v",
                            "nameLocation": "3125:1:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "3119:7:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 1309,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "3119:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1312,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "3144:1:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "3136:9:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1311,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3136:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1314,
                            "mutability": "mutable",
                            "name": "s",
                            "nameLocation": "3163:1:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "3155:9:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1313,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3155:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3012:158:10"
                      },
                      "returnParameters": {
                        "id": 1316,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3179:0:10"
                      },
                      "scope": 1332,
                      "src": "2997:183:10",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1318,
                        "nodeType": "StructuredDocumentation",
                        "src": "3186:294:10",
                        "text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
                      },
                      "functionSelector": "7ecebe00",
                      "id": 1325,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "nonces",
                      "nameLocation": "3494:6:10",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1321,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1320,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3509:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1325,
                            "src": "3501:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1319,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3501:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3500:15:10"
                      },
                      "returnParameters": {
                        "id": 1324,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1323,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1325,
                            "src": "3539:7:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1322,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3539:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3538:9:10"
                      },
                      "scope": 1332,
                      "src": "3485:63:10",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1326,
                        "nodeType": "StructuredDocumentation",
                        "src": "3554:128:10",
                        "text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                      },
                      "functionSelector": "3644e515",
                      "id": 1331,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "DOMAIN_SEPARATOR",
                      "nameLocation": "3749:16:10",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1327,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3765:2:10"
                      },
                      "returnParameters": {
                        "id": 1330,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1329,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1331,
                            "src": "3791:7:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1328,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3791:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3790:9:10"
                      },
                      "scope": 1332,
                      "src": "3740:60:10",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 1333,
                  "src": "2113:1689:10",
                  "usedErrors": [],
                  "usedEvents": []
                }
              ],
              "src": "123:3680:10"
            },
            "id": 10
          },
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "exportedSymbols": {
                "Address": [
                  2010
                ],
                "IERC20": [
                  1296
                ],
                "IERC20Permit": [
                  1332
                ],
                "SafeERC20": [
                  1622
                ]
              },
              "id": 1623,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1334,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "115:24:11"
                },
                {
                  "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                  "file": "../IERC20.sol",
                  "id": 1336,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 1623,
                  "sourceUnit": 1297,
                  "src": "141:37:11",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 1335,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "149:6:11",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
                  "file": "../extensions/IERC20Permit.sol",
                  "id": 1338,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 1623,
                  "sourceUnit": 1333,
                  "src": "179:60:11",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 1337,
                        "name": "IERC20Permit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "187:12:11",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
                  "file": "../../../utils/Address.sol",
                  "id": 1340,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 1623,
                  "sourceUnit": 2011,
                  "src": "240:51:11",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 1339,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "248:7:11",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "SafeERC20",
                  "contractDependencies": [],
                  "contractKind": "library",
                  "documentation": {
                    "id": 1341,
                    "nodeType": "StructuredDocumentation",
                    "src": "293:457:11",
                    "text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
                  },
                  "fullyImplemented": true,
                  "id": 1622,
                  "linearizedBaseContracts": [
                    1622
                  ],
                  "name": "SafeERC20",
                  "nameLocation": "759:9:11",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "global": false,
                      "id": 1344,
                      "libraryName": {
                        "id": 1342,
                        "name": "Address",
                        "nameLocations": [
                          "781:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2010,
                        "src": "781:7:11"
                      },
                      "nodeType": "UsingForDirective",
                      "src": "775:26:11",
                      "typeName": {
                        "id": 1343,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "793:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    },
                    {
                      "documentation": {
                        "id": 1345,
                        "nodeType": "StructuredDocumentation",
                        "src": "807:64:11",
                        "text": " @dev An operation with an ERC20 token failed."
                      },
                      "errorSelector": "5274afe7",
                      "id": 1349,
                      "name": "SafeERC20FailedOperation",
                      "nameLocation": "882:24:11",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 1348,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1347,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "915:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1349,
                            "src": "907:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1346,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "907:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "906:15:11"
                      },
                      "src": "876:46:11"
                    },
                    {
                      "documentation": {
                        "id": 1350,
                        "nodeType": "StructuredDocumentation",
                        "src": "928:71:11",
                        "text": " @dev Indicates a failed `decreaseAllowance` request."
                      },
                      "errorSelector": "e570110f",
                      "id": 1358,
                      "name": "SafeERC20FailedDecreaseAllowance",
                      "nameLocation": "1010:32:11",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 1357,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1352,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "1051:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1358,
                            "src": "1043:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1351,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1043:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1354,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "1068:16:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1358,
                            "src": "1060:24:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1353,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1060:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1356,
                            "mutability": "mutable",
                            "name": "requestedDecrease",
                            "nameLocation": "1094:17:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1358,
                            "src": "1086:25:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1355,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1086:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1042:70:11"
                      },
                      "src": "1004:109:11"
                    },
                    {
                      "body": {
                        "id": 1381,
                        "nodeType": "Block",
                        "src": "1375:88:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1370,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1362,
                                  "src": "1405:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1296",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1373,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1362,
                                        "src": "1427:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1296",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1374,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1433:8:11",
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1263,
                                      "src": "1427:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 1375,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1364,
                                          "src": "1444:2:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1376,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1366,
                                          "src": "1448:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1377,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1443:11:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                        "typeString": "tuple(address,uint256)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      },
                                      {
                                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                        "typeString": "tuple(address,uint256)"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1371,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "1412:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1416:10:11",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1412:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 1378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1412:43:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1296",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 1369,
                                "name": "_callOptionalReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1572,
                                "src": "1385:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (contract IERC20,bytes memory)"
                                }
                              },
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1385:71:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1380,
                            "nodeType": "ExpressionStatement",
                            "src": "1385:71:11"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1359,
                        "nodeType": "StructuredDocumentation",
                        "src": "1119:179:11",
                        "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                      },
                      "id": 1382,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "safeTransfer",
                      "nameLocation": "1312:12:11",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1367,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1362,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1332:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1382,
                            "src": "1325:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1296",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1361,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1360,
                                "name": "IERC20",
                                "nameLocations": [
                                  "1325:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1296,
                                "src": "1325:6:11"
                              },
                              "referencedDeclaration": 1296,
                              "src": "1325:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1364,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "1347:2:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1382,
                            "src": "1339:10:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1339:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1366,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "1359:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1382,
                            "src": "1351:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1365,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1351:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1324:41:11"
                      },
                      "returnParameters": {
                        "id": 1368,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1375:0:11"
                      },
                      "scope": 1622,
                      "src": "1303:160:11",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1408,
                        "nodeType": "Block",
                        "src": "1792:98:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1396,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1386,
                                  "src": "1822:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1296",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1399,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1386,
                                        "src": "1844:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1296",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1400,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1850:12:11",
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1295,
                                      "src": "1844:18:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 1401,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1388,
                                          "src": "1865:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1402,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1390,
                                          "src": "1871:2:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1403,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1392,
                                          "src": "1875:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1404,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1864:17:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                        "typeString": "tuple(address,address,uint256)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      },
                                      {
                                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                        "typeString": "tuple(address,address,uint256)"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1397,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "1829:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1398,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1833:10:11",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1829:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 1405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1829:53:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1296",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 1395,
                                "name": "_callOptionalReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1572,
                                "src": "1802:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (contract IERC20,bytes memory)"
                                }
                              },
                              "id": 1406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1802:81:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1407,
                            "nodeType": "ExpressionStatement",
                            "src": "1802:81:11"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1383,
                        "nodeType": "StructuredDocumentation",
                        "src": "1469:228:11",
                        "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                      },
                      "id": 1409,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "safeTransferFrom",
                      "nameLocation": "1711:16:11",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1393,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1386,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1735:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1409,
                            "src": "1728:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1296",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1385,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1384,
                                "name": "IERC20",
                                "nameLocations": [
                                  "1728:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1296,
                                "src": "1728:6:11"
                              },
                              "referencedDeclaration": 1296,
                              "src": "1728:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1388,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "1750:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1409,
                            "src": "1742:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1387,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1742:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1390,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "1764:2:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1409,
                            "src": "1756:10:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1756:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1392,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "1776:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1409,
                            "src": "1768:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1391,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1768:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1727:55:11"
                      },
                      "returnParameters": {
                        "id": 1394,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1792:0:11"
                      },
                      "scope": 1622,
                      "src": "1702:188:11",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1439,
                        "nodeType": "Block",
                        "src": "2167:139:11",
                        "statements": [
                          {
                            "assignments": [
                              1421
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1421,
                                "mutability": "mutable",
                                "name": "oldAllowance",
                                "nameLocation": "2185:12:11",
                                "nodeType": "VariableDeclaration",
                                "scope": 1439,
                                "src": "2177:20:11",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1420,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2177:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1430,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1426,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "2224:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1622",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1622",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2216:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1424,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2216:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2216:13:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1428,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "2231:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1422,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1413,
                                  "src": "2200:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1296",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2206:9:11",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1273,
                                "src": "2200:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2200:39:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2177:62:11"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1432,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1413,
                                  "src": "2262:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1296",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 1433,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "2269:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1434,
                                    "name": "oldAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1421,
                                    "src": "2278:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1435,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1417,
                                    "src": "2293:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2278:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1296",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1431,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1530,
                                "src": "2249:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 1437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2249:50:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1438,
                            "nodeType": "ExpressionStatement",
                            "src": "2249:50:11"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1410,
                        "nodeType": "StructuredDocumentation",
                        "src": "1896:180:11",
                        "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                      },
                      "id": 1440,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "safeIncreaseAllowance",
                      "nameLocation": "2090:21:11",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1418,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1413,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "2119:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1440,
                            "src": "2112:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1296",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1412,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1411,
                                "name": "IERC20",
                                "nameLocations": [
                                  "2112:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1296,
                                "src": "2112:6:11"
                              },
                              "referencedDeclaration": 1296,
                              "src": "2112:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1415,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "2134:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1440,
                            "src": "2126:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2126:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1417,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "2151:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1440,
                            "src": "2143:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1416,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2143:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2111:46:11"
                      },
                      "returnParameters": {
                        "id": 1419,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2167:0:11"
                      },
                      "scope": 1622,
                      "src": "2081:225:11",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1482,
                        "nodeType": "Block",
                        "src": "2607:370:11",
                        "statements": [
                          {
                            "id": 1481,
                            "nodeType": "UncheckedBlock",
                            "src": "2617:354:11",
                            "statements": [
                              {
                                "assignments": [
                                  1452
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1452,
                                    "mutability": "mutable",
                                    "name": "currentAllowance",
                                    "nameLocation": "2649:16:11",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1481,
                                    "src": "2641:24:11",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1451,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2641:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1461,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1457,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "2692:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_SafeERC20_$1622",
                                            "typeString": "library SafeERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_SafeERC20_$1622",
                                            "typeString": "library SafeERC20"
                                          }
                                        ],
                                        "id": 1456,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2684:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1455,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2684:7:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1458,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2684:13:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1459,
                                      "name": "spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1446,
                                      "src": "2699:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1453,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1444,
                                      "src": "2668:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1296",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2674:9:11",
                                    "memberName": "allowance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1273,
                                    "src": "2668:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address,address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2668:39:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "2641:66:11"
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1462,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1452,
                                    "src": "2725:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "id": 1463,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1448,
                                    "src": "2744:17:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2725:36:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1472,
                                "nodeType": "IfStatement",
                                "src": "2721:160:11",
                                "trueBody": {
                                  "id": 1471,
                                  "nodeType": "Block",
                                  "src": "2763:118:11",
                                  "statements": [
                                    {
                                      "errorCall": {
                                        "arguments": [
                                          {
                                            "id": 1466,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1446,
                                            "src": "2821:7:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 1467,
                                            "name": "currentAllowance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1452,
                                            "src": "2830:16:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 1468,
                                            "name": "requestedDecrease",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1448,
                                            "src": "2848:17:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 1465,
                                          "name": "SafeERC20FailedDecreaseAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1358,
                                          "src": "2788:32:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                            "typeString": "function (address,uint256,uint256) pure"
                                          }
                                        },
                                        "id": 1469,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2788:78:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1470,
                                      "nodeType": "RevertStatement",
                                      "src": "2781:85:11"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1474,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1444,
                                      "src": "2907:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1296",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    {
                                      "id": 1475,
                                      "name": "spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1446,
                                      "src": "2914:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1476,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1452,
                                        "src": "2923:16:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1477,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1448,
                                        "src": "2942:17:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2923:36:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$1296",
                                        "typeString": "contract IERC20"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1473,
                                    "name": "forceApprove",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1530,
                                    "src": "2894:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (contract IERC20,address,uint256)"
                                    }
                                  },
                                  "id": 1479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2894:66:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1480,
                                "nodeType": "ExpressionStatement",
                                "src": "2894:66:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1441,
                        "nodeType": "StructuredDocumentation",
                        "src": "2312:192:11",
                        "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
                      },
                      "id": 1483,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "safeDecreaseAllowance",
                      "nameLocation": "2518:21:11",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1449,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1444,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "2547:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1483,
                            "src": "2540:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1296",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1443,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1442,
                                "name": "IERC20",
                                "nameLocations": [
                                  "2540:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1296,
                                "src": "2540:6:11"
                              },
                              "referencedDeclaration": 1296,
                              "src": "2540:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1446,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "2562:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1483,
                            "src": "2554:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2554:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1448,
                            "mutability": "mutable",
                            "name": "requestedDecrease",
                            "nameLocation": "2579:17:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1483,
                            "src": "2571:25:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1447,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2571:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2539:58:11"
                      },
                      "returnParameters": {
                        "id": 1450,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2607:0:11"
                      },
                      "scope": 1622,
                      "src": "2509:468:11",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1529,
                        "nodeType": "Block",
                        "src": "3373:303:11",
                        "statements": [
                          {
                            "assignments": [
                              1495
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1495,
                                "mutability": "mutable",
                                "name": "approvalCall",
                                "nameLocation": "3396:12:11",
                                "nodeType": "VariableDeclaration",
                                "scope": 1529,
                                "src": "3383:25:11",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 1494,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3383:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1504,
                            "initialValue": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1498,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1487,
                                    "src": "3426:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1296",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3432:7:11",
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1283,
                                  "src": "3426:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1500,
                                      "name": "spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1489,
                                      "src": "3442:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1501,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1491,
                                      "src": "3451:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1502,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3441:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1496,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "3411:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3415:10:11",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "3411:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3411:47:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3383:75:11"
                          },
                          {
                            "condition": {
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3473:45:11",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 1506,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1487,
                                    "src": "3498:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1296",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 1507,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1495,
                                    "src": "3505:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$1296",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1505,
                                  "name": "_callOptionalReturnBool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1621,
                                  "src": "3474:23:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                                  }
                                },
                                "id": 1508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3474:44:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1528,
                            "nodeType": "IfStatement",
                            "src": "3469:201:11",
                            "trueBody": {
                              "id": 1527,
                              "nodeType": "Block",
                              "src": "3520:150:11",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1511,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1487,
                                        "src": "3554:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1296",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 1514,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1487,
                                              "src": "3576:5:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 1515,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3582:7:11",
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1283,
                                            "src": "3576:13:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          {
                                            "components": [
                                              {
                                                "id": 1516,
                                                "name": "spender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1489,
                                                "src": "3592:7:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "hexValue": "30",
                                                "id": 1517,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3601:1:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "id": 1518,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "3591:12:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                              "typeString": "tuple(address,int_const 0)"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            },
                                            {
                                              "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                              "typeString": "tuple(address,int_const 0)"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1512,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967295,
                                            "src": "3561:3:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 1513,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "3565:10:11",
                                          "memberName": "encodeCall",
                                          "nodeType": "MemberAccess",
                                          "src": "3561:14:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 1519,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3561:43:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$1296",
                                          "typeString": "contract IERC20"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 1510,
                                      "name": "_callOptionalReturn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1572,
                                      "src": "3534:19:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_bytes_memory_ptr_$returns$__$",
                                        "typeString": "function (contract IERC20,bytes memory)"
                                      }
                                    },
                                    "id": 1520,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3534:71:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1521,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3534:71:11"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1523,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1487,
                                        "src": "3639:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1296",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      {
                                        "id": 1524,
                                        "name": "approvalCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1495,
                                        "src": "3646:12:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$1296",
                                          "typeString": "contract IERC20"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 1522,
                                      "name": "_callOptionalReturn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1572,
                                      "src": "3619:19:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_bytes_memory_ptr_$returns$__$",
                                        "typeString": "function (contract IERC20,bytes memory)"
                                      }
                                    },
                                    "id": 1525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3619:40:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1526,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3619:40:11"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1484,
                        "nodeType": "StructuredDocumentation",
                        "src": "2983:308:11",
                        "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
                      },
                      "id": 1530,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "forceApprove",
                      "nameLocation": "3305:12:11",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1492,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1487,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "3325:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1530,
                            "src": "3318:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1296",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1486,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1485,
                                "name": "IERC20",
                                "nameLocations": [
                                  "3318:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1296,
                                "src": "3318:6:11"
                              },
                              "referencedDeclaration": 1296,
                              "src": "3318:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1489,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "3340:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1530,
                            "src": "3332:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1488,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3332:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1491,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "3357:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1530,
                            "src": "3349:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1490,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3349:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3317:46:11"
                      },
                      "returnParameters": {
                        "id": 1493,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3373:0:11"
                      },
                      "scope": 1622,
                      "src": "3296:380:11",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1571,
                        "nodeType": "Block",
                        "src": "4129:559:11",
                        "statements": [
                          {
                            "assignments": [
                              1540
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1540,
                                "mutability": "mutable",
                                "name": "returndata",
                                "nameLocation": "4491:10:11",
                                "nodeType": "VariableDeclaration",
                                "scope": 1571,
                                "src": "4478:23:11",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 1539,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4478:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1548,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1546,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1536,
                                  "src": "4532:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1543,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1534,
                                      "src": "4512:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1296",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$1296",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4504:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1541,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4504:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4504:14:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4519:12:11",
                                "memberName": "functionCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1831,
                                "src": "4504:27:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
                                  "typeString": "function (address,bytes memory) returns (bytes memory)"
                                }
                              },
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4504:33:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4478:59:11"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1549,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1540,
                                    "src": "4551:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4562:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4551:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4572:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4551:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 1560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4577:31:11",
                                "subExpression": {
                                  "arguments": [
                                    {
                                      "id": 1555,
                                      "name": "returndata",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1540,
                                      "src": "4589:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 1557,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4602:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          },
                                          "typeName": {
                                            "id": 1556,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4602:4:11",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "id": 1558,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "4601:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1553,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "4578:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1554,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "4582:6:11",
                                    "memberName": "decode",
                                    "nodeType": "MemberAccess",
                                    "src": "4578:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4578:30:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4551:57:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1570,
                            "nodeType": "IfStatement",
                            "src": "4547:135:11",
                            "trueBody": {
                              "id": 1569,
                              "nodeType": "Block",
                              "src": "4610:72:11",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1565,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1534,
                                            "src": "4664:5:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$1296",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$1296",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 1564,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4656:7:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1563,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4656:7:11",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1566,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4656:14:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1562,
                                      "name": "SafeERC20FailedOperation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1349,
                                      "src": "4631:24:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 1567,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4631:40:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1568,
                                  "nodeType": "RevertStatement",
                                  "src": "4624:47:11"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1531,
                        "nodeType": "StructuredDocumentation",
                        "src": "3682:372:11",
                        "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
                      },
                      "id": 1572,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_callOptionalReturn",
                      "nameLocation": "4068:19:11",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1537,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1534,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "4095:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1572,
                            "src": "4088:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1296",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1533,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1532,
                                "name": "IERC20",
                                "nameLocations": [
                                  "4088:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1296,
                                "src": "4088:6:11"
                              },
                              "referencedDeclaration": 1296,
                              "src": "4088:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1536,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "4115:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1572,
                            "src": "4102:17:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1535,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4102:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4087:33:11"
                      },
                      "returnParameters": {
                        "id": 1538,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4129:0:11"
                      },
                      "scope": 1622,
                      "src": "4059:629:11",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "private"
                    },
                    {
                      "body": {
                        "id": 1620,
                        "nodeType": "Block",
                        "src": "5278:489:11",
                        "statements": [
                          {
                            "assignments": [
                              1584,
                              1586
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1584,
                                "mutability": "mutable",
                                "name": "success",
                                "nameLocation": "5579:7:11",
                                "nodeType": "VariableDeclaration",
                                "scope": 1620,
                                "src": "5574:12:11",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 1583,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5574:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 1586,
                                "mutability": "mutable",
                                "name": "returndata",
                                "nameLocation": "5601:10:11",
                                "nodeType": "VariableDeclaration",
                                "scope": 1620,
                                "src": "5588:23:11",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 1585,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5588:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1594,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1592,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1578,
                                  "src": "5635:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1589,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1576,
                                      "src": "5623:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1296",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$1296",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5615:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1587,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5615:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5615:14:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5630:4:11",
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "5615:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5615:25:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "5573:67:11"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1595,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1584,
                                  "src": "5657:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1607,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1599,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 1596,
                                            "name": "returndata",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1586,
                                            "src": "5669:10:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "id": 1597,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5680:6:11",
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "src": "5669:17:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1598,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5690:1:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "5669:22:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "id": 1602,
                                            "name": "returndata",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1586,
                                            "src": "5706:10:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          {
                                            "components": [
                                              {
                                                "id": 1604,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "5719:4:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_bool_$",
                                                  "typeString": "type(bool)"
                                                },
                                                "typeName": {
                                                  "id": 1603,
                                                  "name": "bool",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "5719:4:11",
                                                  "typeDescriptions": {}
                                                }
                                              }
                                            ],
                                            "id": 1605,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "5718:6:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            },
                                            {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1600,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967295,
                                            "src": "5695:3:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 1601,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "5699:6:11",
                                          "memberName": "decode",
                                          "nodeType": "MemberAccess",
                                          "src": "5695:10:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 1606,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5695:30:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "5669:56:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 1608,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5668:58:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5657:69:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1612,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1576,
                                          "src": "5738:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1296",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$1296",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 1611,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5730:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1610,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5730:7:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5730:14:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5745:4:11",
                                    "memberName": "code",
                                    "nodeType": "MemberAccess",
                                    "src": "5730:19:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5750:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5730:26:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5759:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5730:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5657:103:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 1582,
                            "id": 1619,
                            "nodeType": "Return",
                            "src": "5650:110:11"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1573,
                        "nodeType": "StructuredDocumentation",
                        "src": "4694:490:11",
                        "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
                      },
                      "id": 1621,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_callOptionalReturnBool",
                      "nameLocation": "5198:23:11",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1579,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1576,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "5229:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "5222:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1296",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1575,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1574,
                                "name": "IERC20",
                                "nameLocations": [
                                  "5222:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1296,
                                "src": "5222:6:11"
                              },
                              "referencedDeclaration": 1296,
                              "src": "5222:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1578,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "5249:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "5236:17:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1577,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5236:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5221:33:11"
                      },
                      "returnParameters": {
                        "id": 1582,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1581,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "5272:4:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1580,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5272:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5271:6:11"
                      },
                      "scope": 1622,
                      "src": "5189:578:11",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "private"
                    }
                  ],
                  "scope": 1623,
                  "src": "751:5018:11",
                  "usedErrors": [
                    1349,
                    1358
                  ],
                  "usedEvents": []
                }
              ],
              "src": "115:5655:11"
            },
            "id": 11
          },
          "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "exportedSymbols": {
                "IERC165": [
                  2132
                ],
                "IERC721": [
                  1739
                ]
              },
              "id": 1740,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1624,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "108:24:12"
                },
                {
                  "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
                  "file": "../../utils/introspection/IERC165.sol",
                  "id": 1626,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 1740,
                  "sourceUnit": 2133,
                  "src": "134:62:12",
                  "symbolAliases": [
                    {
                      "foreign": {
                        "id": 1625,
                        "name": "IERC165",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2132,
                        "src": "142:7:12",
                        "typeDescriptions": {}
                      },
                      "nameLocation": "-1:-1:-1"
                    }
                  ],
                  "unitAlias": ""
                },
                {
                  "abstract": false,
                  "baseContracts": [
                    {
                      "baseName": {
                        "id": 1628,
                        "name": "IERC165",
                        "nameLocations": [
                          "287:7:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2132,
                        "src": "287:7:12"
                      },
                      "id": 1629,
                      "nodeType": "InheritanceSpecifier",
                      "src": "287:7:12"
                    }
                  ],
                  "canonicalName": "IERC721",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "documentation": {
                    "id": 1627,
                    "nodeType": "StructuredDocumentation",
                    "src": "198:67:12",
                    "text": " @dev Required interface of an ERC721 compliant contract."
                  },
                  "fullyImplemented": false,
                  "id": 1739,
                  "linearizedBaseContracts": [
                    1739,
                    2132
                  ],
                  "name": "IERC721",
                  "nameLocation": "276:7:12",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 1630,
                        "nodeType": "StructuredDocumentation",
                        "src": "301:88:12",
                        "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                      },
                      "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                      "id": 1638,
                      "name": "Transfer",
                      "nameLocation": "400:8:12",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 1637,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1632,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "425:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1638,
                            "src": "409:20:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "409:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1634,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "447:2:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1638,
                            "src": "431:18:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1633,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "431:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1636,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "467:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1638,
                            "src": "451:23:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1635,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "451:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "408:67:12"
                      },
                      "src": "394:82:12"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 1639,
                        "nodeType": "StructuredDocumentation",
                        "src": "482:94:12",
                        "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                      },
                      "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                      "id": 1647,
                      "name": "Approval",
                      "nameLocation": "587:8:12",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 1646,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1641,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "612:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1647,
                            "src": "596:21:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1640,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "596:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1643,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "approved",
                            "nameLocation": "635:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1647,
                            "src": "619:24:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1642,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "619:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1645,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "661:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1647,
                            "src": "645:23:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1644,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "645:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "595:74:12"
                      },
                      "src": "581:89:12"
                    },
                    {
                      "anonymous": false,
                      "documentation": {
                        "id": 1648,
                        "nodeType": "StructuredDocumentation",
                        "src": "676:117:12",
                        "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                      },
                      "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                      "id": 1656,
                      "name": "ApprovalForAll",
                      "nameLocation": "804:14:12",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 1655,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1650,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "835:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1656,
                            "src": "819:21:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1649,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "819:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1652,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "858:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1656,
                            "src": "842:24:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1651,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "842:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1654,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "approved",
                            "nameLocation": "873:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1656,
                            "src": "868:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1653,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "868:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "818:64:12"
                      },
                      "src": "798:85:12"
                    },
                    {
                      "documentation": {
                        "id": 1657,
                        "nodeType": "StructuredDocumentation",
                        "src": "889:76:12",
                        "text": " @dev Returns the number of tokens in ``owner``'s account."
                      },
                      "functionSelector": "70a08231",
                      "id": 1664,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "balanceOf",
                      "nameLocation": "979:9:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1660,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1659,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "997:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "989:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1658,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "989:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "988:15:12"
                      },
                      "returnParameters": {
                        "id": 1663,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1662,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1035:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "1027:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1661,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1027:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1026:17:12"
                      },
                      "scope": 1739,
                      "src": "970:74:12",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1665,
                        "nodeType": "StructuredDocumentation",
                        "src": "1050:131:12",
                        "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                      },
                      "functionSelector": "6352211e",
                      "id": 1672,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "ownerOf",
                      "nameLocation": "1195:7:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1668,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1667,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "1211:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1672,
                            "src": "1203:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1666,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1203:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1202:17:12"
                      },
                      "returnParameters": {
                        "id": 1671,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1670,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "1251:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1672,
                            "src": "1243:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1669,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1243:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1242:15:12"
                      },
                      "scope": 1739,
                      "src": "1186:72:12",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1673,
                        "nodeType": "StructuredDocumentation",
                        "src": "1264:565:12",
                        "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
                      },
                      "functionSelector": "b88d4fde",
                      "id": 1684,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "safeTransferFrom",
                      "nameLocation": "1843:16:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1682,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1675,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "1868:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1684,
                            "src": "1860:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1674,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1860:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1677,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "1882:2:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1684,
                            "src": "1874:10:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1676,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1874:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1679,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "1894:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1684,
                            "src": "1886:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1678,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1886:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1681,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "1918:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1684,
                            "src": "1903:19:12",
                            "stateVariable": false,
                            "storageLocation": "calldata",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1680,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1903:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1859:64:12"
                      },
                      "returnParameters": {
                        "id": 1683,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1932:0:12"
                      },
                      "scope": 1739,
                      "src": "1834:99:12",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1685,
                        "nodeType": "StructuredDocumentation",
                        "src": "1939:705:12",
                        "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
                      },
                      "functionSelector": "42842e0e",
                      "id": 1694,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "safeTransferFrom",
                      "nameLocation": "2658:16:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1692,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1687,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "2683:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "2675:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2675:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1689,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "2697:2:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "2689:10:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1688,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2689:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1691,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "2709:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "2701:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1690,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2701:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2674:43:12"
                      },
                      "returnParameters": {
                        "id": 1693,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2726:0:12"
                      },
                      "scope": 1739,
                      "src": "2649:78:12",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1695,
                        "nodeType": "StructuredDocumentation",
                        "src": "2733:732:12",
                        "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                      },
                      "functionSelector": "23b872dd",
                      "id": 1704,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "transferFrom",
                      "nameLocation": "3479:12:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1702,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1697,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "3500:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1704,
                            "src": "3492:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1696,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3492:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1699,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "3514:2:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1704,
                            "src": "3506:10:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1698,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3506:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1701,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3526:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1704,
                            "src": "3518:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1700,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3518:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3491:43:12"
                      },
                      "returnParameters": {
                        "id": 1703,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3543:0:12"
                      },
                      "scope": 1739,
                      "src": "3470:74:12",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1705,
                        "nodeType": "StructuredDocumentation",
                        "src": "3550:452:12",
                        "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                      },
                      "functionSelector": "095ea7b3",
                      "id": 1712,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "approve",
                      "nameLocation": "4016:7:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1710,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1707,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "4032:2:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1712,
                            "src": "4024:10:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1706,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4024:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1709,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "4044:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1712,
                            "src": "4036:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1708,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4036:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4023:29:12"
                      },
                      "returnParameters": {
                        "id": 1711,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4061:0:12"
                      },
                      "scope": 1739,
                      "src": "4007:55:12",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1713,
                        "nodeType": "StructuredDocumentation",
                        "src": "4068:315:12",
                        "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
                      },
                      "functionSelector": "a22cb465",
                      "id": 1720,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "setApprovalForAll",
                      "nameLocation": "4397:17:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1718,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1715,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "4423:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1720,
                            "src": "4415:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1714,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4415:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1717,
                            "mutability": "mutable",
                            "name": "approved",
                            "nameLocation": "4438:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1720,
                            "src": "4433:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1716,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4433:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4414:33:12"
                      },
                      "returnParameters": {
                        "id": 1719,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4456:0:12"
                      },
                      "scope": 1739,
                      "src": "4388:69:12",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1721,
                        "nodeType": "StructuredDocumentation",
                        "src": "4463:139:12",
                        "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                      },
                      "functionSelector": "081812fc",
                      "id": 1728,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getApproved",
                      "nameLocation": "4616:11:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1724,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1723,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "4636:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1728,
                            "src": "4628:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1722,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4628:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4627:17:12"
                      },
                      "returnParameters": {
                        "id": 1727,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1726,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "4676:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1728,
                            "src": "4668:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1725,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4668:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4667:18:12"
                      },
                      "scope": 1739,
                      "src": "4607:79:12",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "documentation": {
                        "id": 1729,
                        "nodeType": "StructuredDocumentation",
                        "src": "4692:138:12",
                        "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                      },
                      "functionSelector": "e985e9c5",
                      "id": 1738,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "isApprovedForAll",
                      "nameLocation": "4844:16:12",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1734,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1731,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4869:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "4861:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4861:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1733,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "4884:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "4876:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1732,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4876:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4860:33:12"
                      },
                      "returnParameters": {
                        "id": 1737,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1736,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "4917:4:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1735,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4917:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4916:6:12"
                      },
                      "scope": 1739,
                      "src": "4835:88:12",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 1740,
                  "src": "266:4659:12",
                  "usedErrors": [],
                  "usedEvents": [
                    1638,
                    1647,
                    1656
                  ]
                }
              ],
              "src": "108:4818:12"
            },
            "id": 12
          },
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "exportedSymbols": {
                "IERC721Receiver": [
                  1757
                ]
              },
              "id": 1758,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1741,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "116:24:13"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "IERC721Receiver",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "documentation": {
                    "id": 1742,
                    "nodeType": "StructuredDocumentation",
                    "src": "142:152:13",
                    "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
                  },
                  "fullyImplemented": false,
                  "id": 1757,
                  "linearizedBaseContracts": [
                    1757
                  ],
                  "name": "IERC721Receiver",
                  "nameLocation": "305:15:13",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "documentation": {
                        "id": 1743,
                        "nodeType": "StructuredDocumentation",
                        "src": "327:500:13",
                        "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
                      },
                      "functionSelector": "150b7a02",
                      "id": 1756,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "onERC721Received",
                      "nameLocation": "841:16:13",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1752,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1745,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "875:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1756,
                            "src": "867:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1744,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "867:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1747,
                            "mutability": "mutable",
                            "name": "from",
                            "nameLocation": "901:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1756,
                            "src": "893:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1746,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "893:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1749,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "923:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1756,
                            "src": "915:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1748,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "915:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1751,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "955:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1756,
                            "src": "940:19:13",
                            "stateVariable": false,
                            "storageLocation": "calldata",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1750,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "940:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "857:108:13"
                      },
                      "returnParameters": {
                        "id": 1755,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1754,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1756,
                            "src": "984:6:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 1753,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "984:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "983:8:13"
                      },
                      "scope": 1757,
                      "src": "832:160:13",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 1758,
                  "src": "295:699:13",
                  "usedErrors": [],
                  "usedEvents": []
                }
              ],
              "src": "116:879:13"
            },
            "id": 13
          },
          "@openzeppelin/contracts/utils/Address.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "exportedSymbols": {
                "Address": [
                  2010
                ]
              },
              "id": 2011,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 1759,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "101:24:14"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "Address",
                  "contractDependencies": [],
                  "contractKind": "library",
                  "documentation": {
                    "id": 1760,
                    "nodeType": "StructuredDocumentation",
                    "src": "127:67:14",
                    "text": " @dev Collection of functions related to the address type"
                  },
                  "fullyImplemented": true,
                  "id": 2010,
                  "linearizedBaseContracts": [
                    2010
                  ],
                  "name": "Address",
                  "nameLocation": "203:7:14",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "documentation": {
                        "id": 1761,
                        "nodeType": "StructuredDocumentation",
                        "src": "217:94:14",
                        "text": " @dev The ETH balance of the account is not enough to perform the operation."
                      },
                      "errorSelector": "cd786059",
                      "id": 1765,
                      "name": "AddressInsufficientBalance",
                      "nameLocation": "322:26:14",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 1764,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1763,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "357:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1765,
                            "src": "349:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1762,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "349:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "348:17:14"
                      },
                      "src": "316:50:14"
                    },
                    {
                      "documentation": {
                        "id": 1766,
                        "nodeType": "StructuredDocumentation",
                        "src": "372:75:14",
                        "text": " @dev There's no code at `target` (it is not a contract)."
                      },
                      "errorSelector": "9996b315",
                      "id": 1770,
                      "name": "AddressEmptyCode",
                      "nameLocation": "458:16:14",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 1769,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1768,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "483:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "475:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1767,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "475:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "474:16:14"
                      },
                      "src": "452:39:14"
                    },
                    {
                      "documentation": {
                        "id": 1771,
                        "nodeType": "StructuredDocumentation",
                        "src": "497:89:14",
                        "text": " @dev A call to an address target failed. The target may have reverted."
                      },
                      "errorSelector": "1425ea42",
                      "id": 1773,
                      "name": "FailedInnerCall",
                      "nameLocation": "597:15:14",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 1772,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "612:2:14"
                      },
                      "src": "591:24:14"
                    },
                    {
                      "body": {
                        "id": 1813,
                        "nodeType": "Block",
                        "src": "1602:260:14",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1783,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "1624:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$2010",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$2010",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 1782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1616:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1781,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1616:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1616:13:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1630:7:14",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "1616:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1786,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1778,
                                "src": "1640:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1616:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1796,
                            "nodeType": "IfStatement",
                            "src": "1612:109:14",
                            "trueBody": {
                              "id": 1795,
                              "nodeType": "Block",
                              "src": "1648:73:14",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1791,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "1704:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Address_$2010",
                                              "typeString": "library Address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Address_$2010",
                                              "typeString": "library Address"
                                            }
                                          ],
                                          "id": 1790,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1696:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1789,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1696:7:14",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1792,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1696:13:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1788,
                                      "name": "AddressInsufficientBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1765,
                                      "src": "1669:26:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 1793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1669:41:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1794,
                                  "nodeType": "RevertStatement",
                                  "src": "1662:48:14"
                                }
                              ]
                            }
                          },
                          {
                            "assignments": [
                              1798,
                              null
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1798,
                                "mutability": "mutable",
                                "name": "success",
                                "nameLocation": "1737:7:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 1813,
                                "src": "1732:12:14",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 1797,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1732:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              },
                              null
                            ],
                            "id": 1805,
                            "initialValue": {
                              "arguments": [
                                {
                                  "hexValue": "",
                                  "id": 1803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1780:2:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 1799,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1776,
                                    "src": "1750:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1760:4:14",
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "1750:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 1801,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1778,
                                    "src": "1772:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "src": "1750:29:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1750:33:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1731:52:14"
                          },
                          {
                            "condition": {
                              "id": 1807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1797:8:14",
                              "subExpression": {
                                "id": 1806,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1798,
                                "src": "1798:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1812,
                            "nodeType": "IfStatement",
                            "src": "1793:63:14",
                            "trueBody": {
                              "id": 1811,
                              "nodeType": "Block",
                              "src": "1807:49:14",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1808,
                                      "name": "FailedInnerCall",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1773,
                                      "src": "1828:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1828:17:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1810,
                                  "nodeType": "RevertStatement",
                                  "src": "1821:24:14"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1774,
                        "nodeType": "StructuredDocumentation",
                        "src": "621:905:14",
                        "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                      },
                      "id": 1814,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "sendValue",
                      "nameLocation": "1540:9:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1779,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1776,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "1566:9:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1814,
                            "src": "1550:25:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1775,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1550:15:14",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1778,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "1585:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1814,
                            "src": "1577:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1777,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1577:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1549:43:14"
                      },
                      "returnParameters": {
                        "id": 1780,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1602:0:14"
                      },
                      "scope": 2010,
                      "src": "1531:331:14",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1830,
                        "nodeType": "Block",
                        "src": "2794:62:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1825,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1817,
                                  "src": "2833:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1826,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1819,
                                  "src": "2841:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2847:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1824,
                                "name": "functionCallWithValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1877,
                                "src": "2811:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                                }
                              },
                              "id": 1828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2811:38:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1823,
                            "id": 1829,
                            "nodeType": "Return",
                            "src": "2804:45:14"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1815,
                        "nodeType": "StructuredDocumentation",
                        "src": "1868:832:14",
                        "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
                      },
                      "id": 1831,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "functionCall",
                      "nameLocation": "2714:12:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1820,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1817,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "2735:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1831,
                            "src": "2727:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1816,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2727:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1819,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "2756:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1831,
                            "src": "2743:17:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1818,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2743:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2726:35:14"
                      },
                      "returnParameters": {
                        "id": 1823,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1822,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1831,
                            "src": "2780:12:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1821,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2780:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2779:14:14"
                      },
                      "scope": 2010,
                      "src": "2705:151:14",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1876,
                        "nodeType": "Block",
                        "src": "3293:279:14",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1845,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3315:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$2010",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$2010",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 1844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3307:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1843,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3307:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3307:13:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3321:7:14",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "3307:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1848,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1838,
                                "src": "3331:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3307:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1858,
                            "nodeType": "IfStatement",
                            "src": "3303:108:14",
                            "trueBody": {
                              "id": 1857,
                              "nodeType": "Block",
                              "src": "3338:73:14",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1853,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "3394:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Address_$2010",
                                              "typeString": "library Address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Address_$2010",
                                              "typeString": "library Address"
                                            }
                                          ],
                                          "id": 1852,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3386:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1851,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3386:7:14",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3386:13:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1850,
                                      "name": "AddressInsufficientBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1765,
                                      "src": "3359:26:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                        "typeString": "function (address) pure"
                                      }
                                    },
                                    "id": 1855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3359:41:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1856,
                                  "nodeType": "RevertStatement",
                                  "src": "3352:48:14"
                                }
                              ]
                            }
                          },
                          {
                            "assignments": [
                              1860,
                              1862
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1860,
                                "mutability": "mutable",
                                "name": "success",
                                "nameLocation": "3426:7:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 1876,
                                "src": "3421:12:14",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 1859,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3421:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 1862,
                                "mutability": "mutable",
                                "name": "returndata",
                                "nameLocation": "3448:10:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 1876,
                                "src": "3435:23:14",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 1861,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3435:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1869,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1867,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1836,
                                  "src": "3488:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1863,
                                    "name": "target",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1834,
                                    "src": "3462:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3469:4:14",
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "3462:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 1865,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1838,
                                    "src": "3481:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "src": "3462:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3462:31:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3420:73:14"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1871,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1834,
                                  "src": "3537:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1872,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1860,
                                  "src": "3545:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 1873,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1862,
                                  "src": "3554:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 1870,
                                "name": "verifyCallResultFromTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1969,
                                "src": "3510:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                                }
                              },
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3510:55:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1842,
                            "id": 1875,
                            "nodeType": "Return",
                            "src": "3503:62:14"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1832,
                        "nodeType": "StructuredDocumentation",
                        "src": "2862:313:14",
                        "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
                      },
                      "id": 1877,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "functionCallWithValue",
                      "nameLocation": "3189:21:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1839,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1834,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "3219:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1877,
                            "src": "3211:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3211:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1836,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "3240:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1877,
                            "src": "3227:17:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1835,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3227:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1838,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "3254:5:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1877,
                            "src": "3246:13:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1837,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3246:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3210:50:14"
                      },
                      "returnParameters": {
                        "id": 1842,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1841,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1877,
                            "src": "3279:12:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1840,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3279:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3278:14:14"
                      },
                      "scope": 2010,
                      "src": "3180:392:14",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1902,
                        "nodeType": "Block",
                        "src": "3811:154:14",
                        "statements": [
                          {
                            "assignments": [
                              1888,
                              1890
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1888,
                                "mutability": "mutable",
                                "name": "success",
                                "nameLocation": "3827:7:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 1902,
                                "src": "3822:12:14",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 1887,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3822:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 1890,
                                "mutability": "mutable",
                                "name": "returndata",
                                "nameLocation": "3849:10:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 1902,
                                "src": "3836:23:14",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 1889,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3836:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1895,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1893,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1882,
                                  "src": "3881:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1891,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1880,
                                  "src": "3863:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3870:10:14",
                                "memberName": "staticcall",
                                "nodeType": "MemberAccess",
                                "src": "3863:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                                }
                              },
                              "id": 1894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3863:23:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3821:65:14"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1897,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1880,
                                  "src": "3930:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1898,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1888,
                                  "src": "3938:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 1899,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1890,
                                  "src": "3947:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 1896,
                                "name": "verifyCallResultFromTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1969,
                                "src": "3903:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                                }
                              },
                              "id": 1900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3903:55:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1886,
                            "id": 1901,
                            "nodeType": "Return",
                            "src": "3896:62:14"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1878,
                        "nodeType": "StructuredDocumentation",
                        "src": "3578:128:14",
                        "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
                      },
                      "id": 1903,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "functionStaticCall",
                      "nameLocation": "3720:18:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1883,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1880,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "3747:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1903,
                            "src": "3739:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3739:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1882,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "3768:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1903,
                            "src": "3755:17:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1881,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3755:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3738:35:14"
                      },
                      "returnParameters": {
                        "id": 1886,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1885,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1903,
                            "src": "3797:12:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1884,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3797:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3796:14:14"
                      },
                      "scope": 2010,
                      "src": "3711:254:14",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1928,
                        "nodeType": "Block",
                        "src": "4203:156:14",
                        "statements": [
                          {
                            "assignments": [
                              1914,
                              1916
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1914,
                                "mutability": "mutable",
                                "name": "success",
                                "nameLocation": "4219:7:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 1928,
                                "src": "4214:12:14",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 1913,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4214:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 1916,
                                "mutability": "mutable",
                                "name": "returndata",
                                "nameLocation": "4241:10:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 1928,
                                "src": "4228:23:14",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 1915,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4228:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1921,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1919,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1908,
                                  "src": "4275:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1917,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1906,
                                  "src": "4255:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4262:12:14",
                                "memberName": "delegatecall",
                                "nodeType": "MemberAccess",
                                "src": "4255:19:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) returns (bool,bytes memory)"
                                }
                              },
                              "id": 1920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4255:25:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4213:67:14"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1923,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1906,
                                  "src": "4324:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1924,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1914,
                                  "src": "4332:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 1925,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1916,
                                  "src": "4341:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 1922,
                                "name": "verifyCallResultFromTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1969,
                                "src": "4297:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                                }
                              },
                              "id": 1926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4297:55:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1912,
                            "id": 1927,
                            "nodeType": "Return",
                            "src": "4290:62:14"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1904,
                        "nodeType": "StructuredDocumentation",
                        "src": "3971:130:14",
                        "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
                      },
                      "id": 1929,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "functionDelegateCall",
                      "nameLocation": "4115:20:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1909,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1906,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "4144:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1929,
                            "src": "4136:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1905,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4136:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1908,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "4165:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1929,
                            "src": "4152:17:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1907,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4152:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4135:35:14"
                      },
                      "returnParameters": {
                        "id": 1912,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1911,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1929,
                            "src": "4189:12:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1910,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4189:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4188:14:14"
                      },
                      "scope": 2010,
                      "src": "4106:253:14",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1968,
                        "nodeType": "Block",
                        "src": "4783:424:14",
                        "statements": [
                          {
                            "condition": {
                              "id": 1942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4797:8:14",
                              "subExpression": {
                                "id": 1941,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1934,
                                "src": "4798:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1966,
                              "nodeType": "Block",
                              "src": "4857:344:14",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1948,
                                          "name": "returndata",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1936,
                                          "src": "5045:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 1949,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5056:6:14",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "5045:17:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1950,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5066:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5045:22:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 1952,
                                            "name": "target",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1932,
                                            "src": "5071:6:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 1953,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5078:4:14",
                                          "memberName": "code",
                                          "nodeType": "MemberAccess",
                                          "src": "5071:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 1954,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5083:6:14",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "5071:18:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1955,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5093:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5071:23:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5045:49:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1963,
                                  "nodeType": "IfStatement",
                                  "src": "5041:119:14",
                                  "trueBody": {
                                    "id": 1962,
                                    "nodeType": "Block",
                                    "src": "5096:64:14",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [
                                            {
                                              "id": 1959,
                                              "name": "target",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1932,
                                              "src": "5138:6:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1958,
                                            "name": "AddressEmptyCode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1770,
                                            "src": "5121:16:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                              "typeString": "function (address) pure"
                                            }
                                          },
                                          "id": 1960,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5121:24:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1961,
                                        "nodeType": "RevertStatement",
                                        "src": "5114:31:14"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1964,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1936,
                                    "src": "5180:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "functionReturnParameters": 1940,
                                  "id": 1965,
                                  "nodeType": "Return",
                                  "src": "5173:17:14"
                                }
                              ]
                            },
                            "id": 1967,
                            "nodeType": "IfStatement",
                            "src": "4793:408:14",
                            "trueBody": {
                              "id": 1947,
                              "nodeType": "Block",
                              "src": "4807:44:14",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1944,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1936,
                                        "src": "4829:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 1943,
                                      "name": "_revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2009,
                                      "src": "4821:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                        "typeString": "function (bytes memory) pure"
                                      }
                                    },
                                    "id": 1945,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4821:19:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1946,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4821:19:14"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1930,
                        "nodeType": "StructuredDocumentation",
                        "src": "4365:255:14",
                        "text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
                      },
                      "id": 1969,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "verifyCallResultFromTarget",
                      "nameLocation": "4634:26:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1937,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1932,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "4678:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1969,
                            "src": "4670:14:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1931,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4670:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1934,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4699:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1969,
                            "src": "4694:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1933,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4694:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1936,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "4729:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1969,
                            "src": "4716:23:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1935,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4716:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4660:85:14"
                      },
                      "returnParameters": {
                        "id": 1940,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1939,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1969,
                            "src": "4769:12:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1938,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4769:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4768:14:14"
                      },
                      "scope": 2010,
                      "src": "4625:582:14",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 1990,
                        "nodeType": "Block",
                        "src": "5509:122:14",
                        "statements": [
                          {
                            "condition": {
                              "id": 1980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5523:8:14",
                              "subExpression": {
                                "id": 1979,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1972,
                                "src": "5524:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1988,
                              "nodeType": "Block",
                              "src": "5583:42:14",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1986,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1974,
                                    "src": "5604:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "functionReturnParameters": 1978,
                                  "id": 1987,
                                  "nodeType": "Return",
                                  "src": "5597:17:14"
                                }
                              ]
                            },
                            "id": 1989,
                            "nodeType": "IfStatement",
                            "src": "5519:106:14",
                            "trueBody": {
                              "id": 1985,
                              "nodeType": "Block",
                              "src": "5533:44:14",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1982,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1974,
                                        "src": "5555:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 1981,
                                      "name": "_revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2009,
                                      "src": "5547:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                        "typeString": "function (bytes memory) pure"
                                      }
                                    },
                                    "id": 1983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5547:19:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1984,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5547:19:14"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1970,
                        "nodeType": "StructuredDocumentation",
                        "src": "5213:189:14",
                        "text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
                      },
                      "id": 1991,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "verifyCallResult",
                      "nameLocation": "5416:16:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1975,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1972,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5438:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1991,
                            "src": "5433:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1971,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5433:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1974,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5460:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1991,
                            "src": "5447:23:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1973,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5447:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5432:39:14"
                      },
                      "returnParameters": {
                        "id": 1978,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1977,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1991,
                            "src": "5495:12:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1976,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5495:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5494:14:14"
                      },
                      "scope": 2010,
                      "src": "5407:224:14",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2008,
                        "nodeType": "Block",
                        "src": "5798:461:14",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1997,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "5874:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5885:6:14",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5874:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5894:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5874:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 2006,
                              "nodeType": "Block",
                              "src": "6204:49:14",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2003,
                                      "name": "FailedInnerCall",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1773,
                                      "src": "6225:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 2004,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6225:17:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2005,
                                  "nodeType": "RevertStatement",
                                  "src": "6218:24:14"
                                }
                              ]
                            },
                            "id": 2007,
                            "nodeType": "IfStatement",
                            "src": "5870:383:14",
                            "trueBody": {
                              "id": 2002,
                              "nodeType": "Block",
                              "src": "5897:301:14",
                              "statements": [
                                {
                                  "AST": {
                                    "nativeSrc": "6055:133:14",
                                    "nodeType": "YulBlock",
                                    "src": "6055:133:14",
                                    "statements": [
                                      {
                                        "nativeSrc": "6073:40:14",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "6073:40:14",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "returndata",
                                              "nativeSrc": "6102:10:14",
                                              "nodeType": "YulIdentifier",
                                              "src": "6102:10:14"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "6096:5:14",
                                            "nodeType": "YulIdentifier",
                                            "src": "6096:5:14"
                                          },
                                          "nativeSrc": "6096:17:14",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6096:17:14"
                                        },
                                        "variables": [
                                          {
                                            "name": "returndata_size",
                                            "nativeSrc": "6077:15:14",
                                            "nodeType": "YulTypedName",
                                            "src": "6077:15:14",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "6141:2:14",
                                                  "nodeType": "YulLiteral",
                                                  "src": "6141:2:14",
                                                  "type": "",
                                                  "value": "32"
                                                },
                                                {
                                                  "name": "returndata",
                                                  "nativeSrc": "6145:10:14",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6145:10:14"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "6137:3:14",
                                                "nodeType": "YulIdentifier",
                                                "src": "6137:3:14"
                                              },
                                              "nativeSrc": "6137:19:14",
                                              "nodeType": "YulFunctionCall",
                                              "src": "6137:19:14"
                                            },
                                            {
                                              "name": "returndata_size",
                                              "nativeSrc": "6158:15:14",
                                              "nodeType": "YulIdentifier",
                                              "src": "6158:15:14"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "6130:6:14",
                                            "nodeType": "YulIdentifier",
                                            "src": "6130:6:14"
                                          },
                                          "nativeSrc": "6130:44:14",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6130:44:14"
                                        },
                                        "nativeSrc": "6130:44:14",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "6130:44:14"
                                      }
                                    ]
                                  },
                                  "documentation": "@solidity memory-safe-assembly",
                                  "evmVersion": "shanghai",
                                  "externalReferences": [
                                    {
                                      "declaration": 1994,
                                      "isOffset": false,
                                      "isSlot": false,
                                      "src": "6102:10:14",
                                      "valueSize": 1
                                    },
                                    {
                                      "declaration": 1994,
                                      "isOffset": false,
                                      "isSlot": false,
                                      "src": "6145:10:14",
                                      "valueSize": 1
                                    }
                                  ],
                                  "id": 2001,
                                  "nodeType": "InlineAssembly",
                                  "src": "6046:142:14"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 1992,
                        "nodeType": "StructuredDocumentation",
                        "src": "5637:101:14",
                        "text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
                      },
                      "id": 2009,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_revert",
                      "nameLocation": "5752:7:14",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 1995,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1994,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5773:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2009,
                            "src": "5760:23:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1993,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5760:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5759:25:14"
                      },
                      "returnParameters": {
                        "id": 1996,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "5798:0:14"
                      },
                      "scope": 2010,
                      "src": "5743:516:14",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "private"
                    }
                  ],
                  "scope": 2011,
                  "src": "195:6066:14",
                  "usedErrors": [
                    1765,
                    1770,
                    1773
                  ],
                  "usedEvents": []
                }
              ],
              "src": "101:6161:14"
            },
            "id": 14
          },
          "@openzeppelin/contracts/utils/StorageSlot.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
              "exportedSymbols": {
                "StorageSlot": [
                  2120
                ]
              },
              "id": 2121,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 2012,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "193:24:15"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "StorageSlot",
                  "contractDependencies": [],
                  "contractKind": "library",
                  "documentation": {
                    "id": 2013,
                    "nodeType": "StructuredDocumentation",
                    "src": "219:1025:15",
                    "text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
                  },
                  "fullyImplemented": true,
                  "id": 2120,
                  "linearizedBaseContracts": [
                    2120
                  ],
                  "name": "StorageSlot",
                  "nameLocation": "1253:11:15",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "canonicalName": "StorageSlot.AddressSlot",
                      "id": 2016,
                      "members": [
                        {
                          "constant": false,
                          "id": 2015,
                          "mutability": "mutable",
                          "name": "value",
                          "nameLocation": "1308:5:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 2016,
                          "src": "1300:13:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 2014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1300:7:15",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "AddressSlot",
                      "nameLocation": "1278:11:15",
                      "nodeType": "StructDefinition",
                      "scope": 2120,
                      "src": "1271:49:15",
                      "visibility": "public"
                    },
                    {
                      "canonicalName": "StorageSlot.BooleanSlot",
                      "id": 2019,
                      "members": [
                        {
                          "constant": false,
                          "id": 2018,
                          "mutability": "mutable",
                          "name": "value",
                          "nameLocation": "1360:5:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 2019,
                          "src": "1355:10:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2017,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1355:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "BooleanSlot",
                      "nameLocation": "1333:11:15",
                      "nodeType": "StructDefinition",
                      "scope": 2120,
                      "src": "1326:46:15",
                      "visibility": "public"
                    },
                    {
                      "canonicalName": "StorageSlot.Bytes32Slot",
                      "id": 2022,
                      "members": [
                        {
                          "constant": false,
                          "id": 2021,
                          "mutability": "mutable",
                          "name": "value",
                          "nameLocation": "1415:5:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 2022,
                          "src": "1407:13:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 2020,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1407:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "Bytes32Slot",
                      "nameLocation": "1385:11:15",
                      "nodeType": "StructDefinition",
                      "scope": 2120,
                      "src": "1378:49:15",
                      "visibility": "public"
                    },
                    {
                      "canonicalName": "StorageSlot.Uint256Slot",
                      "id": 2025,
                      "members": [
                        {
                          "constant": false,
                          "id": 2024,
                          "mutability": "mutable",
                          "name": "value",
                          "nameLocation": "1470:5:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 2025,
                          "src": "1462:13:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2023,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1462:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "Uint256Slot",
                      "nameLocation": "1440:11:15",
                      "nodeType": "StructDefinition",
                      "scope": 2120,
                      "src": "1433:49:15",
                      "visibility": "public"
                    },
                    {
                      "canonicalName": "StorageSlot.StringSlot",
                      "id": 2028,
                      "members": [
                        {
                          "constant": false,
                          "id": 2027,
                          "mutability": "mutable",
                          "name": "value",
                          "nameLocation": "1523:5:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 2028,
                          "src": "1516:12:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          },
                          "typeName": {
                            "id": 2026,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1516:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "StringSlot",
                      "nameLocation": "1495:10:15",
                      "nodeType": "StructDefinition",
                      "scope": 2120,
                      "src": "1488:47:15",
                      "visibility": "public"
                    },
                    {
                      "canonicalName": "StorageSlot.BytesSlot",
                      "id": 2031,
                      "members": [
                        {
                          "constant": false,
                          "id": 2030,
                          "mutability": "mutable",
                          "name": "value",
                          "nameLocation": "1574:5:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 2031,
                          "src": "1568:11:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2029,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1568:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "BytesSlot",
                      "nameLocation": "1548:9:15",
                      "nodeType": "StructDefinition",
                      "scope": 2120,
                      "src": "1541:45:15",
                      "visibility": "public"
                    },
                    {
                      "body": {
                        "id": 2041,
                        "nodeType": "Block",
                        "src": "1768:106:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "1830:38:15",
                              "nodeType": "YulBlock",
                              "src": "1830:38:15",
                              "statements": [
                                {
                                  "nativeSrc": "1844:14:15",
                                  "nodeType": "YulAssignment",
                                  "src": "1844:14:15",
                                  "value": {
                                    "name": "slot",
                                    "nativeSrc": "1854:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "1854:4:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "1844:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "1844:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2038,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "1844:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2034,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "1854:4:15",
                                "valueSize": 1
                              }
                            ],
                            "id": 2040,
                            "nodeType": "InlineAssembly",
                            "src": "1821:47:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2032,
                        "nodeType": "StructuredDocumentation",
                        "src": "1592:87:15",
                        "text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
                      },
                      "id": 2042,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getAddressSlot",
                      "nameLocation": "1693:14:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2035,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2034,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "1716:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2042,
                            "src": "1708:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2033,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1708:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1707:14:15"
                      },
                      "returnParameters": {
                        "id": 2039,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2038,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "1765:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2042,
                            "src": "1745:21:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot"
                            },
                            "typeName": {
                              "id": 2037,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2036,
                                "name": "AddressSlot",
                                "nameLocations": [
                                  "1745:11:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2016,
                                "src": "1745:11:15"
                              },
                              "referencedDeclaration": 2016,
                              "src": "1745:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$2016_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1744:23:15"
                      },
                      "scope": 2120,
                      "src": "1684:190:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2052,
                        "nodeType": "Block",
                        "src": "2056:106:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "2118:38:15",
                              "nodeType": "YulBlock",
                              "src": "2118:38:15",
                              "statements": [
                                {
                                  "nativeSrc": "2132:14:15",
                                  "nodeType": "YulAssignment",
                                  "src": "2132:14:15",
                                  "value": {
                                    "name": "slot",
                                    "nativeSrc": "2142:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "2142:4:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "2132:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2132:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2049,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "2132:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2045,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2142:4:15",
                                "valueSize": 1
                              }
                            ],
                            "id": 2051,
                            "nodeType": "InlineAssembly",
                            "src": "2109:47:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2043,
                        "nodeType": "StructuredDocumentation",
                        "src": "1880:87:15",
                        "text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
                      },
                      "id": 2053,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getBooleanSlot",
                      "nameLocation": "1981:14:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2046,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2045,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "2004:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2053,
                            "src": "1996:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2044,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1996:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1995:14:15"
                      },
                      "returnParameters": {
                        "id": 2050,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2049,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "2053:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2053,
                            "src": "2033:21:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BooleanSlot_$2019_storage_ptr",
                              "typeString": "struct StorageSlot.BooleanSlot"
                            },
                            "typeName": {
                              "id": 2048,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2047,
                                "name": "BooleanSlot",
                                "nameLocations": [
                                  "2033:11:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2019,
                                "src": "2033:11:15"
                              },
                              "referencedDeclaration": 2019,
                              "src": "2033:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BooleanSlot_$2019_storage_ptr",
                                "typeString": "struct StorageSlot.BooleanSlot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2032:23:15"
                      },
                      "scope": 2120,
                      "src": "1972:190:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2063,
                        "nodeType": "Block",
                        "src": "2344:106:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "2406:38:15",
                              "nodeType": "YulBlock",
                              "src": "2406:38:15",
                              "statements": [
                                {
                                  "nativeSrc": "2420:14:15",
                                  "nodeType": "YulAssignment",
                                  "src": "2420:14:15",
                                  "value": {
                                    "name": "slot",
                                    "nativeSrc": "2430:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "2430:4:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "2420:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2420:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2060,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "2420:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2056,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2430:4:15",
                                "valueSize": 1
                              }
                            ],
                            "id": 2062,
                            "nodeType": "InlineAssembly",
                            "src": "2397:47:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2054,
                        "nodeType": "StructuredDocumentation",
                        "src": "2168:87:15",
                        "text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
                      },
                      "id": 2064,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getBytes32Slot",
                      "nameLocation": "2269:14:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2057,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2056,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "2292:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2064,
                            "src": "2284:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2055,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2284:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2283:14:15"
                      },
                      "returnParameters": {
                        "id": 2061,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2060,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "2341:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2064,
                            "src": "2321:21:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bytes32Slot_$2022_storage_ptr",
                              "typeString": "struct StorageSlot.Bytes32Slot"
                            },
                            "typeName": {
                              "id": 2059,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2058,
                                "name": "Bytes32Slot",
                                "nameLocations": [
                                  "2321:11:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2022,
                                "src": "2321:11:15"
                              },
                              "referencedDeclaration": 2022,
                              "src": "2321:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Slot_$2022_storage_ptr",
                                "typeString": "struct StorageSlot.Bytes32Slot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2320:23:15"
                      },
                      "scope": 2120,
                      "src": "2260:190:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2074,
                        "nodeType": "Block",
                        "src": "2632:106:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "2694:38:15",
                              "nodeType": "YulBlock",
                              "src": "2694:38:15",
                              "statements": [
                                {
                                  "nativeSrc": "2708:14:15",
                                  "nodeType": "YulAssignment",
                                  "src": "2708:14:15",
                                  "value": {
                                    "name": "slot",
                                    "nativeSrc": "2718:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "2718:4:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "2708:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2708:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2071,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "2708:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2067,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2718:4:15",
                                "valueSize": 1
                              }
                            ],
                            "id": 2073,
                            "nodeType": "InlineAssembly",
                            "src": "2685:47:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2065,
                        "nodeType": "StructuredDocumentation",
                        "src": "2456:87:15",
                        "text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
                      },
                      "id": 2075,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getUint256Slot",
                      "nameLocation": "2557:14:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2068,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2067,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "2580:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2075,
                            "src": "2572:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2066,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2572:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2571:14:15"
                      },
                      "returnParameters": {
                        "id": 2072,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2071,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "2629:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2075,
                            "src": "2609:21:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Uint256Slot_$2025_storage_ptr",
                              "typeString": "struct StorageSlot.Uint256Slot"
                            },
                            "typeName": {
                              "id": 2070,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2069,
                                "name": "Uint256Slot",
                                "nameLocations": [
                                  "2609:11:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2025,
                                "src": "2609:11:15"
                              },
                              "referencedDeclaration": 2025,
                              "src": "2609:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Uint256Slot_$2025_storage_ptr",
                                "typeString": "struct StorageSlot.Uint256Slot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2608:23:15"
                      },
                      "scope": 2120,
                      "src": "2548:190:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2085,
                        "nodeType": "Block",
                        "src": "2917:106:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "2979:38:15",
                              "nodeType": "YulBlock",
                              "src": "2979:38:15",
                              "statements": [
                                {
                                  "nativeSrc": "2993:14:15",
                                  "nodeType": "YulAssignment",
                                  "src": "2993:14:15",
                                  "value": {
                                    "name": "slot",
                                    "nativeSrc": "3003:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3003:4:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "2993:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2993:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2082,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "2993:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2078,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3003:4:15",
                                "valueSize": 1
                              }
                            ],
                            "id": 2084,
                            "nodeType": "InlineAssembly",
                            "src": "2970:47:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2076,
                        "nodeType": "StructuredDocumentation",
                        "src": "2744:86:15",
                        "text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
                      },
                      "id": 2086,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getStringSlot",
                      "nameLocation": "2844:13:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2079,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2078,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "2866:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2086,
                            "src": "2858:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2077,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2858:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2857:14:15"
                      },
                      "returnParameters": {
                        "id": 2083,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2082,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "2914:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2086,
                            "src": "2895:20:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StringSlot_$2028_storage_ptr",
                              "typeString": "struct StorageSlot.StringSlot"
                            },
                            "typeName": {
                              "id": 2081,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2080,
                                "name": "StringSlot",
                                "nameLocations": [
                                  "2895:10:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2028,
                                "src": "2895:10:15"
                              },
                              "referencedDeclaration": 2028,
                              "src": "2895:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StringSlot_$2028_storage_ptr",
                                "typeString": "struct StorageSlot.StringSlot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2894:22:15"
                      },
                      "scope": 2120,
                      "src": "2835:188:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2096,
                        "nodeType": "Block",
                        "src": "3225:112:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "3287:44:15",
                              "nodeType": "YulBlock",
                              "src": "3287:44:15",
                              "statements": [
                                {
                                  "nativeSrc": "3301:20:15",
                                  "nodeType": "YulAssignment",
                                  "src": "3301:20:15",
                                  "value": {
                                    "name": "store.slot",
                                    "nativeSrc": "3311:10:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3311:10:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "3301:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3301:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2093,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "3301:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2089,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "3311:10:15",
                                "suffix": "slot",
                                "valueSize": 1
                              }
                            ],
                            "id": 2095,
                            "nodeType": "InlineAssembly",
                            "src": "3278:53:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2087,
                        "nodeType": "StructuredDocumentation",
                        "src": "3029:101:15",
                        "text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
                      },
                      "id": 2097,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getStringSlot",
                      "nameLocation": "3144:13:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2090,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2089,
                            "mutability": "mutable",
                            "name": "store",
                            "nameLocation": "3173:5:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2097,
                            "src": "3158:20:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 2088,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3158:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3157:22:15"
                      },
                      "returnParameters": {
                        "id": 2094,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2093,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "3222:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2097,
                            "src": "3203:20:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StringSlot_$2028_storage_ptr",
                              "typeString": "struct StorageSlot.StringSlot"
                            },
                            "typeName": {
                              "id": 2092,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2091,
                                "name": "StringSlot",
                                "nameLocations": [
                                  "3203:10:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2028,
                                "src": "3203:10:15"
                              },
                              "referencedDeclaration": 2028,
                              "src": "3203:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StringSlot_$2028_storage_ptr",
                                "typeString": "struct StorageSlot.StringSlot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3202:22:15"
                      },
                      "scope": 2120,
                      "src": "3135:202:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2107,
                        "nodeType": "Block",
                        "src": "3513:106:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "3575:38:15",
                              "nodeType": "YulBlock",
                              "src": "3575:38:15",
                              "statements": [
                                {
                                  "nativeSrc": "3589:14:15",
                                  "nodeType": "YulAssignment",
                                  "src": "3589:14:15",
                                  "value": {
                                    "name": "slot",
                                    "nativeSrc": "3599:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3599:4:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "3589:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3589:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2104,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "3589:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2100,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3599:4:15",
                                "valueSize": 1
                              }
                            ],
                            "id": 2106,
                            "nodeType": "InlineAssembly",
                            "src": "3566:47:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2098,
                        "nodeType": "StructuredDocumentation",
                        "src": "3343:85:15",
                        "text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
                      },
                      "id": 2108,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getBytesSlot",
                      "nameLocation": "3442:12:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2101,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2100,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "3463:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2108,
                            "src": "3455:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2099,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3455:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3454:14:15"
                      },
                      "returnParameters": {
                        "id": 2105,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2104,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "3510:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2108,
                            "src": "3492:19:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BytesSlot_$2031_storage_ptr",
                              "typeString": "struct StorageSlot.BytesSlot"
                            },
                            "typeName": {
                              "id": 2103,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2102,
                                "name": "BytesSlot",
                                "nameLocations": [
                                  "3492:9:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2031,
                                "src": "3492:9:15"
                              },
                              "referencedDeclaration": 2031,
                              "src": "3492:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BytesSlot_$2031_storage_ptr",
                                "typeString": "struct StorageSlot.BytesSlot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3491:21:15"
                      },
                      "scope": 2120,
                      "src": "3433:186:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2118,
                        "nodeType": "Block",
                        "src": "3816:112:15",
                        "statements": [
                          {
                            "AST": {
                              "nativeSrc": "3878:44:15",
                              "nodeType": "YulBlock",
                              "src": "3878:44:15",
                              "statements": [
                                {
                                  "nativeSrc": "3892:20:15",
                                  "nodeType": "YulAssignment",
                                  "src": "3892:20:15",
                                  "value": {
                                    "name": "store.slot",
                                    "nativeSrc": "3902:10:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3902:10:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "r.slot",
                                      "nativeSrc": "3892:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3892:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "shanghai",
                            "externalReferences": [
                              {
                                "declaration": 2115,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "3892:6:15",
                                "suffix": "slot",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2111,
                                "isOffset": false,
                                "isSlot": true,
                                "src": "3902:10:15",
                                "suffix": "slot",
                                "valueSize": 1
                              }
                            ],
                            "id": 2117,
                            "nodeType": "InlineAssembly",
                            "src": "3869:53:15"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2109,
                        "nodeType": "StructuredDocumentation",
                        "src": "3625:99:15",
                        "text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
                      },
                      "id": 2119,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "getBytesSlot",
                      "nameLocation": "3738:12:15",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2112,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2111,
                            "mutability": "mutable",
                            "name": "store",
                            "nameLocation": "3765:5:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2119,
                            "src": "3751:19:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2110,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3751:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3750:21:15"
                      },
                      "returnParameters": {
                        "id": 2116,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2115,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "3813:1:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 2119,
                            "src": "3795:19:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BytesSlot_$2031_storage_ptr",
                              "typeString": "struct StorageSlot.BytesSlot"
                            },
                            "typeName": {
                              "id": 2114,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2113,
                                "name": "BytesSlot",
                                "nameLocations": [
                                  "3795:9:15"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2031,
                                "src": "3795:9:15"
                              },
                              "referencedDeclaration": 2031,
                              "src": "3795:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BytesSlot_$2031_storage_ptr",
                                "typeString": "struct StorageSlot.BytesSlot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3794:21:15"
                      },
                      "scope": 2120,
                      "src": "3729:199:15",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "internal"
                    }
                  ],
                  "scope": 2121,
                  "src": "1245:2685:15",
                  "usedErrors": [],
                  "usedEvents": []
                }
              ],
              "src": "193:3738:15"
            },
            "id": 15
          },
          "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
            "ast": {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "exportedSymbols": {
                "IERC165": [
                  2132
                ]
              },
              "id": 2133,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 2122,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "115:24:16"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "IERC165",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "documentation": {
                    "id": 2123,
                    "nodeType": "StructuredDocumentation",
                    "src": "141:279:16",
                    "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
                  },
                  "fullyImplemented": false,
                  "id": 2132,
                  "linearizedBaseContracts": [
                    2132
                  ],
                  "name": "IERC165",
                  "nameLocation": "431:7:16",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "documentation": {
                        "id": 2124,
                        "nodeType": "StructuredDocumentation",
                        "src": "445:340:16",
                        "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                      },
                      "functionSelector": "01ffc9a7",
                      "id": 2131,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "supportsInterface",
                      "nameLocation": "799:17:16",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2127,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2126,
                            "mutability": "mutable",
                            "name": "interfaceId",
                            "nameLocation": "824:11:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2131,
                            "src": "817:18:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 2125,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "817:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "816:20:16"
                      },
                      "returnParameters": {
                        "id": 2130,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2129,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2131,
                            "src": "860:4:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2128,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "860:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "859:6:16"
                      },
                      "scope": 2132,
                      "src": "790:76:16",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 2133,
                  "src": "421:447:16",
                  "usedErrors": [],
                  "usedEvents": []
                }
              ],
              "src": "115:754:16"
            },
            "id": 16
          },
          "contracts/interface/IDZapNFTStaking.sol": {
            "ast": {
              "absolutePath": "contracts/interface/IDZapNFTStaking.sol",
              "exportedSymbols": {
                "IDZapNFTStaking": [
                  2176
                ]
              },
              "id": 2177,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 2134,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".24"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "32:24:17"
                },
                {
                  "abstract": false,
                  "baseContracts": [],
                  "canonicalName": "IDZapNFTStaking",
                  "contractDependencies": [],
                  "contractKind": "interface",
                  "fullyImplemented": false,
                  "id": 2176,
                  "linearizedBaseContracts": [
                    2176
                  ],
                  "name": "IDZapNFTStaking",
                  "nameLocation": "68:15:17",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "functionSelector": "a694fc3a",
                      "id": 2139,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "stake",
                      "nameLocation": "100:5:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2137,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2136,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "114:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2139,
                            "src": "106:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2135,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "106:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "105:17:17"
                      },
                      "returnParameters": {
                        "id": 2138,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "131:0:17"
                      },
                      "scope": 2176,
                      "src": "91:41:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "2e17de78",
                      "id": 2144,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "unstake",
                      "nameLocation": "146:7:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2142,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2141,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "162:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2144,
                            "src": "154:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2140,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "154:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "153:17:17"
                      },
                      "returnParameters": {
                        "id": 2143,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "179:0:17"
                      },
                      "scope": 2176,
                      "src": "137:43:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "2e1a7d4d",
                      "id": 2149,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "withdraw",
                      "nameLocation": "194:8:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2147,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2146,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "211:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2149,
                            "src": "203:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2145,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "203:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "202:17:17"
                      },
                      "returnParameters": {
                        "id": 2148,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "228:0:17"
                      },
                      "scope": 2176,
                      "src": "185:44:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "0962ef79",
                      "id": 2154,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "claimRewards",
                      "nameLocation": "243:12:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2152,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2151,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "264:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2154,
                            "src": "256:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2150,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "256:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "255:17:17"
                      },
                      "returnParameters": {
                        "id": 2153,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "281:0:17"
                      },
                      "scope": 2176,
                      "src": "234:48:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "9ef3a261",
                      "id": 2159,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "updateRewardRate",
                      "nameLocation": "296:16:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2157,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2156,
                            "mutability": "mutable",
                            "name": "_rewardPerBlock",
                            "nameLocation": "321:15:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2159,
                            "src": "313:23:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2155,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "313:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "312:25:17"
                      },
                      "returnParameters": {
                        "id": 2158,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "346:0:17"
                      },
                      "scope": 2176,
                      "src": "287:60:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "114eaf55",
                      "id": 2164,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "setUnbondingPeriod",
                      "nameLocation": "361:18:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2162,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2161,
                            "mutability": "mutable",
                            "name": "_unbondingPeriod",
                            "nameLocation": "388:16:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2164,
                            "src": "380:24:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2160,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "380:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "379:26:17"
                      },
                      "returnParameters": {
                        "id": 2163,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "414:0:17"
                      },
                      "scope": 2176,
                      "src": "352:63:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "197916b4",
                      "id": 2169,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "setRewardClaimDelay",
                      "nameLocation": "429:19:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2167,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2166,
                            "mutability": "mutable",
                            "name": "_rewardClaimDelay",
                            "nameLocation": "457:17:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2169,
                            "src": "449:25:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2165,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "449:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "448:27:17"
                      },
                      "returnParameters": {
                        "id": 2168,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "484:0:17"
                      },
                      "scope": 2176,
                      "src": "420:65:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "8456cb59",
                      "id": 2172,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "pause",
                      "nameLocation": "499:5:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2170,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "504:2:17"
                      },
                      "returnParameters": {
                        "id": 2171,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "515:0:17"
                      },
                      "scope": 2176,
                      "src": "490:26:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "functionSelector": "3f4ba83a",
                      "id": 2175,
                      "implemented": false,
                      "kind": "function",
                      "modifiers": [],
                      "name": "unpause",
                      "nameLocation": "530:7:17",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2173,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "537:2:17"
                      },
                      "returnParameters": {
                        "id": 2174,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "548:0:17"
                      },
                      "scope": 2176,
                      "src": "521:28:17",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 2177,
                  "src": "58:493:17",
                  "usedErrors": [],
                  "usedEvents": []
                }
              ],
              "src": "32:520:17"
            },
            "id": 17
          },
          "contracts/newDZapNFTStaking.sol": {
            "ast": {
              "absolutePath": "contracts/newDZapNFTStaking.sol",
              "exportedSymbols": {
                "Address": [
                  2010
                ],
                "ContextUpgradeable": [
                  719
                ],
                "ERC1967Utils": [
                  1208
                ],
                "ERC721HolderUpgradeable": [
                  673
                ],
                "IDZapNFTStaking": [
                  2176
                ],
                "IERC165": [
                  2132
                ],
                "IERC1822Proxiable": [
                  905
                ],
                "IERC20": [
                  1296
                ],
                "IERC20Permit": [
                  1332
                ],
                "IERC721": [
                  1739
                ],
                "IERC721Receiver": [
                  1757
                ],
                "Initializable": [
                  448
                ],
                "NewDZapNFTStaking": [
                  2843
                ],
                "OwnableUpgradeable": [
                  194
                ],
                "PausableUpgradeable": [
                  895
                ],
                "SafeERC20": [
                  1622
                ],
                "UUPSUpgradeable": [
                  630
                ]
              },
              "id": 2844,
              "license": "MIT",
              "nodeType": "SourceUnit",
              "nodes": [
                {
                  "id": 2178,
                  "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".24"
                  ],
                  "nodeType": "PragmaDirective",
                  "src": "32:24:18"
                },
                {
                  "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
                  "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
                  "id": 2179,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 1740,
                  "src": "58:58:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                  "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                  "id": 2180,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 1297,
                  "src": "117:56:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
                  "file": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
                  "id": 2181,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 674,
                  "src": "174:92:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                  "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                  "id": 2182,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 1623,
                  "src": "267:65:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                  "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                  "id": 2183,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 195,
                  "src": "333:75:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
                  "file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
                  "id": 2184,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 896,
                  "src": "409:75:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                  "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                  "id": 2185,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 631,
                  "src": "485:77:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                  "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                  "id": 2186,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 449,
                  "src": "563:75:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "absolutePath": "contracts/interface/IDZapNFTStaking.sol",
                  "file": "./interface/IDZapNFTStaking.sol",
                  "id": 2187,
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "ImportDirective",
                  "scope": 2844,
                  "sourceUnit": 2177,
                  "src": "639:41:18",
                  "symbolAliases": [],
                  "unitAlias": ""
                },
                {
                  "abstract": false,
                  "baseContracts": [
                    {
                      "baseName": {
                        "id": 2189,
                        "name": "Initializable",
                        "nameLocations": [
                          "892:13:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 448,
                        "src": "892:13:18"
                      },
                      "id": 2190,
                      "nodeType": "InheritanceSpecifier",
                      "src": "892:13:18"
                    },
                    {
                      "baseName": {
                        "id": 2191,
                        "name": "UUPSUpgradeable",
                        "nameLocations": [
                          "907:15:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 630,
                        "src": "907:15:18"
                      },
                      "id": 2192,
                      "nodeType": "InheritanceSpecifier",
                      "src": "907:15:18"
                    },
                    {
                      "baseName": {
                        "id": 2193,
                        "name": "OwnableUpgradeable",
                        "nameLocations": [
                          "924:18:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 194,
                        "src": "924:18:18"
                      },
                      "id": 2194,
                      "nodeType": "InheritanceSpecifier",
                      "src": "924:18:18"
                    },
                    {
                      "baseName": {
                        "id": 2195,
                        "name": "PausableUpgradeable",
                        "nameLocations": [
                          "944:19:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 895,
                        "src": "944:19:18"
                      },
                      "id": 2196,
                      "nodeType": "InheritanceSpecifier",
                      "src": "944:19:18"
                    },
                    {
                      "baseName": {
                        "id": 2197,
                        "name": "ERC721HolderUpgradeable",
                        "nameLocations": [
                          "965:23:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 673,
                        "src": "965:23:18"
                      },
                      "id": 2198,
                      "nodeType": "InheritanceSpecifier",
                      "src": "965:23:18"
                    },
                    {
                      "baseName": {
                        "id": 2199,
                        "name": "IDZapNFTStaking",
                        "nameLocations": [
                          "990:15:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2176,
                        "src": "990:15:18"
                      },
                      "id": 2200,
                      "nodeType": "InheritanceSpecifier",
                      "src": "990:15:18"
                    }
                  ],
                  "canonicalName": "NewDZapNFTStaking",
                  "contractDependencies": [],
                  "contractKind": "contract",
                  "documentation": {
                    "id": 2188,
                    "nodeType": "StructuredDocumentation",
                    "src": "682:179:18",
                    "text": "0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d  0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d\n @title DZapNFTStaking\n @dev Contract for staking NFTs and earning ERC20 rewards."
                  },
                  "fullyImplemented": true,
                  "id": 2843,
                  "linearizedBaseContracts": [
                    2843,
                    2176,
                    673,
                    1757,
                    895,
                    194,
                    719,
                    630,
                    905,
                    448
                  ],
                  "name": "NewDZapNFTStaking",
                  "nameLocation": "871:17:18",
                  "nodeType": "ContractDefinition",
                  "nodes": [
                    {
                      "global": false,
                      "id": 2204,
                      "libraryName": {
                        "id": 2201,
                        "name": "SafeERC20",
                        "nameLocations": [
                          "1018:9:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1622,
                        "src": "1018:9:18"
                      },
                      "nodeType": "UsingForDirective",
                      "src": "1012:27:18",
                      "typeName": {
                        "id": 2203,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2202,
                          "name": "IERC20",
                          "nameLocations": [
                            "1032:6:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1296,
                          "src": "1032:6:18"
                        },
                        "referencedDeclaration": 1296,
                        "src": "1032:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1296",
                          "typeString": "contract IERC20"
                        }
                      }
                    },
                    {
                      "constant": false,
                      "functionSelector": "47ccca02",
                      "id": 2207,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "1060:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1045:18:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$1739",
                        "typeString": "contract IERC721"
                      },
                      "typeName": {
                        "id": 2206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2205,
                          "name": "IERC721",
                          "nameLocations": [
                            "1045:7:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1739,
                          "src": "1045:7:18"
                        },
                        "referencedDeclaration": 1739,
                        "src": "1045:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1739",
                          "typeString": "contract IERC721"
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "constant": false,
                      "functionSelector": "f7c618c1",
                      "id": 2210,
                      "mutability": "mutable",
                      "name": "rewardToken",
                      "nameLocation": "1083:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1069:25:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1296",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2209,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2208,
                          "name": "IERC20",
                          "nameLocations": [
                            "1069:6:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1296,
                          "src": "1069:6:18"
                        },
                        "referencedDeclaration": 1296,
                        "src": "1069:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1296",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "constant": false,
                      "functionSelector": "f851a440",
                      "id": 2212,
                      "mutability": "mutable",
                      "name": "admin",
                      "nameLocation": "1115:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1100:20:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2211,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1100:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "canonicalName": "NewDZapNFTStaking.RewardRate",
                      "id": 2217,
                      "members": [
                        {
                          "constant": false,
                          "id": 2214,
                          "mutability": "mutable",
                          "name": "blockNumber",
                          "nameLocation": "1163:11:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2217,
                          "src": "1155:19:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2213,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1155:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2216,
                          "mutability": "mutable",
                          "name": "rewardPerBlock",
                          "nameLocation": "1192:14:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2217,
                          "src": "1184:22:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2215,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1184:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "RewardRate",
                      "nameLocation": "1134:10:18",
                      "nodeType": "StructDefinition",
                      "scope": 2843,
                      "src": "1127:86:18",
                      "visibility": "public"
                    },
                    {
                      "constant": false,
                      "functionSelector": "f2caeb1e",
                      "id": 2221,
                      "mutability": "mutable",
                      "name": "rewardRates",
                      "nameLocation": "1239:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1219:31:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage",
                        "typeString": "struct NewDZapNFTStaking.RewardRate[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2219,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2218,
                            "name": "RewardRate",
                            "nameLocations": [
                              "1219:10:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2217,
                            "src": "1219:10:18"
                          },
                          "referencedDeclaration": 2217,
                          "src": "1219:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardRate_$2217_storage_ptr",
                            "typeString": "struct NewDZapNFTStaking.RewardRate"
                          }
                        },
                        "id": 2220,
                        "nodeType": "ArrayTypeName",
                        "src": "1219:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage_ptr",
                          "typeString": "struct NewDZapNFTStaking.RewardRate[]"
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "constant": false,
                      "functionSelector": "6cf6d675",
                      "id": 2223,
                      "mutability": "mutable",
                      "name": "unbondingPeriod",
                      "nameLocation": "1272:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1257:30:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1257:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "constant": false,
                      "functionSelector": "46582583",
                      "id": 2225,
                      "mutability": "mutable",
                      "name": "rewardClaimDelay",
                      "nameLocation": "1308:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1293:31:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1293:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "canonicalName": "NewDZapNFTStaking.Stake",
                      "id": 2236,
                      "members": [
                        {
                          "constant": false,
                          "id": 2227,
                          "mutability": "mutable",
                          "name": "tokenId",
                          "nameLocation": "1362:7:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2236,
                          "src": "1354:15:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2226,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1354:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2229,
                          "mutability": "mutable",
                          "name": "stakedAt",
                          "nameLocation": "1387:8:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2236,
                          "src": "1379:16:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2228,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1379:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2231,
                          "mutability": "mutable",
                          "name": "unbondingAt",
                          "nameLocation": "1413:11:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2236,
                          "src": "1405:19:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2230,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1405:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2233,
                          "mutability": "mutable",
                          "name": "rewardClaimedAt",
                          "nameLocation": "1442:15:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2236,
                          "src": "1434:23:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2232,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1434:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2235,
                          "mutability": "mutable",
                          "name": "isStaked",
                          "nameLocation": "1472:8:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2236,
                          "src": "1467:13:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2234,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1467:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "name": "Stake",
                      "nameLocation": "1338:5:18",
                      "nodeType": "StructDefinition",
                      "scope": 2843,
                      "src": "1331:156:18",
                      "visibility": "public"
                    },
                    {
                      "constant": false,
                      "functionSelector": "584b62a1",
                      "id": 2243,
                      "mutability": "mutable",
                      "name": "stakes",
                      "nameLocation": "1546:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1493:59:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                        "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake))"
                      },
                      "typeName": {
                        "id": 2242,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 2237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1501:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1493:45:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake))"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 2241,
                          "keyName": "",
                          "keyNameLocation": "-1:-1:-1",
                          "keyType": {
                            "id": 2238,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1520:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "1512:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                            "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake)"
                          },
                          "valueName": "",
                          "valueNameLocation": "-1:-1:-1",
                          "valueType": {
                            "id": 2240,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2239,
                              "name": "Stake",
                              "nameLocations": [
                                "1531:5:18"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2236,
                              "src": "1531:5:18"
                            },
                            "referencedDeclaration": 2236,
                            "src": "1531:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2236_storage_ptr",
                              "typeString": "struct NewDZapNFTStaking.Stake"
                            }
                          }
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "constant": false,
                      "functionSelector": "1caaa487",
                      "id": 2247,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "1593:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2843,
                      "src": "1558:45:18",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      },
                      "typeName": {
                        "id": 2246,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 2244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1558:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 2245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1577:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      },
                      "visibility": "public"
                    },
                    {
                      "anonymous": false,
                      "eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
                      "id": 2253,
                      "name": "Staked",
                      "nameLocation": "1616:6:18",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 2252,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2249,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "1639:4:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2253,
                            "src": "1623:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1623:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2251,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "1653:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2253,
                            "src": "1645:15:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2250,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1645:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1622:39:18"
                      },
                      "src": "1610:52:18"
                    },
                    {
                      "anonymous": false,
                      "eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
                      "id": 2259,
                      "name": "Unstaked",
                      "nameLocation": "1673:8:18",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 2258,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2255,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "1698:4:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "1682:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2254,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1682:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2257,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "1712:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "1704:15:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2256,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1704:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1681:39:18"
                      },
                      "src": "1667:54:18"
                    },
                    {
                      "anonymous": false,
                      "eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
                      "id": 2265,
                      "name": "RewardClaimed",
                      "nameLocation": "1732:13:18",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 2264,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2261,
                            "indexed": true,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "1762:4:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2265,
                            "src": "1746:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2260,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1746:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2263,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "1776:6:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2265,
                            "src": "1768:14:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2262,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1768:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1745:38:18"
                      },
                      "src": "1726:58:18"
                    },
                    {
                      "anonymous": false,
                      "eventSelector": "c390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee50",
                      "id": 2271,
                      "name": "RewardRateUpdated",
                      "nameLocation": "1795:17:18",
                      "nodeType": "EventDefinition",
                      "parameters": {
                        "id": 2270,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2267,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "blockNumber",
                            "nameLocation": "1821:11:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2271,
                            "src": "1813:19:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2266,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1813:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2269,
                            "indexed": false,
                            "mutability": "mutable",
                            "name": "rewardPerBlock",
                            "nameLocation": "1842:14:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2271,
                            "src": "1834:22:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2268,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1834:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1812:45:18"
                      },
                      "src": "1789:69:18"
                    },
                    {
                      "errorSelector": "59dc379f",
                      "id": 2273,
                      "name": "NotTokenOwner",
                      "nameLocation": "1870:13:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2272,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1883:2:18"
                      },
                      "src": "1864:22:18"
                    },
                    {
                      "errorSelector": "0ae3514d",
                      "id": 2275,
                      "name": "AlreadyStaked",
                      "nameLocation": "1897:13:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2274,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1910:2:18"
                      },
                      "src": "1891:22:18"
                    },
                    {
                      "errorSelector": "039f2e18",
                      "id": 2277,
                      "name": "NotStaked",
                      "nameLocation": "1924:9:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2276,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1933:2:18"
                      },
                      "src": "1918:18:18"
                    },
                    {
                      "errorSelector": "c1ab6dc1",
                      "id": 2279,
                      "name": "InvalidToken",
                      "nameLocation": "1947:12:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2278,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1959:2:18"
                      },
                      "src": "1941:21:18"
                    },
                    {
                      "errorSelector": "3878000d",
                      "id": 2281,
                      "name": "UnbondingPeriodNotPassed",
                      "nameLocation": "1973:24:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2280,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "1997:2:18"
                      },
                      "src": "1967:33:18"
                    },
                    {
                      "errorSelector": "b15ca316",
                      "id": 2283,
                      "name": "ClaimDelayNotPassed",
                      "nameLocation": "2011:19:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2282,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2030:2:18"
                      },
                      "src": "2005:28:18"
                    },
                    {
                      "errorSelector": "26d1807b",
                      "id": 2285,
                      "name": "StakingPaused",
                      "nameLocation": "2044:13:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2284,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2057:2:18"
                      },
                      "src": "2038:22:18"
                    },
                    {
                      "errorSelector": "ae4fc7ab",
                      "id": 2287,
                      "name": "InvalidRewardPerBlock",
                      "nameLocation": "2071:21:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2286,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2092:2:18"
                      },
                      "src": "2065:30:18"
                    },
                    {
                      "errorSelector": "9e9ad0c0",
                      "id": 2289,
                      "name": "InvalidUnbondingPeriod",
                      "nameLocation": "2106:22:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2288,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2128:2:18"
                      },
                      "src": "2100:31:18"
                    },
                    {
                      "errorSelector": "5958c647",
                      "id": 2291,
                      "name": "InvalidRewardClaimDelay",
                      "nameLocation": "2142:23:18",
                      "nodeType": "ErrorDefinition",
                      "parameters": {
                        "id": 2290,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2165:2:18"
                      },
                      "src": "2136:32:18"
                    },
                    {
                      "body": {
                        "id": 2353,
                        "nodeType": "Block",
                        "src": "2998:357:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2309,
                                "name": "__UUPSUpgradeable_init",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 502,
                                "src": "3008:22:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 2310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3008:24:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2311,
                            "nodeType": "ExpressionStatement",
                            "src": "3008:24:18"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2313,
                                  "name": "_admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2294,
                                  "src": "3057:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2312,
                                "name": "__Ownable_init",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "3042:14:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 2314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3042:22:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2315,
                            "nodeType": "ExpressionStatement",
                            "src": "3042:22:18"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2316,
                                "name": "__Pausable_init",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 771,
                                "src": "3074:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 2317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3074:17:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2318,
                            "nodeType": "ExpressionStatement",
                            "src": "3074:17:18"
                          },
                          {
                            "expression": {
                              "id": 2321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2319,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2212,
                                "src": "3102:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 2320,
                                "name": "_admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2294,
                                "src": "3110:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3102:14:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2322,
                            "nodeType": "ExpressionStatement",
                            "src": "3102:14:18"
                          },
                          {
                            "expression": {
                              "id": 2327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2323,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2207,
                                "src": "3126:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$1739",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 2325,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2296,
                                    "src": "3140:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2324,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1739,
                                  "src": "3132:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$1739_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 2326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3132:13:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$1739",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "src": "3126:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$1739",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 2328,
                            "nodeType": "ExpressionStatement",
                            "src": "3126:19:18"
                          },
                          {
                            "expression": {
                              "id": 2333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2329,
                                "name": "rewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2210,
                                "src": "3155:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1296",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 2331,
                                    "name": "_rewardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2298,
                                    "src": "3176:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2330,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1296,
                                  "src": "3169:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1296_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 2332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3169:20:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1296",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "3155:34:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2334,
                            "nodeType": "ExpressionStatement",
                            "src": "3155:34:18"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2339,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967292,
                                        "src": "3227:5:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2340,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3233:6:18",
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "3227:12:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 2341,
                                      "name": "_rewardPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2300,
                                      "src": "3241:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2338,
                                    "name": "RewardRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2217,
                                    "src": "3216:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_RewardRate_$2217_storage_ptr_$",
                                      "typeString": "type(struct NewDZapNFTStaking.RewardRate storage pointer)"
                                    }
                                  },
                                  "id": 2342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3216:41:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                    "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                    "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2335,
                                  "name": "rewardRates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2221,
                                  "src": "3199:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage",
                                    "typeString": "struct NewDZapNFTStaking.RewardRate storage ref[] storage ref"
                                  }
                                },
                                "id": 2337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3211:4:18",
                                "memberName": "push",
                                "nodeType": "MemberAccess",
                                "src": "3199:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage_ptr_$_t_struct$_RewardRate_$2217_storage_$returns$__$attached_to$_t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage_ptr_$",
                                  "typeString": "function (struct NewDZapNFTStaking.RewardRate storage ref[] storage pointer,struct NewDZapNFTStaking.RewardRate storage ref)"
                                }
                              },
                              "id": 2343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3199:59:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2344,
                            "nodeType": "ExpressionStatement",
                            "src": "3199:59:18"
                          },
                          {
                            "expression": {
                              "id": 2347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2345,
                                "name": "unbondingPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2223,
                                "src": "3268:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 2346,
                                "name": "_unbondingPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2302,
                                "src": "3286:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3268:34:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2348,
                            "nodeType": "ExpressionStatement",
                            "src": "3268:34:18"
                          },
                          {
                            "expression": {
                              "id": 2351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2349,
                                "name": "rewardClaimDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2225,
                                "src": "3312:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 2350,
                                "name": "_rewardClaimDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2304,
                                "src": "3331:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3312:36:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2352,
                            "nodeType": "ExpressionStatement",
                            "src": "3312:36:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2292,
                        "nodeType": "StructuredDocumentation",
                        "src": "2174:596:18",
                        "text": " @dev Initializes the contract by setting the admin, NFT contract, reward token contract, reward per block, unbonding period, and reward claim delay.\n @param _admin Address of the contract admin.\n @param _nft Address of the NFT contract.\n @param _rewardToken Address of the reward token contract.\n @param _rewardPerBlock Number of reward tokens given per block.\n @param _unbondingPeriod Number of blocks required to wait before withdrawing an unstaked NFT.\n @param _rewardClaimDelay Number of seconds required to wait before claiming rewards."
                      },
                      "functionSelector": "728cdbca",
                      "id": 2354,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2307,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2306,
                            "name": "initializer",
                            "nameLocations": [
                              "2986:11:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 302,
                            "src": "2986:11:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "2986:11:18"
                        }
                      ],
                      "name": "initialize",
                      "nameLocation": "2784:10:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2305,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2294,
                            "mutability": "mutable",
                            "name": "_admin",
                            "nameLocation": "2812:6:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2354,
                            "src": "2804:14:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2293,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2804:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2296,
                            "mutability": "mutable",
                            "name": "_nft",
                            "nameLocation": "2836:4:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2354,
                            "src": "2828:12:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2295,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2828:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2298,
                            "mutability": "mutable",
                            "name": "_rewardToken",
                            "nameLocation": "2858:12:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2354,
                            "src": "2850:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2297,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2850:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2300,
                            "mutability": "mutable",
                            "name": "_rewardPerBlock",
                            "nameLocation": "2888:15:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2354,
                            "src": "2880:23:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2299,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2880:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2302,
                            "mutability": "mutable",
                            "name": "_unbondingPeriod",
                            "nameLocation": "2921:16:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2354,
                            "src": "2913:24:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2301,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2913:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2304,
                            "mutability": "mutable",
                            "name": "_rewardClaimDelay",
                            "nameLocation": "2955:17:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2354,
                            "src": "2947:25:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2303,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2947:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2794:184:18"
                      },
                      "returnParameters": {
                        "id": 2308,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "2998:0:18"
                      },
                      "scope": 2843,
                      "src": "2775:580:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "public"
                    },
                    {
                      "baseFunctions": [
                        584
                      ],
                      "body": {
                        "id": 2363,
                        "nodeType": "Block",
                        "src": "3595:2:18",
                        "statements": []
                      },
                      "documentation": {
                        "id": 2355,
                        "nodeType": "StructuredDocumentation",
                        "src": "3361:147:18",
                        "text": " @dev Authorizes the upgrade to a new implementation.\n @param newImplementation Address of the new implementation contract."
                      },
                      "id": 2364,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2361,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2360,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "3585:9:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "3585:9:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3585:9:18"
                        }
                      ],
                      "name": "_authorizeUpgrade",
                      "nameLocation": "3522:17:18",
                      "nodeType": "FunctionDefinition",
                      "overrides": {
                        "id": 2359,
                        "nodeType": "OverrideSpecifier",
                        "overrides": [],
                        "src": "3576:8:18"
                      },
                      "parameters": {
                        "id": 2358,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2357,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "3548:17:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2364,
                            "src": "3540:25:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2356,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3540:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3539:27:18"
                      },
                      "returnParameters": {
                        "id": 2362,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3595:0:18"
                      },
                      "scope": 2843,
                      "src": "3513:84:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "baseFunctions": [
                        2139
                      ],
                      "body": {
                        "id": 2442,
                        "nodeType": "Block",
                        "src": "3833:574:18",
                        "statements": [
                          {
                            "condition": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2372,
                                    "name": "stakes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2243,
                                    "src": "3847:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                      "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                    }
                                  },
                                  "id": 2375,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2373,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3854:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3858:6:18",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3854:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3847:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                    "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                  }
                                },
                                "id": 2377,
                                "indexExpression": {
                                  "id": 2376,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "3866:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3847:27:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                  "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                }
                              },
                              "id": 2378,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3875:8:18",
                              "memberName": "isStaked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2235,
                              "src": "3847:36:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2382,
                            "nodeType": "IfStatement",
                            "src": "3843:64:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2379,
                                  "name": "AlreadyStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2275,
                                  "src": "3892:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3892:15:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2381,
                              "nodeType": "RevertStatement",
                              "src": "3885:22:18"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2385,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2367,
                                    "src": "3933:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2383,
                                    "name": "nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2207,
                                    "src": "3921:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721_$1739",
                                      "typeString": "contract IERC721"
                                    }
                                  },
                                  "id": 2384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3925:7:18",
                                  "memberName": "ownerOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1672,
                                  "src": "3921:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 2386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3921:20:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2387,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3945:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3949:6:18",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3945:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3921:34:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2393,
                            "nodeType": "IfStatement",
                            "src": "3917:62:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2390,
                                  "name": "NotTokenOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2273,
                                  "src": "3964:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3964:15:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2392,
                              "nodeType": "RevertStatement",
                              "src": "3957:22:18"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2395,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4004:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4008:6:18",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4004:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2397,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "4016:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2394,
                                "name": "_claimRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2659,
                                "src": "3990:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 2398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3990:34:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2399,
                            "nodeType": "ExpressionStatement",
                            "src": "3990:34:18"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2403,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4056:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4060:6:18",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4056:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2407,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "4076:4:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_NewDZapNFTStaking_$2843",
                                        "typeString": "contract NewDZapNFTStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_NewDZapNFTStaking_$2843",
                                        "typeString": "contract NewDZapNFTStaking"
                                      }
                                    ],
                                    "id": 2406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4068:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2405,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4068:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4068:13:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2409,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "4083:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2400,
                                  "name": "nft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2207,
                                  "src": "4035:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$1739",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                "id": 2402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4039:16:18",
                                "memberName": "safeTransferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1694,
                                "src": "4035:20:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256) external"
                                }
                              },
                              "id": 2410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4035:56:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2411,
                            "nodeType": "ExpressionStatement",
                            "src": "4035:56:18"
                          },
                          {
                            "expression": {
                              "id": 2427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2412,
                                    "name": "stakes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2243,
                                    "src": "4101:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                      "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                    }
                                  },
                                  "id": 2416,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2413,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "4108:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2414,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4112:6:18",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4108:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4101:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                    "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                  }
                                },
                                "id": 2417,
                                "indexExpression": {
                                  "id": 2415,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "4120:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "4101:27:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                  "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 2419,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2367,
                                    "src": "4160:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2420,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967292,
                                      "src": "4191:5:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2421,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4197:6:18",
                                    "memberName": "number",
                                    "nodeType": "MemberAccess",
                                    "src": "4191:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4230:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "id": 2423,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967292,
                                      "src": "4262:5:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4268:9:18",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "4262:15:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 2425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4301:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2418,
                                  "name": "Stake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "4131:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Stake_$2236_storage_ptr_$",
                                    "typeString": "type(struct NewDZapNFTStaking.Stake storage pointer)"
                                  }
                                },
                                "id": 2426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [
                                  "4151:7:18",
                                  "4181:8:18",
                                  "4217:11:18",
                                  "4245:15:18",
                                  "4291:8:18"
                                ],
                                "names": [
                                  "tokenId",
                                  "stakedAt",
                                  "unbondingAt",
                                  "rewardClaimedAt",
                                  "isStaked"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "4131:185:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2236_memory_ptr",
                                  "typeString": "struct NewDZapNFTStaking.Stake memory"
                                }
                              },
                              "src": "4101:215:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                              }
                            },
                            "id": 2428,
                            "nodeType": "ExpressionStatement",
                            "src": "4101:215:18"
                          },
                          {
                            "expression": {
                              "id": 2434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 2429,
                                  "name": "tokenOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2247,
                                  "src": "4326:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 2431,
                                "indexExpression": {
                                  "id": 2430,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "4337:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "4326:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 2432,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4348:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4352:6:18",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4348:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4326:32:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2435,
                            "nodeType": "ExpressionStatement",
                            "src": "4326:32:18"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2437,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4380:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4384:6:18",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4380:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2439,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "4392:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2436,
                                "name": "Staked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2253,
                                "src": "4373:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 2440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4373:27:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2441,
                            "nodeType": "EmitStatement",
                            "src": "4368:32:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2365,
                        "nodeType": "StructuredDocumentation",
                        "src": "3603:170:18",
                        "text": " @notice Stakes an NFT to earn rewards.\n @dev Transfers the NFT from the caller to the contract.\n @param tokenId ID of the NFT to be staked."
                      },
                      "functionSelector": "a694fc3a",
                      "id": 2443,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2370,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2369,
                            "name": "whenNotPaused",
                            "nameLocations": [
                              "3819:13:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 797,
                            "src": "3819:13:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "3819:13:18"
                        }
                      ],
                      "name": "stake",
                      "nameLocation": "3787:5:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2368,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2367,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3801:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2443,
                            "src": "3793:15:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2366,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3793:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3792:17:18"
                      },
                      "returnParameters": {
                        "id": 2371,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "3833:0:18"
                      },
                      "scope": 2843,
                      "src": "3778:629:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "baseFunctions": [
                        2144
                      ],
                      "body": {
                        "id": 2488,
                        "nodeType": "Block",
                        "src": "4628:250:18",
                        "statements": [
                          {
                            "condition": {
                              "id": 2458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4642:37:18",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2451,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2243,
                                      "src": "4643:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                      }
                                    },
                                    "id": 2454,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2452,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "4650:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2453,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4654:6:18",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4650:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4643:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                      "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                    }
                                  },
                                  "id": 2456,
                                  "indexExpression": {
                                    "id": 2455,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2446,
                                    "src": "4662:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4643:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                    "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                  }
                                },
                                "id": 2457,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4671:8:18",
                                "memberName": "isStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2235,
                                "src": "4643:36:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2462,
                            "nodeType": "IfStatement",
                            "src": "4638:61:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2459,
                                  "name": "NotStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2277,
                                  "src": "4688:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4688:11:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2461,
                              "nodeType": "RevertStatement",
                              "src": "4681:18:18"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2464,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4724:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4728:6:18",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4724:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2466,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2446,
                                  "src": "4736:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2463,
                                "name": "_claimRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2659,
                                "src": "4710:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 2467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4710:34:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2468,
                            "nodeType": "ExpressionStatement",
                            "src": "4710:34:18"
                          },
                          {
                            "expression": {
                              "id": 2480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2469,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2243,
                                      "src": "4755:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                      }
                                    },
                                    "id": 2473,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2470,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "4762:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2471,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4766:6:18",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4762:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4755:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                      "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                    }
                                  },
                                  "id": 2474,
                                  "indexExpression": {
                                    "id": 2472,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2446,
                                    "src": "4774:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4755:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                    "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                  }
                                },
                                "id": 2475,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "4783:11:18",
                                "memberName": "unbondingAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2231,
                                "src": "4755:39:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2476,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "4797:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4803:6:18",
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "4797:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2478,
                                  "name": "unbondingPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2223,
                                  "src": "4812:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4797:30:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4755:72:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2481,
                            "nodeType": "ExpressionStatement",
                            "src": "4755:72:18"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2483,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4851:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4855:6:18",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4851:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2485,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2446,
                                  "src": "4863:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2482,
                                "name": "Unstaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2259,
                                "src": "4842:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 2486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4842:29:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2487,
                            "nodeType": "EmitStatement",
                            "src": "4837:34:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2444,
                        "nodeType": "StructuredDocumentation",
                        "src": "4413:153:18",
                        "text": " @notice Unstakes an NFT.\n @dev Sets the unbonding period for the staked NFT.\n @param tokenId ID of the NFT to be unstaked."
                      },
                      "functionSelector": "2e17de78",
                      "id": 2489,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2449,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2448,
                            "name": "whenNotPaused",
                            "nameLocations": [
                              "4614:13:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 797,
                            "src": "4614:13:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "4614:13:18"
                        }
                      ],
                      "name": "unstake",
                      "nameLocation": "4580:7:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2447,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2446,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "4596:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2489,
                            "src": "4588:15:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2445,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4588:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4587:17:18"
                      },
                      "returnParameters": {
                        "id": 2450,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "4628:0:18"
                      },
                      "scope": 2843,
                      "src": "4571:307:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "baseFunctions": [
                        2149
                      ],
                      "body": {
                        "id": 2546,
                        "nodeType": "Block",
                        "src": "5145:328:18",
                        "statements": [
                          {
                            "condition": {
                              "id": 2502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5159:37:18",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2495,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2243,
                                      "src": "5160:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                      }
                                    },
                                    "id": 2498,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2496,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5167:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2497,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5171:6:18",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5167:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5160:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                      "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                    }
                                  },
                                  "id": 2500,
                                  "indexExpression": {
                                    "id": 2499,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2492,
                                    "src": "5179:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5160:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                    "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                  }
                                },
                                "id": 2501,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5188:8:18",
                                "memberName": "isStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2235,
                                "src": "5160:36:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2506,
                            "nodeType": "IfStatement",
                            "src": "5155:61:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2503,
                                  "name": "NotStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2277,
                                  "src": "5205:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5205:11:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2505,
                              "nodeType": "RevertStatement",
                              "src": "5198:18:18"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2507,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "5230:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5236:6:18",
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "5230:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2509,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2243,
                                      "src": "5245:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                      }
                                    },
                                    "id": 2512,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2510,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5252:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2511,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5256:6:18",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5252:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5245:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                      "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                    }
                                  },
                                  "id": 2514,
                                  "indexExpression": {
                                    "id": 2513,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2492,
                                    "src": "5264:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5245:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                    "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                  }
                                },
                                "id": 2515,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5273:11:18",
                                "memberName": "unbondingAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2231,
                                "src": "5245:39:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5230:54:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2520,
                            "nodeType": "IfStatement",
                            "src": "5226:93:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2517,
                                  "name": "UnbondingPeriodNotPassed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2281,
                                  "src": "5293:24:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5293:26:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2519,
                              "nodeType": "RevertStatement",
                              "src": "5286:33:18"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2526,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "5359:4:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_NewDZapNFTStaking_$2843",
                                        "typeString": "contract NewDZapNFTStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_NewDZapNFTStaking_$2843",
                                        "typeString": "contract NewDZapNFTStaking"
                                      }
                                    ],
                                    "id": 2525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5351:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2524,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5351:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5351:13:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2528,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "5366:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5370:6:18",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5366:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2530,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2492,
                                  "src": "5378:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2521,
                                  "name": "nft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2207,
                                  "src": "5330:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$1739",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                "id": 2523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5334:16:18",
                                "memberName": "safeTransferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1694,
                                "src": "5330:20:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256) external"
                                }
                              },
                              "id": 2531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5330:56:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2532,
                            "nodeType": "ExpressionStatement",
                            "src": "5330:56:18"
                          },
                          {
                            "expression": {
                              "id": 2539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "delete",
                              "prefix": true,
                              "src": "5396:34:18",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2533,
                                    "name": "stakes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2243,
                                    "src": "5403:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                      "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                    }
                                  },
                                  "id": 2536,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2534,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "5410:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5414:6:18",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5410:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5403:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                    "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                  }
                                },
                                "id": 2538,
                                "indexExpression": {
                                  "id": 2537,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2492,
                                  "src": "5422:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "5403:27:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                  "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2540,
                            "nodeType": "ExpressionStatement",
                            "src": "5396:34:18"
                          },
                          {
                            "expression": {
                              "id": 2544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "delete",
                              "prefix": true,
                              "src": "5440:26:18",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 2541,
                                  "name": "tokenOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2247,
                                  "src": "5447:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 2543,
                                "indexExpression": {
                                  "id": 2542,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2492,
                                  "src": "5458:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "5447:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2545,
                            "nodeType": "ExpressionStatement",
                            "src": "5440:26:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2490,
                        "nodeType": "StructuredDocumentation",
                        "src": "4884:212:18",
                        "text": " @notice Withdraws an unstaked NFT after the unbonding period has passed.\n @dev Transfers the NFT from the contract back to the caller.\n @param tokenId ID of the NFT to be withdrawn."
                      },
                      "functionSelector": "2e1a7d4d",
                      "id": 2547,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "withdraw",
                      "nameLocation": "5110:8:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2493,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2492,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "5127:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2547,
                            "src": "5119:15:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2491,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5119:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5118:17:18"
                      },
                      "returnParameters": {
                        "id": 2494,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "5145:0:18"
                      },
                      "scope": 2843,
                      "src": "5101:372:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "baseFunctions": [
                        2154
                      ],
                      "body": {
                        "id": 2600,
                        "nodeType": "Block",
                        "src": "5702:335:18",
                        "statements": [
                          {
                            "condition": {
                              "id": 2560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5716:37:18",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2553,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2243,
                                      "src": "5717:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                      }
                                    },
                                    "id": 2556,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2554,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5724:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2555,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5728:6:18",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5724:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5717:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                      "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                    }
                                  },
                                  "id": 2558,
                                  "indexExpression": {
                                    "id": 2557,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2550,
                                    "src": "5736:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5717:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                    "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                  }
                                },
                                "id": 2559,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5745:8:18",
                                "memberName": "isStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2235,
                                "src": "5717:36:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2564,
                            "nodeType": "IfStatement",
                            "src": "5712:61:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2561,
                                  "name": "NotStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2277,
                                  "src": "5762:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5762:11:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2563,
                              "nodeType": "RevertStatement",
                              "src": "5755:18:18"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2565,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2243,
                                      "src": "5787:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                      }
                                    },
                                    "id": 2568,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 2566,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5794:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2567,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5798:6:18",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5794:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5787:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                      "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                    }
                                  },
                                  "id": 2570,
                                  "indexExpression": {
                                    "id": 2569,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2550,
                                    "src": "5806:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5787:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                    "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                  }
                                },
                                "id": 2571,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5815:11:18",
                                "memberName": "unbondingAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2231,
                                "src": "5787:39:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5830:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5787:44:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2577,
                            "nodeType": "IfStatement",
                            "src": "5783:78:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2574,
                                  "name": "ClaimDelayNotPassed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2283,
                                  "src": "5840:19:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5840:21:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2576,
                              "nodeType": "RevertStatement",
                              "src": "5833:28:18"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2578,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "5875:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5881:9:18",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5875:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2580,
                                        "name": "stakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2243,
                                        "src": "5893:6:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                        }
                                      },
                                      "id": 2583,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 2581,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "5900:3:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2582,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5904:6:18",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "5900:10:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5893:18:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                        "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                      }
                                    },
                                    "id": 2585,
                                    "indexExpression": {
                                      "id": 2584,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2550,
                                      "src": "5912:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5893:27:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                      "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                                    }
                                  },
                                  "id": 2586,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5921:15:18",
                                  "memberName": "rewardClaimedAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2233,
                                  "src": "5893:43:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2587,
                                  "name": "rewardClaimDelay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2225,
                                  "src": "5939:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5893:62:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5875:80:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2593,
                            "nodeType": "IfStatement",
                            "src": "5871:114:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2590,
                                  "name": "ClaimDelayNotPassed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2283,
                                  "src": "5964:19:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5964:21:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2592,
                              "nodeType": "RevertStatement",
                              "src": "5957:28:18"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2595,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "6010:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2596,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6014:6:18",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6010:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2597,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2550,
                                  "src": "6022:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2594,
                                "name": "_claimRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2659,
                                "src": "5996:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 2598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5996:34:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2599,
                            "nodeType": "ExpressionStatement",
                            "src": "5996:34:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2548,
                        "nodeType": "StructuredDocumentation",
                        "src": "5479:170:18",
                        "text": " @notice Claims accumulated rewards for a staked NFT.\n @dev Transfers the reward tokens to the caller.\n @param tokenId ID of the staked NFT."
                      },
                      "functionSelector": "0962ef79",
                      "id": 2601,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "claimRewards",
                      "nameLocation": "5663:12:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2551,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2550,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "5684:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2601,
                            "src": "5676:15:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2549,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5676:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5675:17:18"
                      },
                      "returnParameters": {
                        "id": 2552,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "5702:0:18"
                      },
                      "scope": 2843,
                      "src": "5654:383:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "body": {
                        "id": 2658,
                        "nodeType": "Block",
                        "src": "6280:384:18",
                        "statements": [
                          {
                            "assignments": [
                              2611
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2611,
                                "mutability": "mutable",
                                "name": "stakeInfo",
                                "nameLocation": "6304:9:18",
                                "nodeType": "VariableDeclaration",
                                "scope": 2658,
                                "src": "6290:23:18",
                                "stateVariable": false,
                                "storageLocation": "storage",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2236_storage_ptr",
                                  "typeString": "struct NewDZapNFTStaking.Stake"
                                },
                                "typeName": {
                                  "id": 2610,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 2609,
                                    "name": "Stake",
                                    "nameLocations": [
                                      "6290:5:18"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2236,
                                    "src": "6290:5:18"
                                  },
                                  "referencedDeclaration": 2236,
                                  "src": "6290:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2236_storage_ptr",
                                    "typeString": "struct NewDZapNFTStaking.Stake"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2617,
                            "initialValue": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2612,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2243,
                                  "src": "6316:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref))"
                                  }
                                },
                                "id": 2614,
                                "indexExpression": {
                                  "id": 2613,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2604,
                                  "src": "6323:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6316:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2236_storage_$",
                                  "typeString": "mapping(uint256 => struct NewDZapNFTStaking.Stake storage ref)"
                                }
                              },
                              "id": 2616,
                              "indexExpression": {
                                "id": 2615,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2606,
                                "src": "6329:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6316:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2236_storage",
                                "typeString": "struct NewDZapNFTStaking.Stake storage ref"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "6290:47:18"
                          },
                          {
                            "assignments": [
                              2619
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2619,
                                "mutability": "mutable",
                                "name": "rewards",
                                "nameLocation": "6355:7:18",
                                "nodeType": "VariableDeclaration",
                                "scope": 2658,
                                "src": "6347:15:18",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2618,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6347:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2626,
                            "initialValue": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2621,
                                    "name": "stakeInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2611,
                                    "src": "6383:9:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2236_storage_ptr",
                                      "typeString": "struct NewDZapNFTStaking.Stake storage pointer"
                                    }
                                  },
                                  "id": 2622,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6393:8:18",
                                  "memberName": "stakedAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2229,
                                  "src": "6383:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2623,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "6403:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6409:6:18",
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "6403:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2620,
                                "name": "_calculateRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2742,
                                "src": "6365:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) view returns (uint256)"
                                }
                              },
                              "id": 2625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6365:51:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "6347:69:18"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2627,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2619,
                                "src": "6430:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6440:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6430:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2657,
                            "nodeType": "IfStatement",
                            "src": "6426:232:18",
                            "trueBody": {
                              "id": 2656,
                              "nodeType": "Block",
                              "src": "6443:215:18",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2633,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2604,
                                        "src": "6482:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2634,
                                        "name": "rewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2619,
                                        "src": "6488:7:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2630,
                                        "name": "rewardToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2210,
                                        "src": "6457:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1296",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 2632,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6469:12:18",
                                      "memberName": "safeTransfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1382,
                                      "src": "6457:24:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1296_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1296_$",
                                        "typeString": "function (contract IERC20,address,uint256)"
                                      }
                                    },
                                    "id": 2635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6457:39:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2636,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6457:39:18"
                                },
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "id": 2638,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2604,
                                        "src": "6529:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2639,
                                        "name": "rewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2619,
                                        "src": "6535:7:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2637,
                                      "name": "RewardClaimed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2265,
                                      "src": "6515:13:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,uint256)"
                                      }
                                    },
                                    "id": 2640,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6515:28:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2641,
                                  "nodeType": "EmitStatement",
                                  "src": "6510:33:18"
                                },
                                {
                                  "expression": {
                                    "id": 2647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 2642,
                                        "name": "stakeInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2611,
                                        "src": "6557:9:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Stake_$2236_storage_ptr",
                                          "typeString": "struct NewDZapNFTStaking.Stake storage pointer"
                                        }
                                      },
                                      "id": 2644,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "6567:8:18",
                                      "memberName": "stakedAt",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2229,
                                      "src": "6557:18:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 2645,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967292,
                                        "src": "6578:5:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6584:6:18",
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "6578:12:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6557:33:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2648,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6557:33:18"
                                },
                                {
                                  "expression": {
                                    "id": 2654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 2649,
                                        "name": "stakeInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2611,
                                        "src": "6604:9:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Stake_$2236_storage_ptr",
                                          "typeString": "struct NewDZapNFTStaking.Stake storage pointer"
                                        }
                                      },
                                      "id": 2651,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "6614:15:18",
                                      "memberName": "rewardClaimedAt",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2233,
                                      "src": "6604:25:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 2652,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967292,
                                        "src": "6632:5:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6638:9:18",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "6632:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6604:43:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2655,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6604:43:18"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2602,
                        "nodeType": "StructuredDocumentation",
                        "src": "6043:169:18",
                        "text": " @dev Internal function to claim rewards for a specific staked NFT.\n @param user Address of the user.\n @param tokenId ID of the staked NFT."
                      },
                      "id": 2659,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_claimRewards",
                      "nameLocation": "6226:13:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2607,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2604,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "6248:4:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2659,
                            "src": "6240:12:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2603,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6240:7:18",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2606,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "6262:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2659,
                            "src": "6254:15:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2605,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6254:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "6239:31:18"
                      },
                      "returnParameters": {
                        "id": 2608,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "6280:0:18"
                      },
                      "scope": 2843,
                      "src": "6217:447:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "body": {
                        "id": 2741,
                        "nodeType": "Block",
                        "src": "7119:600:18",
                        "statements": [
                          {
                            "assignments": [
                              2670
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2670,
                                "mutability": "mutable",
                                "name": "len",
                                "nameLocation": "7137:3:18",
                                "nodeType": "VariableDeclaration",
                                "scope": 2741,
                                "src": "7129:11:18",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2669,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7129:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2673,
                            "initialValue": {
                              "expression": {
                                "id": 2671,
                                "name": "rewardRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2221,
                                "src": "7143:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage",
                                  "typeString": "struct NewDZapNFTStaking.RewardRate storage ref[] storage ref"
                                }
                              },
                              "id": 2672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7155:6:18",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7143:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "7129:32:18"
                          },
                          {
                            "body": {
                              "id": 2739,
                              "nodeType": "Block",
                              "src": "7210:503:18",
                              "statements": [
                                {
                                  "assignments": [
                                    2688
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2688,
                                      "mutability": "mutable",
                                      "name": "rate",
                                      "nameLocation": "7242:4:18",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2739,
                                      "src": "7224:22:18",
                                      "stateVariable": false,
                                      "storageLocation": "memory",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                        "typeString": "struct NewDZapNFTStaking.RewardRate"
                                      },
                                      "typeName": {
                                        "id": 2687,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 2686,
                                          "name": "RewardRate",
                                          "nameLocations": [
                                            "7224:10:18"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 2217,
                                          "src": "7224:10:18"
                                        },
                                        "referencedDeclaration": 2217,
                                        "src": "7224:10:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RewardRate_$2217_storage_ptr",
                                          "typeString": "struct NewDZapNFTStaking.RewardRate"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2692,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 2689,
                                      "name": "rewardRates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2221,
                                      "src": "7249:11:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage",
                                        "typeString": "struct NewDZapNFTStaking.RewardRate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2691,
                                    "indexExpression": {
                                      "id": 2690,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2675,
                                      "src": "7261:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7249:14:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardRate_$2217_storage",
                                      "typeString": "struct NewDZapNFTStaking.RewardRate storage ref"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7224:39:18"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2693,
                                      "name": "endBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2664,
                                      "src": "7281:8:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 2694,
                                        "name": "rate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2688,
                                        "src": "7292:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                          "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                        }
                                      },
                                      "id": 2695,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7297:11:18",
                                      "memberName": "blockNumber",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2214,
                                      "src": "7292:16:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7281:27:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2738,
                                  "nodeType": "IfStatement",
                                  "src": "7277:426:18",
                                  "trueBody": {
                                    "id": 2737,
                                    "nodeType": "Block",
                                    "src": "7310:393:18",
                                    "statements": [
                                      {
                                        "assignments": [
                                          2698
                                        ],
                                        "declarations": [
                                          {
                                            "constant": false,
                                            "id": 2698,
                                            "mutability": "mutable",
                                            "name": "blocks",
                                            "nameLocation": "7336:6:18",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 2737,
                                            "src": "7328:14:18",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "typeName": {
                                              "id": 2697,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "7328:7:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "visibility": "internal"
                                          }
                                        ],
                                        "id": 2703,
                                        "initialValue": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2702,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2699,
                                            "name": "endBlock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2664,
                                            "src": "7345:8:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 2700,
                                              "name": "rate",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2688,
                                              "src": "7356:4:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                                "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                              }
                                            },
                                            "id": 2701,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7361:11:18",
                                            "memberName": "blockNumber",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2214,
                                            "src": "7356:16:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7345:27:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "7328:44:18"
                                      },
                                      {
                                        "expression": {
                                          "id": 2709,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 2704,
                                            "name": "totalRewards",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2667,
                                            "src": "7390:12:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "+=",
                                          "rightHandSide": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2708,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2705,
                                              "name": "blocks",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2698,
                                              "src": "7406:6:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 2706,
                                                "name": "rate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2688,
                                                "src": "7415:4:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                                  "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                                }
                                              },
                                              "id": 2707,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "7420:14:18",
                                              "memberName": "rewardPerBlock",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2216,
                                              "src": "7415:19:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "7406:28:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7390:44:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2710,
                                        "nodeType": "ExpressionStatement",
                                        "src": "7390:44:18"
                                      },
                                      {
                                        "expression": {
                                          "id": 2714,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 2711,
                                            "name": "endBlock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2664,
                                            "src": "7452:8:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "expression": {
                                              "id": 2712,
                                              "name": "rate",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2688,
                                              "src": "7463:4:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                                "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                              }
                                            },
                                            "id": 2713,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7468:11:18",
                                            "memberName": "blockNumber",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2214,
                                            "src": "7463:16:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7452:27:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2715,
                                        "nodeType": "ExpressionStatement",
                                        "src": "7452:27:18"
                                      },
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2718,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2716,
                                            "name": "endBlock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2664,
                                            "src": "7501:8:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<=",
                                          "rightExpression": {
                                            "id": 2717,
                                            "name": "startBlock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2662,
                                            "src": "7513:10:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7501:22:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2731,
                                        "nodeType": "IfStatement",
                                        "src": "7497:157:18",
                                        "trueBody": {
                                          "id": 2730,
                                          "nodeType": "Block",
                                          "src": "7525:129:18",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 2727,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "id": 2719,
                                                  "name": "totalRewards",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2667,
                                                  "src": "7547:12:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "+=",
                                                "rightHandSide": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2726,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "components": [
                                                      {
                                                        "commonType": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        },
                                                        "id": 2722,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 2720,
                                                          "name": "endBlock",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2664,
                                                          "src": "7564:8:18",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "-",
                                                        "rightExpression": {
                                                          "id": 2721,
                                                          "name": "startBlock",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2662,
                                                          "src": "7575:10:18",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "src": "7564:21:18",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      }
                                                    ],
                                                    "id": 2723,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "7563:23:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "id": 2724,
                                                      "name": "rate",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2688,
                                                      "src": "7589:4:18",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                                        "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                                      }
                                                    },
                                                    "id": 2725,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "7594:14:18",
                                                    "memberName": "rewardPerBlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2216,
                                                    "src": "7589:19:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "7563:45:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "7547:61:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 2728,
                                              "nodeType": "ExpressionStatement",
                                              "src": "7547:61:18"
                                            },
                                            {
                                              "id": 2729,
                                              "nodeType": "Break",
                                              "src": "7630:5:18"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2734,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2732,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2675,
                                            "src": "7675:1:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "30",
                                            "id": 2733,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7680:1:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "7675:6:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2736,
                                        "nodeType": "IfStatement",
                                        "src": "7671:17:18",
                                        "trueBody": {
                                          "id": 2735,
                                          "nodeType": "Break",
                                          "src": "7683:5:18"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2680,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2675,
                                "src": "7197:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7202:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7197:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2740,
                            "initializationExpression": {
                              "assignments": [
                                2675
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2675,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "7184:1:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2740,
                                  "src": "7176:9:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2674,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7176:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2679,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2676,
                                  "name": "len",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2670,
                                  "src": "7188:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7194:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7188:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7176:19:18"
                            },
                            "isSimpleCounterLoop": false,
                            "loopExpression": {
                              "expression": {
                                "id": 2684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "7205:3:18",
                                "subExpression": {
                                  "id": 2683,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2675,
                                  "src": "7205:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2685,
                              "nodeType": "ExpressionStatement",
                              "src": "7205:3:18"
                            },
                            "nodeType": "ForStatement",
                            "src": "7171:542:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2660,
                        "nodeType": "StructuredDocumentation",
                        "src": "6670:334:18",
                        "text": " @dev Internal function to calculate rewards from a start block to an end block.\n @param startBlock The block number to start calculating rewards from.\n @param endBlock The block number to stop calculating rewards at.\n @return totalRewards The total rewards accumulated from startBlock to endBlock."
                      },
                      "id": 2742,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_calculateRewards",
                      "nameLocation": "7018:17:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2665,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2662,
                            "mutability": "mutable",
                            "name": "startBlock",
                            "nameLocation": "7044:10:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2742,
                            "src": "7036:18:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2661,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7036:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2664,
                            "mutability": "mutable",
                            "name": "endBlock",
                            "nameLocation": "7064:8:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2742,
                            "src": "7056:16:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2663,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7056:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "7035:38:18"
                      },
                      "returnParameters": {
                        "id": 2668,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2667,
                            "mutability": "mutable",
                            "name": "totalRewards",
                            "nameLocation": "7105:12:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2742,
                            "src": "7097:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2666,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7097:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "7096:22:18"
                      },
                      "scope": 2843,
                      "src": "7009:710:18",
                      "stateMutability": "view",
                      "virtual": false,
                      "visibility": "internal"
                    },
                    {
                      "baseFunctions": [
                        2159
                      ],
                      "body": {
                        "id": 2773,
                        "nodeType": "Block",
                        "src": "8025:206:18",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2750,
                                "name": "_rewardPerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2745,
                                "src": "8039:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8058:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8039:20:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2756,
                            "nodeType": "IfStatement",
                            "src": "8035:56:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2753,
                                  "name": "InvalidRewardPerBlock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2287,
                                  "src": "8068:21:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8068:23:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2755,
                              "nodeType": "RevertStatement",
                              "src": "8061:30:18"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2761,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967292,
                                        "src": "8130:5:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8136:6:18",
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "8130:12:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 2763,
                                      "name": "_rewardPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2745,
                                      "src": "8144:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2760,
                                    "name": "RewardRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2217,
                                    "src": "8119:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_RewardRate_$2217_storage_ptr_$",
                                      "typeString": "type(struct NewDZapNFTStaking.RewardRate storage pointer)"
                                    }
                                  },
                                  "id": 2764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8119:41:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                    "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_RewardRate_$2217_memory_ptr",
                                    "typeString": "struct NewDZapNFTStaking.RewardRate memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2757,
                                  "name": "rewardRates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2221,
                                  "src": "8102:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage",
                                    "typeString": "struct NewDZapNFTStaking.RewardRate storage ref[] storage ref"
                                  }
                                },
                                "id": 2759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8114:4:18",
                                "memberName": "push",
                                "nodeType": "MemberAccess",
                                "src": "8102:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage_ptr_$_t_struct$_RewardRate_$2217_storage_$returns$__$attached_to$_t_array$_t_struct$_RewardRate_$2217_storage_$dyn_storage_ptr_$",
                                  "typeString": "function (struct NewDZapNFTStaking.RewardRate storage ref[] storage pointer,struct NewDZapNFTStaking.RewardRate storage ref)"
                                }
                              },
                              "id": 2765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8102:59:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2766,
                            "nodeType": "ExpressionStatement",
                            "src": "8102:59:18"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2768,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "8194:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8200:6:18",
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "8194:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2770,
                                  "name": "_rewardPerBlock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2745,
                                  "src": "8208:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2767,
                                "name": "RewardRateUpdated",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2271,
                                "src": "8176:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256)"
                                }
                              },
                              "id": 2771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8176:48:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2772,
                            "nodeType": "EmitStatement",
                            "src": "8171:53:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2743,
                        "nodeType": "StructuredDocumentation",
                        "src": "7725:225:18",
                        "text": " @notice Updates the number of reward tokens given per block.\n @dev Records the new reward rate along with the current block number.\n @param _rewardPerBlock New number of reward tokens per block."
                      },
                      "functionSelector": "9ef3a261",
                      "id": 2774,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2748,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2747,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "8015:9:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "8015:9:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "8015:9:18"
                        }
                      ],
                      "name": "updateRewardRate",
                      "nameLocation": "7964:16:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2746,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2745,
                            "mutability": "mutable",
                            "name": "_rewardPerBlock",
                            "nameLocation": "7989:15:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2774,
                            "src": "7981:23:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2744,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7981:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "7980:25:18"
                      },
                      "returnParameters": {
                        "id": 2749,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "8025:0:18"
                      },
                      "scope": 2843,
                      "src": "7955:276:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "baseFunctions": [
                        2164
                      ],
                      "body": {
                        "id": 2793,
                        "nodeType": "Block",
                        "src": "8480:119:18",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2782,
                                "name": "_unbondingPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2777,
                                "src": "8494:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8514:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8494:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2788,
                            "nodeType": "IfStatement",
                            "src": "8490:58:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2785,
                                  "name": "InvalidUnbondingPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2289,
                                  "src": "8524:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8524:24:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2787,
                              "nodeType": "RevertStatement",
                              "src": "8517:31:18"
                            }
                          },
                          {
                            "expression": {
                              "id": 2791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2789,
                                "name": "unbondingPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2223,
                                "src": "8558:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 2790,
                                "name": "_unbondingPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2777,
                                "src": "8576:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8558:34:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2792,
                            "nodeType": "ExpressionStatement",
                            "src": "8558:34:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2775,
                        "nodeType": "StructuredDocumentation",
                        "src": "8237:165:18",
                        "text": " @notice Sets the unbonding period.\n @dev Only callable by the contract owner.\n @param _unbondingPeriod New unbonding period in blocks."
                      },
                      "functionSelector": "114eaf55",
                      "id": 2794,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2780,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2779,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "8470:9:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "8470:9:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "8470:9:18"
                        }
                      ],
                      "name": "setUnbondingPeriod",
                      "nameLocation": "8416:18:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2778,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2777,
                            "mutability": "mutable",
                            "name": "_unbondingPeriod",
                            "nameLocation": "8443:16:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2794,
                            "src": "8435:24:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2776,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8435:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8434:26:18"
                      },
                      "returnParameters": {
                        "id": 2781,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "8480:0:18"
                      },
                      "scope": 2843,
                      "src": "8407:192:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "baseFunctions": [
                        2169
                      ],
                      "body": {
                        "id": 2813,
                        "nodeType": "Block",
                        "src": "8856:123:18",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2802,
                                "name": "_rewardClaimDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2797,
                                "src": "8870:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8891:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8870:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2808,
                            "nodeType": "IfStatement",
                            "src": "8866:60:18",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2805,
                                  "name": "InvalidRewardClaimDelay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2291,
                                  "src": "8901:23:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8901:25:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2807,
                              "nodeType": "RevertStatement",
                              "src": "8894:32:18"
                            }
                          },
                          {
                            "expression": {
                              "id": 2811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2809,
                                "name": "rewardClaimDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2225,
                                "src": "8936:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 2810,
                                "name": "_rewardClaimDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2797,
                                "src": "8955:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8936:36:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2812,
                            "nodeType": "ExpressionStatement",
                            "src": "8936:36:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2795,
                        "nodeType": "StructuredDocumentation",
                        "src": "8605:171:18",
                        "text": " @notice Sets the reward claim delay.\n @dev Only callable by the contract owner.\n @param _rewardClaimDelay New reward claim delay in seconds."
                      },
                      "functionSelector": "197916b4",
                      "id": 2814,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2800,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2799,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "8846:9:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "8846:9:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "8846:9:18"
                        }
                      ],
                      "name": "setRewardClaimDelay",
                      "nameLocation": "8790:19:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2798,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2797,
                            "mutability": "mutable",
                            "name": "_rewardClaimDelay",
                            "nameLocation": "8818:17:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2814,
                            "src": "8810:25:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2796,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8810:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8809:27:18"
                      },
                      "returnParameters": {
                        "id": 2801,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "8856:0:18"
                      },
                      "scope": 2843,
                      "src": "8781:198:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "baseFunctions": [
                        2172
                      ],
                      "body": {
                        "id": 2823,
                        "nodeType": "Block",
                        "src": "9129:25:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2820,
                                "name": "_pause",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "9139:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 2821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9139:8:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2822,
                            "nodeType": "ExpressionStatement",
                            "src": "9139:8:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2815,
                        "nodeType": "StructuredDocumentation",
                        "src": "8985:103:18",
                        "text": " @notice Pauses the staking process.\n @dev Only callable by the contract owner."
                      },
                      "functionSelector": "8456cb59",
                      "id": 2824,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2818,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2817,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "9119:9:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "9119:9:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "9119:9:18"
                        }
                      ],
                      "name": "pause",
                      "nameLocation": "9102:5:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2816,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "9107:2:18"
                      },
                      "returnParameters": {
                        "id": 2819,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "9129:0:18"
                      },
                      "scope": 2843,
                      "src": "9093:61:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "baseFunctions": [
                        2175
                      ],
                      "body": {
                        "id": 2833,
                        "nodeType": "Block",
                        "src": "9308:27:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2830,
                                "name": "_unpause",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 894,
                                "src": "9318:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 2831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9318:10:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2832,
                            "nodeType": "ExpressionStatement",
                            "src": "9318:10:18"
                          }
                        ]
                      },
                      "documentation": {
                        "id": 2825,
                        "nodeType": "StructuredDocumentation",
                        "src": "9160:105:18",
                        "text": " @notice Unpauses the staking process.\n @dev Only callable by the contract owner."
                      },
                      "functionSelector": "3f4ba83a",
                      "id": 2834,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [
                        {
                          "id": 2828,
                          "kind": "modifierInvocation",
                          "modifierName": {
                            "id": 2827,
                            "name": "onlyOwner",
                            "nameLocations": [
                              "9298:9:18"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89,
                            "src": "9298:9:18"
                          },
                          "nodeType": "ModifierInvocation",
                          "src": "9298:9:18"
                        }
                      ],
                      "name": "unpause",
                      "nameLocation": "9279:7:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2826,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "9286:2:18"
                      },
                      "returnParameters": {
                        "id": 2829,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "9308:0:18"
                      },
                      "scope": 2843,
                      "src": "9270:65:18",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "external"
                    },
                    {
                      "body": {
                        "id": 2841,
                        "nodeType": "Block",
                        "src": "9399:28:18",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 2839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9416:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 2838,
                            "id": 2840,
                            "nodeType": "Return",
                            "src": "9409:11:18"
                          }
                        ]
                      },
                      "functionSelector": "8dd0cdf3",
                      "id": 2842,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "checkUpgradebility",
                      "nameLocation": "9351:18:18",
                      "nodeType": "FunctionDefinition",
                      "parameters": {
                        "id": 2835,
                        "nodeType": "ParameterList",
                        "parameters": [],
                        "src": "9369:2:18"
                      },
                      "returnParameters": {
                        "id": 2838,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2837,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 2842,
                            "src": "9394:4:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2836,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9394:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "9393:6:18"
                      },
                      "scope": 2843,
                      "src": "9342:85:18",
                      "stateMutability": "pure",
                      "virtual": false,
                      "visibility": "external"
                    }
                  ],
                  "scope": 2844,
                  "src": "862:8567:18",
                  "usedErrors": [
                    30,
                    35,
                    211,
                    214,
                    475,
                    480,
                    758,
                    761,
                    940,
                    953,
                    1349,
                    1765,
                    1770,
                    1773,
                    2273,
                    2275,
                    2277,
                    2279,
                    2281,
                    2283,
                    2285,
                    2287,
                    2289,
                    2291
                  ],
                  "usedEvents": [
                    41,
                    219,
                    750,
                    755,
                    919,
                    2253,
                    2259,
                    2265,
                    2271
                  ]
                }
              ],
              "src": "32:9398:18"
            },
            "id": 18
          }
        }
      },
      "solcInput": {
        "sources": {
          "contracts/newDZapNFTStaking.sol": {
            "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"./interface/IDZapNFTStaking.sol\";\n\n/**0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d  0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d\n * @title DZapNFTStaking\n * @dev Contract for staking NFTs and earning ERC20 rewards.\n */\ncontract NewDZapNFTStaking is Initializable, UUPSUpgradeable, OwnableUpgradeable, PausableUpgradeable, ERC721HolderUpgradeable, IDZapNFTStaking {\n    using SafeERC20 for IERC20;\n\n    IERC721 public nft;\n    IERC20 public rewardToken;\n    address public admin;\n\n    struct RewardRate {\n        uint256 blockNumber;\n        uint256 rewardPerBlock;\n    }\n\n    RewardRate[] public rewardRates;\n\n    uint256 public unbondingPeriod;\n    uint256 public rewardClaimDelay;\n\n    struct Stake {\n        uint256 tokenId;\n        uint256 stakedAt;\n        uint256 unbondingAt;\n        uint256 rewardClaimedAt;\n        bool isStaked;\n    }\n\n    mapping(address => mapping(uint256 => Stake)) public stakes;\n    mapping(uint256 => address) public tokenOwner;\n\n    event Staked(address indexed user, uint256 tokenId);\n    event Unstaked(address indexed user, uint256 tokenId);\n    event RewardClaimed(address indexed user, uint256 amount);\n    event RewardRateUpdated(uint256 blockNumber, uint256 rewardPerBlock);\n\n    error NotTokenOwner();\n    error AlreadyStaked();\n    error NotStaked();\n    error InvalidToken();\n    error UnbondingPeriodNotPassed();\n    error ClaimDelayNotPassed();\n    error StakingPaused();\n    error InvalidRewardPerBlock();\n    error InvalidUnbondingPeriod();\n    error InvalidRewardClaimDelay();\n\n    /**\n     * @dev Initializes the contract by setting the admin, NFT contract, reward token contract, reward per block, unbonding period, and reward claim delay.\n     * @param _admin Address of the contract admin.\n     * @param _nft Address of the NFT contract.\n     * @param _rewardToken Address of the reward token contract.\n     * @param _rewardPerBlock Number of reward tokens given per block.\n     * @param _unbondingPeriod Number of blocks required to wait before withdrawing an unstaked NFT.\n     * @param _rewardClaimDelay Number of seconds required to wait before claiming rewards.\n     */\n    function initialize(\n        address _admin,\n        address _nft,\n        address _rewardToken,\n        uint256 _rewardPerBlock,\n        uint256 _unbondingPeriod,\n        uint256 _rewardClaimDelay\n    ) public initializer {\n        __UUPSUpgradeable_init();\n        __Ownable_init(_admin);\n        __Pausable_init();\n\n        admin = _admin;\n        nft = IERC721(_nft);\n        rewardToken = IERC20(_rewardToken);\n        rewardRates.push(RewardRate(block.number, _rewardPerBlock));\n        unbondingPeriod = _unbondingPeriod;\n        rewardClaimDelay = _rewardClaimDelay;\n    }\n\n    /**\n     * @dev Authorizes the upgrade to a new implementation.\n     * @param newImplementation Address of the new implementation contract.\n     */\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n\n    /**\n     * @notice Stakes an NFT to earn rewards.\n     * @dev Transfers the NFT from the caller to the contract.\n     * @param tokenId ID of the NFT to be staked.\n     */\n    function stake(uint256 tokenId) external whenNotPaused {\n        if (stakes[msg.sender][tokenId].isStaked) revert AlreadyStaked();\n        if (nft.ownerOf(tokenId) != msg.sender) revert NotTokenOwner();\n\n        _claimRewards(msg.sender, tokenId);\n\n        nft.safeTransferFrom(msg.sender, address(this), tokenId);\n        stakes[msg.sender][tokenId] = Stake({\n            tokenId: tokenId,\n            stakedAt: block.number,\n            unbondingAt: 0,\n            rewardClaimedAt: block.timestamp,\n            isStaked: true\n        });\n        tokenOwner[tokenId] = msg.sender;\n        emit Staked(msg.sender, tokenId);\n    }\n\n    /**\n     * @notice Unstakes an NFT.\n     * @dev Sets the unbonding period for the staked NFT.\n     * @param tokenId ID of the NFT to be unstaked.\n     */\n    function unstake(uint256 tokenId) external whenNotPaused {\n        if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked();\n\n        _claimRewards(msg.sender, tokenId);\n\n        stakes[msg.sender][tokenId].unbondingAt = block.number + unbondingPeriod;\n        emit Unstaked(msg.sender, tokenId);\n    }\n\n    /**\n     * @notice Withdraws an unstaked NFT after the unbonding period has passed.\n     * @dev Transfers the NFT from the contract back to the caller.\n     * @param tokenId ID of the NFT to be withdrawn.\n     */\n    function withdraw(uint256 tokenId) external {\n        if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked();\n        if (block.number < stakes[msg.sender][tokenId].unbondingAt) revert UnbondingPeriodNotPassed();\n\n        nft.safeTransferFrom(address(this), msg.sender, tokenId);\n        delete stakes[msg.sender][tokenId];\n        delete tokenOwner[tokenId];\n    }\n\n    /**\n     * @notice Claims accumulated rewards for a staked NFT.\n     * @dev Transfers the reward tokens to the caller.\n     * @param tokenId ID of the staked NFT.\n     */\n    function claimRewards(uint256 tokenId) external {\n        if (!stakes[msg.sender][tokenId].isStaked) revert NotStaked();\n        if (stakes[msg.sender][tokenId].unbondingAt != 0) revert ClaimDelayNotPassed();\n        if (block.timestamp < stakes[msg.sender][tokenId].rewardClaimedAt + rewardClaimDelay) revert ClaimDelayNotPassed();\n\n        _claimRewards(msg.sender, tokenId);\n    }\n\n    /**\n     * @dev Internal function to claim rewards for a specific staked NFT.\n     * @param user Address of the user.\n     * @param tokenId ID of the staked NFT.\n     */\n    function _claimRewards(address user, uint256 tokenId) internal {\n        Stake storage stakeInfo = stakes[user][tokenId];\n        uint256 rewards = _calculateRewards(stakeInfo.stakedAt, block.number);\n        if (rewards > 0) {\n            rewardToken.safeTransfer(user, rewards);\n            emit RewardClaimed(user, rewards);\n            stakeInfo.stakedAt = block.number;\n            stakeInfo.rewardClaimedAt = block.timestamp;\n        }\n    }\n\n    /**\n     * @dev Internal function to calculate rewards from a start block to an end block.\n     * @param startBlock The block number to start calculating rewards from.\n     * @param endBlock The block number to stop calculating rewards at.\n     * @return totalRewards The total rewards accumulated from startBlock to endBlock.\n     */\n    function _calculateRewards(uint256 startBlock, uint256 endBlock) internal view returns (uint256 totalRewards) {\n        uint256 len = rewardRates.length;\n        for (uint256 i = len - 1; i >= 0; i--) {\n            RewardRate memory rate = rewardRates[i];\n            if (endBlock > rate.blockNumber) {\n                uint256 blocks = endBlock - rate.blockNumber;\n                totalRewards += blocks * rate.rewardPerBlock;\n                endBlock = rate.blockNumber;\n                if (endBlock <= startBlock) {\n                    totalRewards += (endBlock - startBlock) * rate.rewardPerBlock;\n                    break;\n                }\n                if (i == 0) break;\n            }\n        }\n    }\n\n    /**\n     * @notice Updates the number of reward tokens given per block.\n     * @dev Records the new reward rate along with the current block number.\n     * @param _rewardPerBlock New number of reward tokens per block.\n     */\n    function updateRewardRate(uint256 _rewardPerBlock) external onlyOwner {\n        if (_rewardPerBlock == 0) revert InvalidRewardPerBlock();\n\n        rewardRates.push(RewardRate(block.number, _rewardPerBlock));\n        emit RewardRateUpdated(block.number, _rewardPerBlock);\n    }\n\n    /**\n     * @notice Sets the unbonding period.\n     * @dev Only callable by the contract owner.\n     * @param _unbondingPeriod New unbonding period in blocks.\n     */\n    function setUnbondingPeriod(uint256 _unbondingPeriod) external onlyOwner {\n        if (_unbondingPeriod == 0) revert InvalidUnbondingPeriod();\n        unbondingPeriod = _unbondingPeriod;\n    }\n\n    /**\n     * @notice Sets the reward claim delay.\n     * @dev Only callable by the contract owner.\n     * @param _rewardClaimDelay New reward claim delay in seconds.\n     */\n    function setRewardClaimDelay(uint256 _rewardClaimDelay) external onlyOwner {\n        if (_rewardClaimDelay == 0) revert InvalidRewardClaimDelay();\n        rewardClaimDelay = _rewardClaimDelay;\n    }\n\n    /**\n     * @notice Pauses the staking process.\n     * @dev Only callable by the contract owner.\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Unpauses the staking process.\n     * @dev Only callable by the contract owner.\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n\n    function checkUpgradebility() external pure returns(bool){\n        return true;\n    }\n}\n"
          },
          "contracts/interface/IDZapNFTStaking.sol": {
            "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ninterface IDZapNFTStaking {\n\n    function stake(uint256 tokenId) external;\n    function unstake(uint256 tokenId) external;\n    function withdraw(uint256 tokenId) external;\n    function claimRewards(uint256 tokenId) external;\n    function updateRewardRate(uint256 _rewardPerBlock) external;\n    function setUnbondingPeriod(uint256 _unbondingPeriod) external;\n    function setRewardClaimDelay(uint256 _rewardClaimDelay) external;\n    function pause() external;\n    function unpause() external;\n}\n"
          },
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
          },
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
          },
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
          },
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
          },
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
          },
          "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n * {IERC721-setApprovalForAll}.\n */\nabstract contract ERC721HolderUpgradeable is Initializable, IERC721Receiver {\n    function __ERC721Holder_init() internal onlyInitializing {\n    }\n\n    function __ERC721Holder_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
          },
          "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
          },
          "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
          },
          "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
          },
          "@openzeppelin/contracts/utils/Address.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
          },
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
          },
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
          },
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
          },
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
          },
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
          },
          "@openzeppelin/contracts/utils/StorageSlot.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
          },
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
            "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
          }
        },
        "target": "contracts/newDZapNFTStaking.sol"
      }
    }
  }
}